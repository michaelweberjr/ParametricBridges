{
  "Uuid": "a0adfa86-9661-4021-ac97-d140596c5195",
  "IsCustomNode": false,
  "Description": null,
  "Name": "dynamo_bridge",
  "ElementResolver": {
    "ResolutionMap": {
      "Vector": {
        "Key": "Autodesk.DesignScript.Geometry.Vector",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "06f03271-9e50-46a0-a3ce-a862b9e04324-0004d779"
      ],
      "Id": "3083fc96270946bb9b778502a1dde6d4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "099e6bd3f4d7435d813efc489cbb920d",
          "Name": "Element",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "CAD.CurvesFromCADLayers@Revit.Elements.Element,string[],bool,string[]",
      "Id": "23577b7b660849c3b1be1378abe2b99b",
      "Inputs": [
        {
          "Id": "4cc5b15975344a16bd97778ce2ec5176",
          "Name": "importInstance",
          "Description": "Input the ImportInstance to convert to curves.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4ec034ce058438586459813ad04dc5c",
          "Name": "layerNames",
          "Description": "Enter the layer names for conversion. Leave unconnected to convert all layers. Names are case-sensitive.\n\nstring[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "490ebc76fec54e9983dff0367a8db327",
          "Name": "createModelCurves",
          "Description": "Set to True to convert into Revit Model Lines.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69259cd12b3e4ff492af53f4fda2a767",
          "Name": "lineStyleMap",
          "Description": "Enter the LineStyle name to map to each layer. Longest lacing is used by default.\n\nstring[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "895e82add0664e5e93a1556a057f5822",
          "Name": "Curve[][]",
          "Description": "Curve[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a12898ad6ab94ae49664347c40f9143d",
          "Name": "layerKeys[]",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Convert curves from a CAD link or import by layer name. Curves are organised into sublists by layer. Enter LineStyle names to map to each layer during conversion.\r\rThe node is optimised to convert curve types that typically fail when using Dynamo Element.Curves node or Revit Explode.\r\rVisit bimorph.com/bimorph-nodes for support.\n\nCAD.CurvesFromCADLayers (importInstance: Element, layerNames: string[] = null, createModelCurves: bool = false, lineStyleMap: string[] = null): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "0db5fc1f9db740e9a161f2f66cb58934",
      "Inputs": [
        {
          "Id": "ca848f3599294a8d8105e92e8edf948d",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31c4304a63c34563bf2f52080adc8bdf",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b37ef4b54da24edbaa17288fd1608ac9",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PullOntoPlane@Autodesk.DesignScript.Geometry.Plane",
      "Id": "a3ebd8e865f841239d6f25a3384d522c",
      "Inputs": [
        {
          "Id": "1eb57ec0718842c59f1b28250b3b18ea",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c7ca5fa792645d0ba2c547e420dff04",
          "Name": "plane",
          "Description": "The plane on which to pull the curve\n\nPlane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63f456f73c2f4a8abbf624a4337498da",
          "Name": "Curve",
          "Description": "A Curve on the Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a curve by pulling onto plane\n\nCurve.PullOntoPlane (plane: Plane): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.XY",
      "Id": "07dd4f5ee2484216a9e3a365d39cc3b7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c546946a0b2e40a4930f4e3556a41bd9",
          "Name": "Plane",
          "Description": "Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a plane in the world XY\n\nPlane.XY ( ): Plane"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.NormalAtParameter@double",
      "Id": "43f8e036820e4f3c84edeb67af94a1d3",
      "Inputs": [
        {
          "Id": "657cf72f1f134370bc5b86dbe1d1ee60",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a31120ac9a74716876075c4998bca20",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3251505f3bae42cea41c91eeda90c15a",
          "Name": "Vector",
          "Description": "A Vector perpendicular to the curve at param",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Get a Vector perpendicular to the curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.NormalAtParameter (param: double = 0): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Id": "7db8d636024d498291e462037a6a45be",
      "Inputs": [
        {
          "Id": "b1d4be43c8cd477ab3de916a3460bbfd",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4264654ef2db4c5e875c15b721a6c5d9",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Id": "fcd87bcc9a8a4a3888d98cd0bd19180c",
      "Inputs": [
        {
          "Id": "2bbcd31214464128915ca151bbdee2ec",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d096885148d1468498ec95546a6967ee",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "07725cfbe14540e7be912f71d888eb1b",
      "Inputs": [
        {
          "Id": "143ae78fb0ae4febb44731d6638a62b9",
          "Name": "x",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9feca3b977714ef6afccecfa82b871cb",
          "Name": "y",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f33c67e71d5464a8ebffb5aaa81233b",
          "Name": "z",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "168a9121de2b4169ac107b1a4a715cbf",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.ByOriginXAxisYAxis@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "a8c895c1ce8441049c17932839887285",
      "Inputs": [
        {
          "Id": "b165b38c21614099a8b28ebfe2c16dde",
          "Name": "origin",
          "Description": "Point\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcc51781aa694ca190c93dc3babf03f1",
          "Name": "xAxis",
          "Description": "Vector\nDefault value : Autodesk.DesignScript.Geometry.Vector.ByCoordinates(1, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee983c4794fe4835b7ce7a3dd22f5270",
          "Name": "yAxis",
          "Description": "Vector\nDefault value : Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 1, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f52f6e3ac11f46d4ad46d9c8078bf83e",
          "Name": "Plane",
          "Description": "Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The X and Y axis lie in the plane. The Z axis is the cross product of the two Vectors.\n\nPlane.ByOriginXAxisYAxis (origin: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), xAxis: Vector = Autodesk.DesignScript.Geometry.Vector.ByCoordinates(1, 0, 0), yAxis: Vector = Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 1, 0)): Plane"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ParameterAtPoint@Autodesk.DesignScript.Geometry.Point",
      "Id": "2e2af0a5383844a6a9a76f844b0f0442",
      "Inputs": [
        {
          "Id": "d0a2d7a9278d454e89d0f0e934654606",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a85035c62914468bc314af0af248698",
          "Name": "point",
          "Description": "A Point along or near the Curve\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce6b9971e0594c96a3ee44eb0ab845d9",
          "Name": "double",
          "Description": "The closest parameter along the curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Get the parameter at a particular point along the Curve\n\nCurve.ParameterAtPoint (point: Point): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "71c97f75d0c84bc7833e68a33d67a79f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8c881ec4e34e4edca82a3901a6c82328",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "UpperCurvePoints;",
      "Id": "09f7bb7dc217412ebe9fa6fd3c6ecba0",
      "Inputs": [
        {
          "Id": "f149eb48384e440abd50b90bf9ca3101",
          "Name": "UpperCurvePoints",
          "Description": "UpperCurvePoints",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2be1d2012f3c4f5887f4c59690bf0492",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "3c2cb69bc4d3488382e3be7909835e38",
      "Inputs": [
        {
          "Id": "aace9f1f5f414875a6d6fd480c8e029f",
          "Name": "startPoint",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fbf8000f440e44ae96ebfec765ae91b3",
          "Name": "endPoint",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8a71489775d44fdb0859927ce48adb4",
          "Name": "Line",
          "Description": "Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.StructuralFraming.BeamByCurve@Autodesk.DesignScript.Geometry.Curve,Revit.Elements.Level,Revit.Elements.FamilyType",
      "Id": "91a39b11ec7c445e8c6b8fb7f3256c83",
      "Inputs": [
        {
          "Id": "18490bbe6b3749d082ee6411d3b6f063",
          "Name": "curve",
          "Description": "The curve which defines the center line of the beam.\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "062c4c631022442daaaf30cd0a629d23",
          "Name": "level",
          "Description": "The level with which you'd like the beam to be associated.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31ec749c36e6414e9cca87c7d40ac93b",
          "Name": "structuralFramingType",
          "Description": "The structural framing type representing the beam.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33a70e7faf4846e499aff778bdd1606b",
          "Name": "StructuralFraming",
          "Description": "StructuralFraming",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a beam.\n\nStructuralFraming.BeamByCurve (curve: Curve, level: Level, structuralFramingType: FamilyType): StructuralFraming"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Levels, DSRevitNodesUI",
      "SelectedIndex": 0,
      "NodeType": "ExtensionNode",
      "Id": "36885b3fdd1b49bb87b3ae713abf2c40",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eff12a05a3e2468ca9acbc9db0ca858d",
          "Name": "Levels",
          "Description": "The selected Levels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a level in the active document"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 4,
      "MaximumValue": 20,
      "MinimumValue": 1,
      "StepValue": 1,
      "Id": "aea864467f3440cb89ab999bc17934b2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "495fde95271446b7a7124010d3084cf6",
          "Name": "",
          "Description": "Int32",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.667,
      "Id": "ae8e093126964b0baeed95dc9a9ab6b3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7b8b62a4924843ed943051f6ccc6d7a9",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 30.0,
      "Id": "ea12697112184609968694254852fe03",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a1b1c0a44536463782512b14559c3f3d",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "a79c21017da0427fa2483d56d94daa4b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f1369cd304104bcb9da4f08fecc75c60",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "2ea8bfc9c31e424cb9b34054b42e630d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fb8e60013ede4193ab228331e8d3f3d0",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\npier_count = IN[0] - 1\r\n# start abutment is at 0\r\npier_loc = [ 0.0 ]\r\n\r\n# add piers at even spaced intervals\r\nif pier_count > 0:\r\n\tfor i in range(0, pier_count):\r\n\t\tpier_loc.append((i + 1.0)  / (pier_count + 1.0))\r\n\t\t\r\n# end abutment is at 1\r\npier_loc.append(1.0)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = pier_loc",
      "VariableInputPorts": true,
      "Id": "0f10819ff1f14f9ca647ed195e44acb9",
      "Inputs": [
        {
          "Id": "203f252f94cc45ebbfbe2dd6261e5ae4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba5abc45e87946769f9cf74b7a7c89a6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# a simple function \r\ndef join_list(lst1, lst2):\r\n\tlst = []\r\n\tfor itm in lst1:\r\n\t\tlst.append(itm)\r\n\tfor itm in reversed(lst2):\r\n\t\tlst.append(itm)\r\n\treturn lst\r\n\r\n# genenerates a list of points for a bearing line\r\ndef gen_bearing(crown_pnt, perp_XAxis, width, slope_left, slope_right, girders):\r\n\t# list of points to return\r\n\tdeck = []\r\n\t# sets up two points that are at each deck end shifted in the z-axis by the slope\r\n\tpnt_1 = Geometry.Translate(crown_pnt, perp_XAxis, -width)\r\n\tpnt_1 = Geometry.Translate(pnt_1, Vector.ZAxis(), slope_left*width)\r\n\tpnt_2 = Geometry.Translate(crown_pnt, perp_XAxis, width)\r\n\tpnt_2 = Geometry.Translate(pnt_2, Vector.ZAxis(), slope_right*width)\r\n\t\r\n\t# start at the left end\r\n\tdeck.append(pnt_1)\r\n\t\r\n\t# create the points from left to right, one point at each girder location and one point at the crown if there is an event number of girders\r\n\tg_pnts_h = [ Geometry.Translate(crown_pnt, perp_XAxis, g-width) for g in girders ]\r\n\tfor i in range(len(girders)):\r\n\t\tif girders[i] < width:\r\n\t\t\tdeck.append(Geometry.Translate(g_pnts_h[i], Vector.ZAxis(), slope_left*(width-girders[i])))\r\n\t\telif girders[i] > width:\r\n\t\t\tif i > 0 and girders[i - 1] < width:\r\n\t\t\t\tdeck.append(crown_pnt)\r\n\t\t\tdeck.append(Geometry.Translate(g_pnts_h[i], Vector.ZAxis(), slope_right*(girders[i] - width)))\r\n\t\telif girders[i] == width:\r\n\t\t\tdeck.append(crown_pnt)\r\n\t\t\t\r\n\tdeck.append(pnt_2)\r\n\treturn deck\r\n\r\n# input values\r\nbearing_lines = IN[0]\r\nperp_planes = IN[1]\r\nwidth = IN[2]/2.0\r\nslope_left = IN[3]\r\nslope_right = IN[4]\r\ngirder_cnt = IN[5]\r\noverhang = IN[6]\r\n\r\n# calculate girder spacing and determine girder locations\r\nspacing = (width*2.0 - 2.0 * overhang) / (girder_cnt - 1)\r\ngirder_loc = [ overhang + i * spacing for i in range(int(girder_cnt)) ]\r\n\r\n# calculate all of the points at each bearing line\r\nbearing_rect = [ gen_bearing(bearing_lines[i], perp_planes[i].XAxis, width, slope_left, slope_right, girder_loc) for i in range(len(bearing_lines)) ]\r\n\r\n# we join two bearing lines to a single list so that a surface can be \r\n# created for each deck segment\r\nspans = [ join_list(bearing_rect[i], bearing_rect[i+1]) for i in range(len(bearing_rect) - 1) ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = spans",
      "VariableInputPorts": true,
      "Id": "194b88f33fe94f749367c28b24b8bd7d",
      "Inputs": [
        {
          "Id": "44ac25c8bb944cfb9b541bfa5d5324a1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c54fd305098f49b0a078105cabc2545a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "beadca67cd614ce4b33e41d744021feb",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ce43e390cb14a34bbffe82e71c6d920",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f21f8b4d46641bb8e16ac779940b393",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84b53133c7c74e24a923fec449aff86a",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0aeb0381f32f471c8bbb7f0030129ec2",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "554c63dc94f24f3797cb398d42683186",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "693ae8546692467eb54595528e1c40cc",
      "Inputs": [
        {
          "Id": "d6e84764f06f43ffae552360014fef5c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a11ef96ce0514c3f9d3dae33a94ea5ee",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "651ace389cc240419cc8f570e6ba60f1",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "22db744e12124371b35b61c0a12da076",
      "Inputs": [
        {
          "Id": "dea92b0051e24fb48a9d908709cdb077",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63819df1e15d4174a30dec2ef06c0028",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df29d4facfeb40859531b7ea2a6ca809",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "461dc81f0f73445595217819f6c3b819",
      "Inputs": [
        {
          "Id": "be366bc1431a4ab081c46e419efe408c",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af28c5cefd5242f6a55229e1ded38aee",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dbde32b314ef48dd8b3bc446d00c8b9c",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e2116351369431ea4f4bca435a17c08",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-x;",
      "Id": "b523e397f0f744979655bbb19ae3632d",
      "Inputs": [
        {
          "Id": "d29c26867a694bb88dc588bb7f92198a",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a08073d067e74649920ee75fe42326dc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "e05c42664a9c48b7a110579501250f15",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ca6222d6af274c88bf30012953d062f6",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 1130,
      "NodeType": "ExtensionNode",
      "Id": "9b43ede015784331877bc9dbf54ae58c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f4c8a1938d074e24a2347b7c89bd76a7",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All family types available in the document."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 20.0,
      "MinimumValue": 2.0,
      "StepValue": 1.0,
      "InputValue": 6.0,
      "Id": "2e02e179473146ee958541b8b1d2a7a7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "48dace9f76374190af52e03b8d055ba7",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 3.0,
      "Id": "e2457d70018b470b838d23a9609dbf9a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "19418e72e3b74e60aeeb66b9edf2677b",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.167,
      "Id": "44a949fe957e4e9dba41ffb740a103d1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "108315444590405c83a959ccf4895266",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.25,
      "Id": "ddbec0cc9ed843c1b9fb9ca5f48bcdee",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dc32a8d60ac644b0b227b3a1d0bbb21e",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Returns the start points of each girder at a bearing line to be feed into Line.ByStartPointEndPoint\r\ndef gen_girderlines(deck_pnts, girder_cnt, depth, haunch):\r\n\t# this section determines where in the list are girder points and not just deck end points or crown point (if even # of girders)\r\n\tstart_pnt = 1\r\n\tend_pnt = int(4 + girder_cnt*2 if girder_cnt % 2 == 0 else girder_cnt*2 + 2)\r\n\t# We need to setup a plane parrallel to the girder so that we can offset it from the bearing line\r\n\tdir_vector = Vector.ByTwoPoints(deck_pnts[start_pnt], deck_pnts[end_pnt]).Normalized()\r\n\tdir = Plane.ByOriginNormal(deck_pnts[start_pnt], dir_vector)\r\n\tdir_vector = Vector.Rotate(dir_vector, dir.YAxis, 90)\r\n\tdir = Plane.ByOriginNormal(deck_pnts[start_pnt], dir_vector)\r\n\t\r\n\t# creates a list of points at the girders and applies the joint offset\r\n\tgirders = []\r\n\twhile(start_pnt <= (girder_cnt + 1 if girder_cnt % 2 == 0 else girder_cnt)):\r\n\t\tif girder_cnt % 2 == 0 and start_pnt == girder_cnt / 2 + 1:\r\n\t\t\tstart_pnt += 1\r\n\t\t\tcontinue\r\n\t\tgirder = Geometry.Translate(deck_pnts[start_pnt], Vector.ZAxis(), -haunch)\r\n\t\tgirder = Geometry.Translate(girder, dir.XAxis, -joint)\r\n\t\tstart_pnt += 1\r\n\t\tgirders.append(girder)\r\n\treturn girders\r\n\r\n#input values\r\ngirder_cnt = IN[0]\r\nbeam_depth = IN[1]\r\ndeck_geo = IN[2]\r\nhaunch = IN[3]\r\njoint = IN[4]\r\n\r\n# get the girder points at each bearing line\r\ngirder_lines = [ gen_girderlines(deck_line, girder_cnt, beam_depth, haunch) for deck_line in deck_geo ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = girder_lines",
      "VariableInputPorts": true,
      "Id": "be368abd9a3c4d6888ee98ba76b9ee3b",
      "Inputs": [
        {
          "Id": "47886b5f5b4b4953ad79be782d322382",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "850f01386f784e38add855f3f5e25f31",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a39c0caa5d9d43bfa094a1b8b64ce356",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0b0ffe9bbff44b1a7aded3b3f77ca6b",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "226f1213bbc1416491cc56c46df0b0f1",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d5b3596b00a41f7a692aa5acb0ed38b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Returns the start points of each girder at a bearing line to be feed into Line.ByStartPointEndPoint\r\ndef gen_girderlines(deck_pnts, girder_cnt, depth, haunch):\r\n\t# this section determines where in the list are girder points and not just deck end points or crown point (if even # of girders)\r\n\tstart_pnt = 1\r\n\tend_pnt = int(4 + girder_cnt*2 if girder_cnt % 2 == 0 else girder_cnt*2 + 2)\r\n\t# We need to setup a plane parrallel to the girder so that we can offset it from the bearing line\r\n\tdir_vector = Vector.ByTwoPoints(deck_pnts[start_pnt], deck_pnts[end_pnt]).Normalized()\r\n\tdir = Plane.ByOriginNormal(deck_pnts[end_pnt], dir_vector)\r\n\tdir_vector = Vector.Rotate(dir_vector, dir.YAxis, 90)\r\n\tdir = Plane.ByOriginNormal(deck_pnts[end_pnt], dir_vector)\r\n\t\r\n\t# creates a list of points at the girders and applies the joint offset\r\n\tgirders = []\r\n\twhile(start_pnt <= (girder_cnt + 1 if girder_cnt % 2 == 0 else girder_cnt)):\r\n\t\tif girder_cnt % 2 == 0 and start_pnt == girder_cnt / 2 + 1:\r\n\t\t\tstart_pnt += 1\r\n\t\t\tend_pnt -= 1\r\n\t\t\tcontinue\r\n\t\tgirder = Geometry.Translate(deck_pnts[end_pnt], Vector.ZAxis(), -haunch)\r\n\t\tgirder = Geometry.Translate(girder, dir.XAxis, joint)\r\n\t\tstart_pnt += 1\r\n\t\tend_pnt -= 1\r\n\t\tgirders.append(girder)\r\n\treturn girders\r\n\r\n#input values\r\ngirder_cnt = IN[0]\r\nbeam_depth = IN[1]\r\ndeck_geo = IN[2]\r\nhaunch = IN[3]\r\njoint = IN[4]\r\n\r\n# get the girder points at each bearing line\r\ngirder_lines = [ gen_girderlines(deck_line, girder_cnt, beam_depth, haunch) for deck_line in deck_geo ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = girder_lines",
      "VariableInputPorts": true,
      "Id": "cd0728af96f4410c96737724b5ea852a",
      "Inputs": [
        {
          "Id": "4ebb1e645cd04fa2ab43f198a62b6ca3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fea4e31ba5c466ca7ab00c5cec4416c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98d530a0370a437cb2f3a73bbdd33312",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aed4b9e82f2544e99cd9a7784fd67c51",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f3505e84fea487589b4fa470a85da8e",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a0d2055e2004cd8806de01036466077",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1.0,
      "Id": "8d8ca65b2456495ab008dae9e3721ae4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "677063a0ad914519a7c569f585387154",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.25,
      "Id": "dea0a4afbfbe4b6d8eacc90d81f63630",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "978fc6cee4e34b01beb0239546532605",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 3.0,
      "Id": "b5152a0bb3344ce8ac911a3f711c14b1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9dbc8973e3574bf380789dfe8e6c68ae",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 6.0,
      "Id": "e55611d86fb74ead91930a14da547ad4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8d446fd6f77b4e3b93f2fc8d65d17ca5",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": -4.0,
      "Id": "4bcbc0ecf51f46a4a89638ae4c30e086",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d563dd54149349769b4aef2274964935",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.ByOriginXAxisYAxis@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "d5afed2ff72342b88258af59950b8a36",
      "Inputs": [
        {
          "Id": "1c39459783b34a1298ecec9b6f173450",
          "Name": "origin",
          "Description": "Point\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08c69559d28540e8951c4647220fecec",
          "Name": "xAxis",
          "Description": "Vector\nDefault value : Autodesk.DesignScript.Geometry.Vector.ByCoordinates(1, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c09d46fd63a4c04961e27433ae28e58",
          "Name": "yAxis",
          "Description": "Vector\nDefault value : Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 1, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f75915bb72e4a838931bc3a308ea63f",
          "Name": "Plane",
          "Description": "Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The X and Y axis lie in the plane. The Z axis is the cross product of the two Vectors.\n\nPlane.ByOriginXAxisYAxis (origin: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), xAxis: Vector = Autodesk.DesignScript.Geometry.Vector.ByCoordinates(1, 0, 0), yAxis: Vector = Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 1, 0)): Plane"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.NormalAtParameter@double",
      "Id": "a4bf82c3f8fc4d12bdf4e41324d2f902",
      "Inputs": [
        {
          "Id": "1fbd04ff2cf74b449d2aba9fcbbafec2",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53ab981cca8d47b68feca7406ab00105",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "258e1125b6304096990390fd998fd0b3",
          "Name": "Vector",
          "Description": "A Vector perpendicular to the curve at param",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Get a Vector perpendicular to the curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.NormalAtParameter (param: double = 0): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.NormalAtParameter@double",
      "Id": "2ca16cc11bcf443e86110f16d3dac3fc",
      "Inputs": [
        {
          "Id": "cb6cc9ee61c147b0b59f1e2c94414622",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0eb06ffa9fce4914a25e78e00a55d461",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec5fc13d821340d1b8399fdde50d7cc9",
          "Name": "Vector",
          "Description": "A Vector perpendicular to the curve at param",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Get a Vector perpendicular to the curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.NormalAtParameter (param: double = 0): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.ByOriginXAxisYAxis@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "f7510fb9ddd040388cfffd2fe1938d94",
      "Inputs": [
        {
          "Id": "7e1f084e81c14f01ba0dd4bec5f10f3f",
          "Name": "origin",
          "Description": "Point\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb30c6a1ed0f4b20882039fc42a9cada",
          "Name": "xAxis",
          "Description": "Vector\nDefault value : Autodesk.DesignScript.Geometry.Vector.ByCoordinates(1, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89efccc2371f48e38907cba75e806913",
          "Name": "yAxis",
          "Description": "Vector\nDefault value : Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 1, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0860eb10a6994fdda70ba670dd832887",
          "Name": "Plane",
          "Description": "Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The X and Y axis lie in the plane. The Z axis is the cross product of the two Vectors.\n\nPlane.ByOriginXAxisYAxis (origin: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), xAxis: Vector = Autodesk.DesignScript.Geometry.Vector.ByCoordinates(1, 0, 0), yAxis: Vector = Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 1, 0)): Plane"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport math\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# returns a list of points for the bearing location\r\ndef cube_pnts(girder_plane, beam_depth, beam_width, bearing_len, bearing_thk):\r\n\t# for some reason dynamo reverses the the normal direction of plane at the bearings for half the planes so we need ensure all reference planes have the same normal for when the bearing surface receives its thickness\r\n\tif girder_plane.Normal.Z < 0:\r\n\t\tgirder_plane = Plane.ByOriginNormalXAxis(girder_plane.Origin, Vector.ByCoordinates(0,0,1), girder_plane.XAxis)\r\n\t\r\n\t# shift the first point to the start location underneath the girder\r\n\torigin = girder_plane.Origin\r\n\torigin = Geometry.Translate(origin, Vector.ZAxis(), -(beam_depth+bearing_thk))\r\n\t# generate the four points for bearing pad\r\n\tcube = []\r\n\tcube.append(Geometry.Translate(origin, girder_plane.XAxis, -beam_depth/2.0))\r\n\tcube.append(Geometry.Translate(cube[0], girder_plane.XAxis, beam_depth))\r\n\tcube.append(Geometry.Translate(cube[1], girder_plane.YAxis, bearing_len))\r\n\tcube.append(Geometry.Translate(cube[2], girder_plane.XAxis, -beam_depth))\r\n\treturn cube\r\n\r\n# input values\r\nbl_start = IN[0]\r\nbeam_depth = IN[1]\r\nbeam_width = IN[2]\r\nbearing_len = IN[3]\r\nbearing_thk = IN[4]\r\n\r\n# generate a bearing at each girder of each bearing line\r\nbearings = []\r\nfor bl in bl_start:\r\n\tfor b in bl:\r\n\t\tbearings.append(cube_pnts(b, beam_depth, beam_width, bearing_len, bearing_thk))\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = bearings",
      "VariableInputPorts": true,
      "Id": "6922bbc461f246e28d99dafeaa4eada5",
      "Inputs": [
        {
          "Id": "1e29be1f0bd14670b80dbb54093a8980",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a6804dc898b4453add9227611f40979",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78c3ac2c451e4020b42747fe641b4521",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6306385e655046b3aaabb9fec597c1c4",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4718d25489e4dc2874fe6421bf74b5a",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f93086dbb71b4b98887caec2a0d8ba7b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "beam_depth;\nbeam_width;",
      "Id": "11510b4a49084206bb45afaf5648d024",
      "Inputs": [
        {
          "Id": "4fbce8a82a5340b688b1f4a74643ef17",
          "Name": "beam_depth",
          "Description": "beam_depth",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d16e2a0515ee48258051cdd1b09dd416",
          "Name": "beam_width",
          "Description": "beam_width",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "594be4a4bc0146b290132a86733a9b50",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6798b54123854f34b7cbb8673cb3dba0",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.5,
      "Id": "b743f108508e4a4aaeba939aacd78aa6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "da535370b4674a82a3a9769ed2b80295",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# returns a list of points for a basic pier with a cap and stem\r\ndef pier_gen(pier_plane, top_el, btm_el, deck_width, pier_width, piercap_height):\r\n\torigin = pier_plane.Origin\r\n\torigin = Geometry.Translate(origin, Vector.ZAxis(), -(origin.Z - top_el))\r\n\r\n\tpier = []\r\n\tpier.append(Geometry.Translate(origin , pier_plane.XAxis, -deck_width/2.0))\r\n\tpier.append(Geometry.Translate(pier[0], pier_plane.XAxis, deck_width))\r\n\tpier.append(Geometry.Translate(pier[1], pier_plane.YAxis, -piercap_height))\r\n\tpier.append(Geometry.Translate(pier[2], pier_plane.XAxis, -(deck_width/2.0 - pier_width/2.0)))\r\n\tpier.append(Geometry.Translate(pier[3], pier_plane.YAxis, -(pier[3].Z - btm_el)))\r\n\tpier.append(Geometry.Translate(pier[4], pier_plane.XAxis, -pier_width))\r\n\tpier.append(Geometry.Translate(pier[5], pier_plane.YAxis, (pier[3].Z - btm_el)))\r\n\tpier.append(Geometry.Translate(pier[6], pier_plane.XAxis, -(deck_width/2.0 - pier_width/2.0)))\r\n\treturn pier\r\n\r\n# input values\r\npier_cl = IN[0]\r\ndeck_width = IN[1]\r\ntop_el = IN[2]\r\nbtm_el = IN[3]\r\npier_width = IN[4]\r\npiercap_height = IN[5]\r\nfoundation_thk = IN[6]\r\n\r\n# get the geometry for each pier\r\npiers = [ pier_gen(pier_cl[i+1], top_el[i], btm_el+foundation_thk, deck_width, pier_width, piercap_height) for i in range(len(top_el)) ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = piers",
      "VariableInputPorts": true,
      "Id": "cad03b2cf6474310b4e4aabcc3a872c3",
      "Inputs": [
        {
          "Id": "30308779b1854aa99c413b52dd22e64b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32e5cf1c2c7f453b919984dc32aaaed3",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "622e4255a52e4435b2a26c2ed5762264",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "635fdd10022e4ab1a317785d9a1c154d",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "80e226d68a524860ab60d52cf4aab324",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f1fd8fdd501433db75636266f802c13",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a52eb4f52304a43b2b424207d31da2c",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6e5a2e954f0f4e84a9468cc5ae723969",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# input values\r\npier_start = IN[0][1:len(IN[0])] # remove the abutment info\r\npier_end = IN[1][0:len(IN[1])-1] # remove the abutment info\r\nbeam_haunch = IN[2]\r\nbeam_depth = IN[3]\r\nbearing_thk = IN[4]\r\ndeck_thk = IN[5]\r\nped_thk = IN[6]\r\n\r\n# caluclate the top seat of pier elevation\r\nel = []\r\nfor i in range(len(pier_start)):\r\n\tel.append(pier_start[i][0].Origin.Z)\r\n\tfor j in range(len(pier_start[i])):\r\n\t\tif(el[i] > pier_start[i][j].Origin.Z):\r\n\t\t\tel[i] = pier_start[i][j].Origin.Z\r\n\t\tif(el[i] > pier_end[i][j].Origin.Z):\r\n\t\t\tel[i] = pier_end[i][j].Origin.Z\r\n\r\n# apply an offset to account for the girder depth, bearing and pedestal\r\noffset = beam_haunch + beam_depth + bearing_thk/2.0 + ped_thk\r\nfor i in range(len(el)):\r\n\tel[i] -= offset\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = el",
      "VariableInputPorts": true,
      "Id": "f3bad66848534c02a48dd3c16d433b88",
      "Inputs": [
        {
          "Id": "f56af4a9c067492da4ee6b9abbf862da",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8745ee3f7f124617bba38a5a9ae15d88",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f60db26738c54442bafbaa89e544cc84",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed9753e40626442085bff306e5e43daa",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "820e4786fa974e949d25651fe67b202d",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "161ac27c0d3048a4b9ba6e6cb0eab254",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c712f0ac98a44be7841cb40d622f9da4",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50ba8a1a5180471c98b6dcb8a2a85863",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "7a56e9d3e5ef49c18e2fba73b58e0c1e",
      "Inputs": [
        {
          "Id": "00d17e9b85194a198c981f2feaa2b55a",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89988fced2974a2f854a6ff0efbb411c",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Polygon Surface connecting input Points in a closed Polygon and patching it.\n\nSurface.ByPerimeterPoints (points: Point[]): Surface"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 90,
      "NodeType": "ExtensionNode",
      "Id": "11dd5091614142edb0ffaa7e73830505",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "477e1bcd4d8c40ed958bf258e7315315",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double,bool",
      "Id": "1fd30dfaab5b42c7a45870e80a78b2a9",
      "Inputs": [
        {
          "Id": "864d9d4f436746d3b138de231789f8ce",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a5cb9671ea04e2a8cc9969289d785f4",
          "Name": "thickness",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e5fe8c7bbd84cc3989a7b635f3b8e1b",
          "Name": "both_sides",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a577729449f41f28ef0d024000b6a8b",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals. If both_sides parameter is true, surface is thickened on both sides.\n\nSurface.Thicken (thickness: double = 1, both_sides: bool = true): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "e4a905afdf2c4e17a0e563a38fc7eb42",
      "Inputs": [
        {
          "Id": "de852e342b644a12979b673176166f89",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a75ff8ed2851419d8b1e2c4831be68f6",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16ffaf84539a439490deb3ab28436e64",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7346dcfc0af14a03aa24e77901bce138",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba10d40850304082a2743d4753b391a4",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "c390e1de3d87460f9eff0144a06b6a48",
      "Inputs": [
        {
          "Id": "bcc1fccae77e48bc8107acaf8b98adb3",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6040906d9fa4019bf9cbd600d80f63f",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Polygon Surface connecting input Points in a closed Polygon and patching it.\n\nSurface.ByPerimeterPoints (points: Point[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double,bool",
      "Id": "b57e60b4127e474f9b32fa97b0aef195",
      "Inputs": [
        {
          "Id": "d1f878b6e6c3416cadac8b065b426dd2",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22935af869f64da3aa93c927ffaae5cd",
          "Name": "thickness",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5090cb555b24a4fb224bfba9d646740",
          "Name": "both_sides",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61ebf52dd33d43be879970806c186397",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals. If both_sides parameter is true, surface is thickened on both sides.\n\nSurface.Thicken (thickness: double = 1, both_sides: bool = true): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "b4b15d2a02904149a58717835dd2e721",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4885ac7379c24eac994a0751df159f31",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "833ddd27f42d4b699d2f7e791d751d21",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c5615442036e412ba26849ad651f5f6e",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.5,
      "Id": "74413f07bbd3470e86058de5b4ad8577",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e009c6efa2fb44678633726f24818ac8",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.5,
      "Id": "5e2b926df1794772b924079a4a02a275",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ad9506266bc442558fb0e5a6f74b7177",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# input values\r\nabut_start = IN[0][0]\r\nabut_end = IN[1][len(IN[1])-1]\r\nbeam_haunch = IN[2]\r\nbeam_depth = IN[3]\r\nbearing_thk = IN[4]\r\nped_thk = IN[5]\r\n\r\n# find the top of abutment seat at each abutment by finding the girder at the lowest elevation\r\nel = [ 100000, 100000]\r\nfor i in abut_start:\r\n\tif(el[0] > i.Origin.Z):\r\n\t\tel[0] = i.Origin.Z\r\nfor i in abut_end:\r\n\tif(el[1] > i.Origin.Z):\r\n\t\tel[1] = i.Origin.Z\r\n\r\n# apply an offset to account for the beam depth, bearing and pedestal\r\noffset = beam_haunch + beam_depth + bearing_thk/2.0 + ped_thk\r\nfor i in range(len(el)):\r\n\tel[i] -= offset\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = el",
      "VariableInputPorts": true,
      "Id": "09f6c56bc46445bbaacfad28446041ed",
      "Inputs": [
        {
          "Id": "8ee2feeb770049cda9bf1a0b0315915e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47c0443a34694591a9543906df0a21a1",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3b9933f85ae34b059c7848913df242a3",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd85ee49d69643a8989992b2922bd3d4",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "152de659142d46f9bc746ab2d85e83d8",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "856d69516f9b47ea80c68ac88bad360d",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05f8f40d4c9d4f43b337546326d913fe",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# generate the bridge seat geometry\r\ndef abut_gen(abut_plane, top_el, btm_el, deck_width):\r\n\torigin = abut_plane.Origin\r\n\torigin = Geometry.Translate(origin, Vector.ZAxis(), -(origin.Z - top_el))\r\n\t\r\n\tabut = []\r\n\tabut.append(Geometry.Translate(origin , abut_plane.XAxis, -deck_width/2.0))\r\n\tabut.append(Geometry.Translate(abut[0], abut_plane.XAxis, deck_width))\r\n\tabut.append(Geometry.Translate(abut[1], abut_plane.YAxis, -(abut[1].Z - btm_el)))\r\n\tabut.append(Geometry.Translate(abut[2], abut_plane.XAxis, -deck_width))\r\n\treturn abut\r\n\r\n# input values\r\nabut_cl = IN[0]\r\ndeck_width = IN[1]\r\ntop_el = IN[2]\r\nstart_btm_el = IN[3]\r\n\r\n# get the abutment seat geomentry for the abutment\r\nabut = abut_gen(abut_cl[0], top_el[0], start_btm_el, deck_width)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = abut",
      "VariableInputPorts": true,
      "Id": "45315731fbed466ca60c215d161f76f8",
      "Inputs": [
        {
          "Id": "4caf80a7d7f2423ab121382b53ca0355",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a0bafb4b26e4dfc8acd7f2da0e213f2",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44f42c90dbe54546b7dc67e71ac1a5b9",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "55b757a88d5a46c69793bc312883f81a",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e5fdf5674ad4a25af3882439868256c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "2341459e1aab4b6ca1a245a2b7d57359",
      "Inputs": [
        {
          "Id": "c66cd9b23df449c58dafa0a4573b32b5",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0aeef55e643d44afa95859ca57fcc10d",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Polygon Surface connecting input Points in a closed Polygon and patching it.\n\nSurface.ByPerimeterPoints (points: Point[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double,bool",
      "Id": "a9ee741d9a5945b99d1dcfb1951bc9ef",
      "Inputs": [
        {
          "Id": "5904d20a2509406d9b36f517bb742a5e",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "203da4e1daaa417a9e08b9304f391f9e",
          "Name": "thickness",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4964c9df352940cc8bf965db0b74dd8c",
          "Name": "both_sides",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05bef5912b06409781e004e95360d70d",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals. If both_sides parameter is true, surface is thickened on both sides.\n\nSurface.Thicken (thickness: double = 1, both_sides: bool = true): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "eb0160a4c41942a5ba01e48e458a484c",
      "Inputs": [
        {
          "Id": "39b96ed0ece74739beabad99085af094",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae72cb712dc64a5f8dd90570ae4fe549",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26162326680a4edea64800cefd0371e4",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aed29ed35f1549f5bb239dcc9c5e3966",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f15b8aec167a4975904ac93406c8114c",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 83,
      "NodeType": "ExtensionNode",
      "Id": "093d0d6e065f4159afe97e1f591ef2de",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1958d33bd9704b968ac108048c26ee81",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "9f893342b3ba4c4dbb46296fadeb8e3b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d136f0da67e84b19a13f755a39d965d6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x/2;",
      "Id": "ed7e25371ad640b7abb6cfd6fee0e6a4",
      "Inputs": [
        {
          "Id": "605326405e034b56bbd220bc6df81e17",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "87152f5b20db49c4819aa5a4f300b6d4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# returns a list of points for the abutment backwall\r\ndef abut_gen(abut_plane, top_crown, btm_el, deck_width):\r\n\t# the top points match the shape of the bridge deck\r\n\tabut = top_crown[:]\r\n\tlast = len(abut)-1\r\n\t# the bottom points are tied to the bottom elevation\r\n\tabut.append(Geometry.Translate(abut[last] , abut_plane.YAxis, -(abut[last].Z - btm_el)))\r\n\tabut.append(Geometry.Translate(abut[len(abut)-1], abut_plane.XAxis, -deck_width))\r\n\treturn abut\r\n\r\n# input values\r\nabut_cl = IN[0]\r\ndeck_width = IN[1]\r\ntop_crown = IN[2]\r\nstart_btm_el = IN[3]\r\n\r\n# gets the top of deck points\r\nstart_top_crown = top_crown[0][:len(top_crown[0])/2]\r\n\r\n# get the backwall geometry\r\nabut = abut_gen(abut_cl[0], start_top_crown, start_btm_el, deck_width)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = abut",
      "VariableInputPorts": true,
      "Id": "b695ec2c42eb4585a525e4d7a07beff5",
      "Inputs": [
        {
          "Id": "7b6e5d1d6ce346258d89264c91af5403",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4219193a38994faeb89666f4d0d92d14",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0b59dc7fb8441ffbf1c1920b4c491b9",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ae3336bbc694da7bf2d6ffa9737a4dc",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "820426d0fc3e429faef7fd3bd1b5cafd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "8b5583d4da2c428da891933ca9ed35c2",
      "Inputs": [
        {
          "Id": "cb762751db474845aa11e4c3daade9e6",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f0e7b32cae04abcae84d56042a83cad",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Polygon Surface connecting input Points in a closed Polygon and patching it.\n\nSurface.ByPerimeterPoints (points: Point[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "2e94f0e8ce4a4a0093e29ad8ecaa4569",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "83a7728ca3954c5a81fdfb756170bcc2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double,bool",
      "Id": "7f06e0d7732d4c70a409c38ccfab9dc7",
      "Inputs": [
        {
          "Id": "8e262c0df11a4322823ce0c1a83bc85e",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64aa6ef23a204190aaea736afddc5bbf",
          "Name": "thickness",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7aaf5d669be45e5beffa0d23384b735",
          "Name": "both_sides",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c5e35efa603480ba62e368d10a68f7e",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals. If both_sides parameter is true, surface is thickened on both sides.\n\nSurface.Thicken (thickness: double = 1, both_sides: bool = true): Solid"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 83,
      "NodeType": "ExtensionNode",
      "Id": "587da0ea03194034bafebc33d424fad9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8bfbb6f13ad24a88bc238299dd648c0a",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "a4d4b4929c7449bca7cc76110a93bc9e",
      "Inputs": [
        {
          "Id": "07b96ea4ddeb443f98d7d02bcfe255f5",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7e86cb7d909411797d9b85faea88d2e",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91b7b40719dd4621889337903769a22d",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4714216b58144e5b15911b595343191",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abf8d66346d54085b12392a6dcc989bb",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "c62cf3c093904414897d806f0c59c7b7",
      "Inputs": [
        {
          "Id": "44ac3143804b46969dd56b8fae9c3324",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e0ecd9a40db44e881fe3c4b6027292a",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Polygon Surface connecting input Points in a closed Polygon and patching it.\n\nSurface.ByPerimeterPoints (points: Point[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-x/2;",
      "Id": "89796d5d4a084c85acae530073c2ff1b",
      "Inputs": [
        {
          "Id": "306dfe57c8304c3ebe02dc689ccb7759",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7bad46b32a784bc1a37006e20f60c153",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# generate the bridge seat geometry\r\ndef abut_gen(abut_plane, top_el, btm_el, deck_width):\r\n\torigin = abut_plane.Origin\r\n\torigin = Geometry.Translate(origin, Vector.ZAxis(), -(origin.Z - top_el))\r\n\t\r\n\tabut = []\r\n\tabut.append(Geometry.Translate(origin , abut_plane.XAxis, -deck_width/2.0))\r\n\tabut.append(Geometry.Translate(abut[0], abut_plane.XAxis, deck_width))\r\n\tabut.append(Geometry.Translate(abut[1], abut_plane.YAxis, -(abut[1].Z - btm_el)))\r\n\tabut.append(Geometry.Translate(abut[2], abut_plane.XAxis, -deck_width))\r\n\treturn abut\r\n\r\n# input values\r\nabut_cl = IN[0]\r\ndeck_width = IN[1]\r\ntop_el = IN[2]\r\nend_btm_el = IN[3]\r\n\r\n# get the abutment seat geomentry for the abutment\r\nabut = abut_gen(abut_cl[len(abut_cl)-1], top_el[1], end_btm_el, deck_width)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = abut",
      "VariableInputPorts": true,
      "Id": "88c59f498f2c4a62ababd961e0f0e890",
      "Inputs": [
        {
          "Id": "fb233eb16381481eb37b87af63654fd3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2cd57a007f7e4f4b9c38f427435ee62e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c38b62760f8a4e4086ede78c24392588",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8689f4a6918d48ac92a110b6f669d5e8",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e42962db918c4e26af6227ba37ff63c8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double,bool",
      "Id": "b0e5a79655674e1cac43ee23b86c881c",
      "Inputs": [
        {
          "Id": "6b0397bff6c7456fad34cac48073b60a",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7b30d282a8e47c7a68a5afc9df14755",
          "Name": "thickness",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b87904755c44242b95199b26aa079cd",
          "Name": "both_sides",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64c14e5a11664577a02a2c22796a3d32",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals. If both_sides parameter is true, surface is thickened on both sides.\n\nSurface.Thicken (thickness: double = 1, both_sides: bool = true): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "b790ea5263004ab0b63f4a7f16a25fb6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8cab0be9141841ac95c597a8b4450599",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 83,
      "NodeType": "ExtensionNode",
      "Id": "b0091f77d40441528d4617fdab974ffa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2ea737e54e6c496f9017485c84295ba6",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "053f4e85220841c18199ba885545b354",
      "Inputs": [
        {
          "Id": "af3f523ced004327adc742f6f8e52562",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d843899473e8405bb17544b6b7db83b6",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "55658d7675fa47509bd4437cad8aa912",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f70d943e51e54bb1857a81c7ba66c6d3",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2cc281eff81d426893324d8f9bf801ca",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "1426f2fc46574cd6a6173265148ad0c8",
      "Inputs": [
        {
          "Id": "a892a872d68246b1bcb3140fbe4f6489",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2ed3f44acc1485f868387e27dad08c9",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Polygon Surface connecting input Points in a closed Polygon and patching it.\n\nSurface.ByPerimeterPoints (points: Point[]): Surface"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport math\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# returns a list of points for the bearing location\r\ndef cube_pnts(girder_plane, beam_depth, beam_width, bearing_len, bearing_thk):\r\n\t# for some reason dynamo reverses the the normal direction of plane at the bearings for half the planes so we need ensure all reference planes have the same normal for when the bearing surface receives its thickness\r\n\tif girder_plane.Normal.Z < 0:\r\n\t\tgirder_plane = Plane.ByOriginNormalXAxis(girder_plane.Origin, Vector.ByCoordinates(0,0,1), girder_plane.XAxis)\r\n\t\r\n\t# shift the first point to the start location underneath the girder\r\n\torigin = girder_plane.Origin\r\n\torigin = Geometry.Translate(origin, Vector.ZAxis(), -(beam_depth+bearing_thk))\r\n\t# generate the four points for bearing pad\r\n\tcube = []\r\n\tcube.append(Geometry.Translate(origin, girder_plane.XAxis, -beam_depth/2.0))\r\n\tcube.append(Geometry.Translate(cube[0], girder_plane.XAxis, beam_depth))\r\n\tcube.append(Geometry.Translate(cube[1], girder_plane.YAxis, bearing_len))\r\n\tcube.append(Geometry.Translate(cube[2], girder_plane.XAxis, -beam_depth))\r\n\treturn cube\r\n\r\n# input values\r\nbl_end = IN[0]\r\nbeam_depth = IN[1]\r\nbeam_width = IN[2]\r\nbearing_len = IN[3]\r\nbearing_thk = IN[4]\r\n\r\n# generate a bearing at each girder of each bearing line\r\nbearings = []\r\nfor bl in bl_end:\r\n\tfor b in bl:\r\n\t\tbearings.append(cube_pnts(b, beam_depth, beam_width, -1*bearing_len, bearing_thk))\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = bearings",
      "VariableInputPorts": true,
      "Id": "29bbc96c1fb9419b939bcf698de77595",
      "Inputs": [
        {
          "Id": "0a9c4c295281428391025a7af0ad83bc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "02e6f23089a14f9fa3ed1ad08d0097af",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7fd7b68641f844e9b072c09acfa61972",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "caf065f8e806447d955746d0786efa17",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3976a0f2077940068fdab85919854919",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46d91971b13e4b8da95aebda545a1730",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "4afcb56932944a6895f296b606e4eb86",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e245375b9f044bbeb795a3eafc088faa",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double,bool",
      "Id": "9b951ef18db9434fbce3529868f4b277",
      "Inputs": [
        {
          "Id": "a5c29853c9724c88be2f070902df12af",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7414fe46f9924d7f92777cbb03419e34",
          "Name": "thickness",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70f919d6458f4067bd799a03e614202d",
          "Name": "both_sides",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76e93cc17e824aad8c5ef4b3e001fb60",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals. If both_sides parameter is true, surface is thickened on both sides.\n\nSurface.Thicken (thickness: double = 1, both_sides: bool = true): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-x;",
      "Id": "7b3f057f5d794029be8e30cc92002f75",
      "Inputs": [
        {
          "Id": "2138cef1540440ad9e99654c270b35b0",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63f7503dd51a464393b6fc4ab7f07e91",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "63d6858bd5b04cd782220c75d76560cb",
      "Inputs": [
        {
          "Id": "08ea89c395d448d2b5ad8cc3a6d66656",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a620afb123854ecab4d29b05eb4f6c3c",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Polygon Surface connecting input Points in a closed Polygon and patching it.\n\nSurface.ByPerimeterPoints (points: Point[]): Surface"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# returns a list of points for the abutment backwall\r\ndef abut_gen(abut_plane, top_crown, btm_el, deck_width):\r\n\t# the top points match the shape of the bridge deck\r\n\tabut = top_crown[:]\r\n\tlast = len(abut)-1\r\n\t# the bottom points are tied to the bottom elevation\r\n\tabut.append(Geometry.Translate(abut[last] , abut_plane.YAxis, -(abut[last].Z - btm_el)))\r\n\tabut.append(Geometry.Translate(abut[len(abut)-1], abut_plane.XAxis, -deck_width))\r\n\treturn abut\r\n\r\n# input value\r\nabut_cl = IN[0]\r\ndeck_width = IN[1]\r\ntop_crown = IN[2]\r\nend_btm_el = IN[3]\r\n\r\n# gets the top of deck points\r\nstart_top_crown = top_crown[0][:len(top_crown[0])/2]\r\nend_top_crown_rev = top_crown[len(top_crown)-1][len(top_crown[0])/2:]\r\nend_top_crown = []\r\n# for the end abutment we need to reverse the points in order to create a valid surface geometry\r\nfor pnt in reversed(end_top_crown_rev):\r\n\tend_top_crown.append(pnt)\r\n\r\n# get the backwall geometry\r\nabut = abut_gen(abut_cl[len(abut_cl)-1], end_top_crown, end_btm_el, deck_width)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = abut",
      "VariableInputPorts": true,
      "Id": "430205b1a19645c19e2480431cf93739",
      "Inputs": [
        {
          "Id": "94f2ba9fd05b48968c0839e8383ae19a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98ac74fc28df49d7ac93911cac7c0c61",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "114a3221d1d14b76adc55e93d2dd53f6",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6b635c44ce74856abb6df3d113ff770",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "205bb702c50141989391ce045e77e13d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "194f928caaa3446abe8656e1f4b9577f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "230ad8a9fb1a409aaec200002d04778a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double,bool",
      "Id": "9de4b9ff8dad46d7a6ef4c0380e9989e",
      "Inputs": [
        {
          "Id": "ed5e6664f94d42cb8d1213f8781eda1c",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03edd35f51dd41aa8c0cd642519c6619",
          "Name": "thickness",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e05c927dc9bb4e238587945e487a186e",
          "Name": "both_sides",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd316e0471564a46bf4f9db5535d5c11",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals. If both_sides parameter is true, surface is thickened on both sides.\n\nSurface.Thicken (thickness: double = 1, both_sides: bool = true): Solid"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 83,
      "NodeType": "ExtensionNode",
      "Id": "b6cb051403994cf5852372cc591a3763",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "86d49c65518e4b7d8497d0096a23f8a8",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "284179edc2764ed6a03d1ea394565595",
      "Inputs": [
        {
          "Id": "21d0cf3b5c23414f9bdda8dce8c100a7",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11a1e3e47908443c86d8f38a57cd3e77",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5747af2e95eb495984931501baa04e6d",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea3dde3a941c4509a61ef750c75e4659",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f5c2e50635b42f38f932cb2be230304",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-x;",
      "Id": "466989f26e7747d2be32ccc7cb50daaa",
      "Inputs": [
        {
          "Id": "5773341e7ba74a54850b8a8304fcd83e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "689827cd678d42dfa054f79da4ae5629",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Id": "027278b0f07d429bbefaef57a5e537af",
      "Inputs": [
        {
          "Id": "4754e6723e5041999396592785dba2ce",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cafd8753594a4365b5126dc827ddef6a",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Parameter.Value",
      "Id": "74c6dae4625b4ee4aac5396c10a5d6e5",
      "Inputs": [
        {
          "Id": "569f392f0255497a9de81f70b16d0c9e",
          "Name": "parameter",
          "Description": "Revit.Elements.Parameter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b53d543f51a04b74ba5acf51fc97dcc9",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of the parameter\n\nParameter.Value: var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "param[8];\nparam[3];",
      "Id": "3230e550f6544ef88d46014055c84137",
      "Inputs": [
        {
          "Id": "a3b0bb2a04b54ee28efa147e285a9dfc",
          "Name": "param",
          "Description": "param",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6819dfe6159a4f3fa537d6c1d3cb419d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15a3c5e06f544f049d5791989ca631f1",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Parameter.Value",
      "Id": "15a5bd16a16c4f08ae94d0af7c2d149f",
      "Inputs": [
        {
          "Id": "41d07f9277b64cdca20cdf6c66ec5831",
          "Name": "parameter",
          "Description": "Revit.Elements.Parameter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b5b34368460469db18122aa50c9a9f0",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of the parameter\n\nParameter.Value: var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# returns a list of points for the pedestal\r\ndef rect_pnts(ped_plane, top_el, ped_width, girder_spa):\r\n\torigin = ped_plane.Origin\r\n\torigin = Geometry.Translate(origin, Vector.ZAxis(), -(origin.Z - top_el))\r\n\trect = []\r\n\trect.append(Geometry.Translate(origin, ped_plane.XAxis, girder_spa/2.0))\r\n\trect.append(Geometry.Translate(rect[0], ped_plane.YAxis, ped_width))\r\n\trect.append(Geometry.Translate(rect[1], ped_plane.XAxis, -girder_spa))\r\n\trect.append(Geometry.Translate(rect[2], ped_plane.YAxis, -ped_width))\r\n\treturn rect\r\n\r\n# returns a list of for the pedestal when the girder is at the overhang\r\ndef rect_pnts_endgirders(ped_plane, top_el, ped_width, girder_spa, overhang, dir):\r\n\torigin = ped_plane.Origin\r\n\torigin = Geometry.Translate(origin, Vector.ZAxis(), -(origin.Z - top_el))\r\n\trect = []\r\n\t\r\n\trect.append(Geometry.Translate(origin, ped_plane.XAxis, dir*overhang))\r\n\trect.append(Geometry.Translate(rect[0], ped_plane.YAxis, ped_width))\r\n\trect.append(Geometry.Translate(rect[1], ped_plane.XAxis, -dir*(overhang + girder_spa/2.0)))\r\n\trect.append(Geometry.Translate(rect[2], ped_plane.YAxis, -ped_width))\r\n\t\r\n\t# we need to reverse the points at one overhang end so that the geometery has the same normal direction\r\n\tif dir < 0:\r\n\t\trect_rev = []\r\n\t\tfor r in reversed(rect):\r\n\t\t\trect_rev.append(r)\r\n\t\treturn rect_rev\r\n\t\r\n\treturn rect\r\n\r\n# input values\r\nbrg_cl = IN[0]\r\ndeck_width = IN[1]\r\ntop_el = IN[2]\r\npier_width = IN[3]\r\ngirder_cnt = IN[4]\r\noverhang = IN[5]\r\n\r\n# caluclate girder spacing and pedestal width\r\ngirder_spa = (deck_width - 2.0 * overhang) / (girder_cnt - 1)\r\nped_width = pier_width/2.0\r\n\r\npedestals = []\r\n# run for start of span girder lines first\r\nfor i in range(len(brg_cl)-1):\r\n\t# every iteration shifts to the next girder along the spacing\r\n\tloc = -(deck_width/2.0 - overhang)\r\n\tloc_vec = Geometry.Translate(brg_cl[i].Origin, brg_cl[i].XAxis, loc)\r\n\tg = 1;\r\n\twhile g <= girder_cnt:\r\n\t\tplane = Plane.ByOriginXAxisYAxis(loc_vec, brg_cl[i].XAxis, brg_cl[i].YAxis)\r\n\t\tdir_vec = Vector.ByCoordinates(0, 0, 1)\r\n\t\tplane = Plane.ByOriginNormalXAxis(plane.Origin, dir_vec, plane.XAxis)\r\n\t\t\r\n\t\tif g == 1:\r\n\t\t\t# get geometry for left overhang pedestal\r\n\t\t\tpedestals.append(rect_pnts_endgirders(plane, top_el[i], ped_width, girder_spa, overhang, -1))\r\n\t\telif g == girder_cnt:\r\n\t\t\t# get geometry for right overhang pedestal\r\n\t\t\tpedestals.append(rect_pnts_endgirders(plane, top_el[i], ped_width, girder_spa, overhang, 1))\r\n\t\telse:\r\n\t\t\t# get geometry for interior pedestals\r\n\t\t\tpedestals.append(rect_pnts(plane, top_el[i], ped_width, girder_spa))\r\n\t\t\r\n\t\t# shift to the next girder\r\n\t\tg += 1\r\n\t\tloc += girder_spa\r\n\t\tloc_vec = Geometry.Translate(brg_cl[i].Origin, brg_cl[i].XAxis, loc)\r\n\r\n# now add the end of span girder lines\r\nfor i in range(1, len(brg_cl)):\r\n\t# every iteration shifts to the next girder along the spacing\r\n\tloc = -(deck_width/2.0 - overhang)\r\n\tloc_vec = Geometry.Translate(brg_cl[i].Origin, brg_cl[i].XAxis, loc)\r\n\tg = 1\r\n\twhile g <= girder_cnt:\r\n\t\tplane = Plane.ByOriginXAxisYAxis(loc_vec, brg_cl[i].XAxis, brg_cl[i].YAxis)\r\n\t\tdir_vec = Vector.ByCoordinates(0, 0, -1)\r\n\t\tplane = Plane.ByOriginNormalXAxis(plane.Origin, dir_vec, plane.XAxis)\r\n\t\t\r\n\t\tif g == 1:\r\n\t\t\t# get geometry for left overhang pedestal\r\n\t\t\tpedestals.append(rect_pnts_endgirders(plane, top_el[i], ped_width, girder_spa, overhang, -1))\r\n\t\telif g == girder_cnt:\r\n\t\t\t# get geometry for right overhang pedestal\r\n\t\t\tpedestals.append(rect_pnts_endgirders(plane, top_el[i], ped_width, girder_spa, overhang, 1))\r\n\t\telse:\r\n\t\t\t# get geometry for interior pedestals\r\n\t\t\tpedestals.append(rect_pnts(plane, top_el[i], ped_width, girder_spa))\r\n\t\t\r\n\t\t# shift to the next girder\t\t\r\n\t\tg += 1\r\n\t\tloc += girder_spa\r\n\t\tloc_vec = Geometry.Translate(brg_cl[i].Origin, brg_cl[i].XAxis, loc)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = pedestals",
      "VariableInputPorts": true,
      "Id": "857ac4acfd8b405bab5f7c01509faea6",
      "Inputs": [
        {
          "Id": "c39b804e48994528a114df11744e9f15",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3dbddeec3c0e496293fd6b96ae67ce9f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db1476fdee614d57b5ed8b754b011381",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9dcfb86f75b64a7e8430b4e7f5330a86",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9d134498bf64ebd9f80f0ba6e6e46f4",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc6d5f76f57c44f69e9036814cee06dc",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d7eb6fc2e739457ebc92f5d37ba258e9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# input values\r\npier_start = IN[0]\r\npier_end = IN[1]\r\nbeam_haunch = IN[2]\r\nbeam_depth = IN[3]\r\nbearing_thk = IN[4]\r\nped_thk = IN[5]\r\n\r\n# to find the top of pier and top of bridge seat elevations we loop through each girder/bearing and find the lowest elevation girder/bearing at each abutment and either side of the pier and select that as the elevation\r\nel = []\r\nfor i in range(len(pier_start)+1):\r\n\tif i != len(pier_start):\r\n\t\t# the span start value\r\n\t\tel.append(pier_start[i][0].Origin.Z)\r\n\telse:\r\n\t\t# the span end value\r\n\t\tel.append(pier_end[i-1][0].Origin.Z)\r\n\tfor j in range(len(pier_start[0])):\r\n\t\t# check the span start\r\n\t\tif(i != len(pier_start) and el[i] > pier_start[i][j].Origin.Z):\r\n\t\t\tel[i] = pier_start[i][j].Origin.Z\r\n\t\t# check the span end\r\n\t\tif(i != 0 and el[i] > pier_end[i-1][j].Origin.Z):\r\n\t\t\tel[i] = pier_end[i-1][j].Origin.Z\r\n\r\n# apply a universal offset to account for the beam, bearing and pedestal\r\noffset = beam_haunch + beam_depth + bearing_thk/2.0 + ped_thk\r\nfor i in range(len(el)):\r\n\tel[i] -= offset\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = el",
      "VariableInputPorts": true,
      "Id": "3d6045bc630b431ab1ad6d84f308e774",
      "Inputs": [
        {
          "Id": "cf3e569e046c420e866066fa5ba02b4e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfa33404ec17440e99999eb82eecbee9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4d814061d6849dbbc498cc0befa5db2",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae91dccf9da34dbc8a8c8d87df461c36",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4e3a8c2c55740dbb51cf4383132b239",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00439194e5104d608c730f69917b3018",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c44479a31666459c8ec46f3a74dd978a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 85,
      "NodeType": "ExtensionNode",
      "Id": "df594c4b781549e1b32ed2b139370b48",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "31a1de95bece4697a8ed74556d97fa1d",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "\\\\corp.ads\\data\\Content\\content\\Shared\\Revit\\2019\\NA-EN\\Family_Templates\\English_I\\Generic Model.rft",
      "InputValue": "\\\\corp.ads\\data\\Content\\content\\Shared\\Revit\\2019\\NA-EN\\Family_Templates\\English_I\\Generic Model.rft",
      "NodeType": "ExtensionNode",
      "Id": "287d7f7c22364bcb9789eb309fc19bf2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f5cd952b5b8f4ac3a2a4c7dc50a04ad1",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "5de5ffd6b41a4b099a74c2109e63f3f1",
      "Inputs": [
        {
          "Id": "1f5bc24ab4cd4a24b1d721ebb9b83b3d",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c07a37b92e1944a6aa30365ba5f4345d",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Polygon Surface connecting input Points in a closed Polygon and patching it.\n\nSurface.ByPerimeterPoints (points: Point[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double,bool",
      "Id": "0ddb7633e5ee4b7aa5f1ff4c45b81035",
      "Inputs": [
        {
          "Id": "504583e763034adf8a7ed7e314d3dc02",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7254c6e32f4449ea987488dcc4428aa9",
          "Name": "thickness",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d3775904e404e798e983cd6f6acc187",
          "Name": "both_sides",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50af04971df44f3ca4d389f25fb9e207",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals. If both_sides parameter is true, surface is thickened on both sides.\n\nSurface.Thicken (thickness: double = 1, both_sides: bool = true): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "0a55813b4ce1413cb39cca69aaa134bb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "98a5421835da4d3c8c7f6cf37738c6b5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# input values\r\nbtm_el = IN[0]\r\ntop_start_el = IN[1]\r\ntop_end_el = IN[2]\r\n\r\n# find the number of pedestals at each bearing line, could just get the girder count\r\nped_cnt = len(top_start_el) / (len(btm_el) - 1)\r\n\r\n# this takes advantage of integer division to take the top of seat elevation at each bearing line and subtract it from each bearing to find the height of the pedestal\r\nthk = []\r\nfor i in range(len(top_start_el)):\r\n\tthk.append(top_start_el[i][0].Z - btm_el[int(i/ped_cnt)])\r\nfor i in range(len(top_end_el)):\r\n\tthk.append(-(top_end_el[i][0].Z - btm_el[int(i/ped_cnt)+1]))\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = thk",
      "VariableInputPorts": true,
      "Id": "73ee4c408af14de588fe277b9dda18fb",
      "Inputs": [
        {
          "Id": "e7934a48dca04777adb0557a4c7d674f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1eb085831ef461292f7a2ef1c566646",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03c7aaaf10f941d49f62da8f59a5813b",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1244ef157da442cead03d9d579da7b0b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1.0,
      "Id": "e330a0feced5440590d7d6415127f076",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2204a27753bb44af8c137e261a52033e",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 2.0,
      "Id": "e3bb94f4b9b748a7afe396bc80126763",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cf48090edb37423db8c6a05c86323d5a",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 2.0,
      "Id": "d15f16b4b3514e628207d4237f860077",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2c24402e93ce4a5098d3fa376cff9a8a",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# returns a list of points for the foundation at the piers\r\ndef pierfnd_gen(pier_plane, top_el, btm_el, fnd_width):\r\n\torigin = pier_plane.Origin\r\n\torigin = Geometry.Translate(origin, Vector.ZAxis(), -(origin.Z - top_el))\r\n\r\n\tpier_fnd = []\r\n\tpier_fnd.append(Geometry.Translate(origin , pier_plane.XAxis, -(fnd_width/2.0)))\r\n\tpier_fnd.append(Geometry.Translate(pier_fnd[0], pier_plane.XAxis, fnd_width))\r\n\tpier_fnd.append(Geometry.Translate(pier_fnd[1], pier_plane.YAxis, -(top_el - btm_el)))\r\n\tpier_fnd.append(Geometry.Translate(pier_fnd[2], pier_plane.XAxis, -fnd_width))\r\n\treturn pier_fnd\r\n\r\n# input values\r\npier_cl = IN[0]\r\nfnd_btm_el = IN[1]\r\nfnd_thk = IN[2]\r\nfnd_width = IN[3]\r\ntop_el = fnd_btm_el + fnd_thk\r\n\r\n# get the pier foundation geometry at each pier\r\npiers = [ pierfnd_gen(pier_cl[i+1], top_el, fnd_btm_el, fnd_width) for i in range(len(pier_cl)-2) ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = piers",
      "VariableInputPorts": true,
      "Id": "a08727c03d8147cc9248f138285bfd4a",
      "Inputs": [
        {
          "Id": "91f0587c90a14c43a6d382aaad89f280",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8b06d525012439794d58710940a4000",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af9b48321a9e4746827ca3d91a265ee1",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "543b2845ade84720a94d0377d9232665",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9abc261008941a2b0aea4896956c375",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "1106b32bf4e648fb9d5cc5ce81b375fc",
      "Inputs": [
        {
          "Id": "6c0e394bcae6484a8d0bcd723d258ec1",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7265a37ef0314452ae52a05e7e7ffb18",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Polygon Surface connecting input Points in a closed Polygon and patching it.\n\nSurface.ByPerimeterPoints (points: Point[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double,bool",
      "Id": "b6ab3fbb4e1c462484348b3113318c28",
      "Inputs": [
        {
          "Id": "2d80d7245d58497c98f452be5d767694",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8fb06d80271247fcadae09074b1b08c6",
          "Name": "thickness",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e5b9326c2474e56bc5f48c44fec37dd",
          "Name": "both_sides",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86a8c13ca700413f9c03e5ca44512ab2",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals. If both_sides parameter is true, surface is thickened on both sides.\n\nSurface.Thicken (thickness: double = 1, both_sides: bool = true): Solid"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 88,
      "NodeType": "ExtensionNode",
      "Id": "6e10380393bf4f11ae220c001656bb3c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e2b69db282e84dbb8a40d46fd5b10c03",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "74c34e7df1ed416db5bacb79795b6fce",
      "Inputs": [
        {
          "Id": "63cde380d4ba45b0bbcb2c1193694454",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b4bb8c43a6c411792a43a3f280b688e",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1249a1caa854b6490f240e94dc22930",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5de2d9df78447359ebece4cd968cefb",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8e891c4bf7d42aea92c0ec71d34771c",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# returns a list of points for the abutment foundation\r\ndef abutfnd_gen(abut_plane, top_el, deck_width, overhang, abut_width, bw_width, dir):\r\n\t# we need to rotate the abutment plane because the shape is not guarenteed to be symmetrical at the origin of the plane\r\n\txaxis = Vector.ByCoordinates(abut_plane.Normal.X, abut_plane.Normal.Y, 0)\r\n\tyaxis = Vector.ByCoordinates(abut_plane.Normal.Y, abut_plane.Normal.X, 0)\r\n\tplane = Plane.ByOriginXAxisYAxis(abut_plane.Origin, xaxis, yaxis)\r\n\r\n\torigin = plane.Origin\r\n\torigin = Geometry.Translate(origin, Vector.ZAxis(), -(origin.Z - top_el))\r\n\torigin = Geometry.Translate(origin , plane.YAxis, -(deck_width/2.0 + overhang))\r\n\r\n\tabut_fnd = []\r\n\tabut_fnd.append(Geometry.Translate(origin , plane.XAxis, dir*(overhang + bw_width)))\r\n\tabut_fnd.append(Geometry.Translate(abut_fnd[0], plane.YAxis, deck_width + overhang * 2))\r\n\tabut_fnd.append(Geometry.Translate(abut_fnd[1], plane.XAxis, -dir*(overhang * 2 + abut_width + bw_width)))\r\n\tabut_fnd.append(Geometry.Translate(abut_fnd[2], plane.YAxis, -(deck_width + overhang * 2)))\r\n\treturn abut_fnd\r\n\r\n# input values\r\nabut_cl = IN[0]\r\ndeck_width = IN[1]\r\nfnd_overhang = IN[2]\r\nabut_width = float(IN[3])/2\r\nbackwall_width = IN[4]\r\nstart_btm_el = IN[5]\r\nend_btm_el = IN[6]\r\n\r\n# get the geometry for the start and end abutment foundations\r\nabut = [ abutfnd_gen(abut_cl[0], start_btm_el, deck_width, fnd_overhang, abut_width, backwall_width, 1), abutfnd_gen(abut_cl[len(abut_cl)-1], end_btm_el, deck_width, fnd_overhang, abut_width, backwall_width, -1) ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = abut",
      "VariableInputPorts": true,
      "Id": "26e10520307340a1b15367b6aef8877b",
      "Inputs": [
        {
          "Id": "688143e96863460b9b2079a37f98d34b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64d63b9134104fd6b3b619af43499345",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94e837b88f8744f0ae8f46430d646f65",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "014db28cd04f43f1923113c8a2f0544b",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "783a005827d64d9498f45ae7df77d46a",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17f86d0b6c1d4aeca1bbc072ecc3daec",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc17f223148e4f5993329f19a374b619",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15fc41a944484ca49ff8963056787625",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[-x,x];",
      "Id": "b4f0f7de9e81421e89ae33f32682e2d2",
      "Inputs": [
        {
          "Id": "db59187374f0448a91706f1fb44769e0",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "991d49715e5b42238ee7272a80df018a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "41ee2433af254f57987ed8773709de08",
      "Inputs": [
        {
          "Id": "13b2105d24cb4d2d8f9af25805f6fa92",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a070c7bf0d1e4ebab1439637a186b61c",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Polygon Surface connecting input Points in a closed Polygon and patching it.\n\nSurface.ByPerimeterPoints (points: Point[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "68954f3588e243a3ab6ea043c5dbf5af",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ee4fef2329224006b837abc2126badac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double,bool",
      "Id": "b7f46ebdad484db4941625892a7d3c8e",
      "Inputs": [
        {
          "Id": "7cf2b00745ff44dc83d813b8075da346",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bed5d5e4988f4a168f54a3826595d664",
          "Name": "thickness",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2086a900f39c4344a2e269230462994d",
          "Name": "both_sides",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "345346078249456986672d835f890b95",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals. If both_sides parameter is true, surface is thickened on both sides.\n\nSurface.Thicken (thickness: double = 1, both_sides: bool = true): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "97008bfd403744efb781a11a86cd04a4",
      "Inputs": [
        {
          "Id": "0b591af7568744df8b862c3c39e23433",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f1f59123119428797217fb99427aed3",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8447246c99a146dab6f347de2457a453",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc39432c4eb14784ae4f31453d9614c0",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1715d60898a4a67aa8be8ee410f8abe",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 88,
      "NodeType": "ExtensionNode",
      "Id": "3c9dc729e8634a108c85e97d9e71a7c9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f6755db1f1fc4fc4b791b4bf8d70f15c",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// Define your spans in this code block\n// Use a list with size of each span in ft\n// Set last span = -1 to fill out the distance\n// E.G. for three spans with the first is 50 ft\n// second is 30 ft and the last remaining\n// distince would be [ 50, 30, -1 ]\nspans = [ 25, 50, -1 ];",
      "Id": "9d35c038e73f4b9fadb3b7696299c8ed",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d816537eea124baabfb1be5f8c01b671",
          "Name": "",
          "Description": "spans",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# input values\r\ncurve = IN[0][0][0]\r\nspans = IN[1]\r\n\r\ncurve_len = curve.Length\r\nspan_dist = [ 0.0 ]\r\ni = 0.0\r\nfor s in spans:\r\n\tif s == -1:\r\n\t\tspan_dist.append(1.0)\r\n\telse:\r\n\t\ti += s\r\n\t\tspan_dist.append(i / curve_len)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = span_dist",
      "VariableInputPorts": true,
      "Id": "568f7363e7144eeabb0740f16e07bf49",
      "Inputs": [
        {
          "Id": "772518be16ef46babf7a694f57359763",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e29b635653914c59b318e42e1470b705",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf94d95b2c6141f6a48217355080d4a9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "558b18a672db4a1f827ec036c1552d94",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ef142c105df14af6907b547c5e61e862",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double,bool",
      "Id": "416658a99c06486f8accf2dc1cd37195",
      "Inputs": [
        {
          "Id": "ca1cea89b3874bc69cdaf6f03fc64db8",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f77ad4c5867040519e467bc3315fa3d9",
          "Name": "thickness",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e2505e90137f4116bb9a391491c53229",
          "Name": "both_sides",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d3926b45e184d3b9c0fd61fc3a67ea3",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals. If both_sides parameter is true, surface is thickened on both sides.\n\nSurface.Thicken (thickness: double = 1, both_sides: bool = true): Solid"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 87,
      "NodeType": "ExtensionNode",
      "Id": "e3e2c3899b724465bf90c9b9712cf3bd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c2bdb3fc2534459fb6400525f108fdbd",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "6bee10ab31d34ca5b19d570e53899551",
      "Inputs": [
        {
          "Id": "92c93cb0de02404292c02b48f29b4d85",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3ba70f1caa64c12a32ca8cf754025ca",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b2bd0630d634faeb274e7cddea61471",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0101b6f712e84ffb9cdb4f09bca84630",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78dbb85b5787491a9b43100a52da3bc1",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-x;",
      "Id": "ba85135881f44444955b63f20bdb51bd",
      "Inputs": [
        {
          "Id": "fc636e8cde6e41eb8587eadb179d9e67",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "146723f60c124a058399b52c2287ee54",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\nped_list = IN[0]\r\n\r\nnames = [ \"Pedestal\" + str(i) for i in range(len(ped_list)) ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = names",
      "VariableInputPorts": true,
      "Id": "67c843d0e93c44f5993ecffd34ce4a31",
      "Inputs": [
        {
          "Id": "a7adb629c7174b6f91a4a7a5a370255d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ecbc2c5fb30746f8ad8c666815867806",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\nped_list = IN[0]\r\n\r\nnames = [ \"BrgEnd\" + str(i) for i in range(len(ped_list)) ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = names",
      "VariableInputPorts": true,
      "Id": "6b8ea2a7a95e444eb6285b3d0d8850f6",
      "Inputs": [
        {
          "Id": "aa3ef990549c44a9a2c0fa1b5af899bb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c86de8434d184f2f817a5e8344a2bf5e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\nped_list = IN[0]\r\n\r\nnames = [ \"BrgStart\" + str(i) for i in range(len(ped_list)) ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = names",
      "VariableInputPorts": true,
      "Id": "24480f587b5a46ea86f92dc29f6754bc",
      "Inputs": [
        {
          "Id": "eadd319ddaad45b49dc6ba6049657bc0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0150f1d65d2241f0b252fed809474e82",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 85,
      "NodeType": "ExtensionNode",
      "Id": "b9dc7301979743fc928c69e9b8168e0f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9f9958759be54e9fa01983fa5830b652",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Bearing_Lines;\nEqual_Lines;",
      "Id": "d6d99b3a85ab4fe482ea247cbd10934c",
      "Inputs": [
        {
          "Id": "7482aa2d985743e29fda295b7f9c368e",
          "Name": "Bearing_Lines",
          "Description": "Bearing_Lines",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b08852e6e6d1411c93394c49c3520300",
          "Name": "Equal_Lines",
          "Description": "Equal_Lines",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49f6dfd4d97842799be6fa29885e48f0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "568c32033cc043059cf92b1f77f5e37c",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ncurve = IN[0][0][0]\r\nwidth = IN[1] / 2.0\r\n\r\n# some vector math so that we can move the curve to form the boundaries\r\nlow_curve = Curve.PullOntoPlane(curve, Plane.XY())\r\nnormals = [ Curve.NormalAtParameter(low_curve, 0.0), Curve.NormalAtParameter(low_curve, 1.0) ]\r\ns_plane = Plane.ByOriginXAxisYAxis(curve.StartPoint, normals[0], Vector.ZAxis()) \r\ne_plane = Plane.ByOriginXAxisYAxis(curve.EndPoint, normals[1], Vector.ZAxis())\r\n\r\n# building the cross section\r\nl_start = Geometry.Translate(s_plane.Origin, s_plane.XAxis, -width)\r\ns_cross = Line.ByStartPointDirectionLength(l_start, s_plane.XAxis, 2.0 * width)\r\nl_end = Geometry.Translate(e_plane.Origin, e_plane.XAxis, -width)\r\ne_cross = Line.ByStartPointDirectionLength(l_end, e_plane.XAxis, 2.0 * width)\r\n\r\n# build the deck surface\r\ndeck_surf = PolySurface.ByLoft([s_cross, e_cross], curve)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = deck_surf",
      "VariableInputPorts": true,
      "Id": "46a35082e26a45fc96443356b5b3e686",
      "Inputs": [
        {
          "Id": "3622efaf368b4c06a44abe97faa6af81",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7cd8aeb142884c5eb7c0b76a624a964a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15e37f142da846c485d0d04e37ae2c0e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "b398b6ad805d4c1ebee3ab7d2e3dfc57",
      "Inputs": [
        {
          "Id": "4e1539638c28462bb5b42f491afc3556",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de9c6b778aaa4198a2f594419f1a9fa3",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e51b30ffc6334b4c9017db0acd391d3a",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "788c260ec0ed45579a07c1cf613bc1fa",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dbe9b79fa78d454390fd1912eb1602c0",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "585c558fa63f4174965726286360da03",
      "Inputs": [
        {
          "Id": "0bc31d537da948caa66927536db68668",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0163c0c3c8a42849aa1846d38e07fda",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1cf881ae87f343a8955a52db0bbce79a",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d1e4f0cbd7548349361ad090665b4cd",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1498d978fa9745f29cad51c6d1cc3dde",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "118b32d6182c4d17aa74a4d39e1e7934",
      "Inputs": [
        {
          "Id": "b97ea3a54115431bbe2482bf0c5bbd7b",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1004b7fbbc94542925be4e03315adf7",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1451830ff7634b358e45397770dbbbb8",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67f8d146358b481e902fdb280a53a926",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62320ace81824de0be4b377639c91791",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "d19fa4e4-cc9e-416e-8e84-cdee79af758c-000abc2c",
        "d19fa4e4-cc9e-416e-8e84-cdee79af758c-000abcc5"
      ],
      "Id": "5106ee04ed9747f1ae118814b4fc38ed",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "125d19e96400432c873f93d176222548",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.ReferencePlane.Plane",
      "Id": "7b4a554b1b5c4faf8e7be7a7b42cbad6",
      "Inputs": [
        {
          "Id": "12fa69ffa0d4481cb9b2ed6419dc9e71",
          "Name": "referencePlane",
          "Description": "Revit.Elements.ReferencePlane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b1886ed939a42ff8576b922377e86f4",
          "Name": "Plane",
          "Description": "Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the internal Geometric Plane\n\nReferencePlane.Plane: Plane"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "7c2ad896ce704805b9ebd16880546353",
      "Inputs": [
        {
          "Id": "fe71f7187ed0494db807a35dfea55e37",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54f9c72afd144eee933590b8826279c1",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac66e3ff231c42f380495ed641cf7350",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    }
  ],
  "Connectors": [
    {
      "Start": "099e6bd3f4d7435d813efc489cbb920d",
      "End": "4cc5b15975344a16bd97778ce2ec5176",
      "Id": "eceeccedd40b45faac1941ad89f977fc"
    },
    {
      "Start": "895e82add0664e5e93a1556a057f5822",
      "End": "ca848f3599294a8d8105e92e8edf948d",
      "Id": "bb963957a9794455a74c38aa747aa3b2"
    },
    {
      "Start": "895e82add0664e5e93a1556a057f5822",
      "End": "1eb57ec0718842c59f1b28250b3b18ea",
      "Id": "2e3e52fc3f9844af9a298234d716111c"
    },
    {
      "Start": "895e82add0664e5e93a1556a057f5822",
      "End": "772518be16ef46babf7a694f57359763",
      "Id": "d91a2a643d2043adb1bdc16c9c9d824c"
    },
    {
      "Start": "895e82add0664e5e93a1556a057f5822",
      "End": "3622efaf368b4c06a44abe97faa6af81",
      "Id": "5b40cd8ff2214d899fa40c19cb07a08d"
    },
    {
      "Start": "895e82add0664e5e93a1556a057f5822",
      "End": "54f9c72afd144eee933590b8826279c1",
      "Id": "7288ab6f27e94b6bbbac491139fbc8aa"
    },
    {
      "Start": "b37ef4b54da24edbaa17288fd1608ac9",
      "End": "2bbcd31214464128915ca151bbdee2ec",
      "Id": "0fb423205df843d79e679d8bf02fbc38"
    },
    {
      "Start": "b37ef4b54da24edbaa17288fd1608ac9",
      "End": "b1d4be43c8cd477ab3de916a3460bbfd",
      "Id": "80e36160c0d54c188dd04d34e272c1a7"
    },
    {
      "Start": "b37ef4b54da24edbaa17288fd1608ac9",
      "End": "d6e84764f06f43ffae552360014fef5c",
      "Id": "77d41917d31043ac8ea6e2e5ab1d0426"
    },
    {
      "Start": "63f456f73c2f4a8abbf624a4337498da",
      "End": "657cf72f1f134370bc5b86dbe1d1ee60",
      "Id": "abbbbfc0410e4485a5badaee9849314d"
    },
    {
      "Start": "63f456f73c2f4a8abbf624a4337498da",
      "End": "d0a2d7a9278d454e89d0f0e934654606",
      "Id": "e9a135f233114069838f7db4736ac20b"
    },
    {
      "Start": "c546946a0b2e40a4930f4e3556a41bd9",
      "End": "0c7ca5fa792645d0ba2c547e420dff04",
      "Id": "6452f72c52b943eca49b3cedc6c9cb90"
    },
    {
      "Start": "3251505f3bae42cea41c91eeda90c15a",
      "End": "bcc51781aa694ca190c93dc3babf03f1",
      "Id": "2ca2651374ce4741a80ec6eec8310d9b"
    },
    {
      "Start": "4264654ef2db4c5e875c15b721a6c5d9",
      "End": "143ae78fb0ae4febb44731d6638a62b9",
      "Id": "f344e326cd0848e69b001ffe43dd5226"
    },
    {
      "Start": "d096885148d1468498ec95546a6967ee",
      "End": "9feca3b977714ef6afccecfa82b871cb",
      "Id": "8a0f3893c03f4a918c8a6a19be93669a"
    },
    {
      "Start": "168a9121de2b4169ac107b1a4a715cbf",
      "End": "2a85035c62914468bc314af0af248698",
      "Id": "8389bd2a03d24b24a82644783e60a0a1"
    },
    {
      "Start": "f52f6e3ac11f46d4ad46d9c8078bf83e",
      "End": "dea92b0051e24fb48a9d908709cdb077",
      "Id": "88f6347eaee44405bd46bd6c1a1100d0"
    },
    {
      "Start": "ce6b9971e0594c96a3ee44eb0ab845d9",
      "End": "8a31120ac9a74716876075c4998bca20",
      "Id": "d73c3935fddb47e9a747ecedc8c6b798"
    },
    {
      "Start": "8c881ec4e34e4edca82a3901a6c82328",
      "End": "ee983c4794fe4835b7ce7a3dd22f5270",
      "Id": "9ccb7647551f45d2b735bc8593c0adca"
    },
    {
      "Start": "2be1d2012f3c4f5887f4c59690bf0492",
      "End": "b165b38c21614099a8b28ebfe2c16dde",
      "Id": "b49ff7dc573547f091d18074c2a5c9c9"
    },
    {
      "Start": "2be1d2012f3c4f5887f4c59690bf0492",
      "End": "44ac25c8bb944cfb9b541bfa5d5324a1",
      "Id": "9832b45ef96e44e9ad1f30aea4e8959e"
    },
    {
      "Start": "c8a71489775d44fdb0859927ce48adb4",
      "End": "18490bbe6b3749d082ee6411d3b6f063",
      "Id": "75c281e12de34f2c880cea719aca6227"
    },
    {
      "Start": "c8a71489775d44fdb0859927ce48adb4",
      "End": "1fbd04ff2cf74b449d2aba9fcbbafec2",
      "Id": "5a61ad714aeb45d494f9e10ef9b2e310"
    },
    {
      "Start": "c8a71489775d44fdb0859927ce48adb4",
      "End": "cb6cc9ee61c147b0b59f1e2c94414622",
      "Id": "bccf302a66b240c1912330963c77bdff"
    },
    {
      "Start": "eff12a05a3e2468ca9acbc9db0ca858d",
      "End": "062c4c631022442daaaf30cd0a629d23",
      "Id": "415f3b20e3584a7a9fbbe2608e5bbf3b"
    },
    {
      "Start": "495fde95271446b7a7124010d3084cf6",
      "End": "203f252f94cc45ebbfbe2dd6261e5ae4",
      "Id": "57e25ab4690d42c6a0f42dd105c5c7d4"
    },
    {
      "Start": "7b8b62a4924843ed943051f6ccc6d7a9",
      "End": "d29c26867a694bb88dc588bb7f92198a",
      "Id": "6cde914ce05f4b42a38e6cd9f6db4b4e"
    },
    {
      "Start": "7b8b62a4924843ed943051f6ccc6d7a9",
      "End": "161ac27c0d3048a4b9ba6e6cb0eab254",
      "Id": "2591136daefa499fba2e68c0d0c7487b"
    },
    {
      "Start": "7b8b62a4924843ed943051f6ccc6d7a9",
      "End": "fc636e8cde6e41eb8587eadb179d9e67",
      "Id": "1388e231fa764be1afcc797a9b105559"
    },
    {
      "Start": "a1b1c0a44536463782512b14559c3f3d",
      "End": "beadca67cd614ce4b33e41d744021feb",
      "Id": "136de9e9f6aa44d28363ab35cdd12481"
    },
    {
      "Start": "a1b1c0a44536463782512b14559c3f3d",
      "End": "32e5cf1c2c7f453b919984dc32aaaed3",
      "Id": "2d3b9fdc85d4452989b1b3e3e713d9ed"
    },
    {
      "Start": "a1b1c0a44536463782512b14559c3f3d",
      "End": "8a0bafb4b26e4dfc8acd7f2da0e213f2",
      "Id": "9e43db704fe24be793ca7c4a683989a1"
    },
    {
      "Start": "a1b1c0a44536463782512b14559c3f3d",
      "End": "4219193a38994faeb89666f4d0d92d14",
      "Id": "96962f4be46a4a1eb449b89a75884443"
    },
    {
      "Start": "a1b1c0a44536463782512b14559c3f3d",
      "End": "2cd57a007f7e4f4b9c38f427435ee62e",
      "Id": "eb32e97f66774575b5214f7a41b771f3"
    },
    {
      "Start": "a1b1c0a44536463782512b14559c3f3d",
      "End": "98ac74fc28df49d7ac93911cac7c0c61",
      "Id": "f2d7065ebccf41fd82b2782732032cc3"
    },
    {
      "Start": "a1b1c0a44536463782512b14559c3f3d",
      "End": "64d63b9134104fd6b3b619af43499345",
      "Id": "31b6b18399e24f77b5d1644df0f9c0ef"
    },
    {
      "Start": "a1b1c0a44536463782512b14559c3f3d",
      "End": "3dbddeec3c0e496293fd6b96ae67ce9f",
      "Id": "83834c2fb82943e5aa7886b550d245f6"
    },
    {
      "Start": "a1b1c0a44536463782512b14559c3f3d",
      "End": "7cd8aeb142884c5eb7c0b76a624a964a",
      "Id": "f4deabe06d2c42619c670c8a056d0a75"
    },
    {
      "Start": "f1369cd304104bcb9da4f08fecc75c60",
      "End": "7ce43e390cb14a34bbffe82e71c6d920",
      "Id": "3b1761de29e74311854db15f6257662e"
    },
    {
      "Start": "fb8e60013ede4193ab228331e8d3f3d0",
      "End": "7f21f8b4d46641bb8e16ac779940b393",
      "Id": "3b671521f57c4a90ba93c4ce459797ff"
    },
    {
      "Start": "ba5abc45e87946769f9cf74b7a7c89a6",
      "End": "b08852e6e6d1411c93394c49c3520300",
      "Id": "70017c28fe2c4ae7a55a7bf863f6e771"
    },
    {
      "Start": "554c63dc94f24f3797cb398d42683186",
      "End": "be366bc1431a4ab081c46e419efe408c",
      "Id": "cabfa58fcc0c4b879f9394d70cb7d0fb"
    },
    {
      "Start": "554c63dc94f24f3797cb398d42683186",
      "End": "f0b59dc7fb8441ffbf1c1920b4c491b9",
      "Id": "53cca58e377b454eb6748688b4dd53f0"
    },
    {
      "Start": "554c63dc94f24f3797cb398d42683186",
      "End": "114a3221d1d14b76adc55e93d2dd53f6",
      "Id": "fb49a76cea974353b77218c2bc68f046"
    },
    {
      "Start": "651ace389cc240419cc8f570e6ba60f1",
      "End": "f149eb48384e440abd50b90bf9ca3101",
      "Id": "27212925f48f4f39a12b83f6fb649df2"
    },
    {
      "Start": "df29d4facfeb40859531b7ea2a6ca809",
      "End": "c54fd305098f49b0a078105cabc2545a",
      "Id": "fab8594b6822413e8354f77f50a17078"
    },
    {
      "Start": "df29d4facfeb40859531b7ea2a6ca809",
      "End": "30308779b1854aa99c413b52dd22e64b",
      "Id": "1895aa6e9e5446fbbbf825195427ca25"
    },
    {
      "Start": "df29d4facfeb40859531b7ea2a6ca809",
      "End": "4caf80a7d7f2423ab121382b53ca0355",
      "Id": "ac1731dd4f9f4c969f46851aecfe6123"
    },
    {
      "Start": "df29d4facfeb40859531b7ea2a6ca809",
      "End": "7b6e5d1d6ce346258d89264c91af5403",
      "Id": "f8aa63c38d284efea642502c3c02ae25"
    },
    {
      "Start": "df29d4facfeb40859531b7ea2a6ca809",
      "End": "fb233eb16381481eb37b87af63654fd3",
      "Id": "7c3281950eb649758db5415cf60149d9"
    },
    {
      "Start": "df29d4facfeb40859531b7ea2a6ca809",
      "End": "94f2ba9fd05b48968c0839e8383ae19a",
      "Id": "918e73659415465fb119b63afd15d0bc"
    },
    {
      "Start": "df29d4facfeb40859531b7ea2a6ca809",
      "End": "c39b804e48994528a114df11744e9f15",
      "Id": "ee33002a385748abbeda2152bc98e104"
    },
    {
      "Start": "df29d4facfeb40859531b7ea2a6ca809",
      "End": "91f0587c90a14c43a6d382aaad89f280",
      "Id": "f00e179484d042b3b109ce4d4b7c2dae"
    },
    {
      "Start": "df29d4facfeb40859531b7ea2a6ca809",
      "End": "688143e96863460b9b2079a37f98d34b",
      "Id": "9f98c96335b245fc803962ae56ac7818"
    },
    {
      "Start": "4e2116351369431ea4f4bca435a17c08",
      "End": "a39c0caa5d9d43bfa094a1b8b64ce356",
      "Id": "1a04e1b405e44c249d7c0a081ff7eb1e"
    },
    {
      "Start": "4e2116351369431ea4f4bca435a17c08",
      "End": "98d530a0370a437cb2f3a73bbdd33312",
      "Id": "cf3556c4f6424d03969691efcbd4b513"
    },
    {
      "Start": "a08073d067e74649920ee75fe42326dc",
      "End": "dbde32b314ef48dd8b3bc446d00c8b9c",
      "Id": "23d9b68b8d904156a8156d8a97df4451"
    },
    {
      "Start": "ca6222d6af274c88bf30012953d062f6",
      "End": "af28c5cefd5242f6a55229e1ded38aee",
      "Id": "73bc18095775447eb71eea333feed297"
    },
    {
      "Start": "f4c8a1938d074e24a2347b7c89bd76a7",
      "End": "31ec749c36e6414e9cca87c7d40ac93b",
      "Id": "33cd83d731f74d1cbe452e6397a92c14"
    },
    {
      "Start": "f4c8a1938d074e24a2347b7c89bd76a7",
      "End": "4754e6723e5041999396592785dba2ce",
      "Id": "4dde3071402746609aaf0366246bb14b"
    },
    {
      "Start": "48dace9f76374190af52e03b8d055ba7",
      "End": "47886b5f5b4b4953ad79be782d322382",
      "Id": "a0556b8c966a4e48aa7365a77a26b7a0"
    },
    {
      "Start": "48dace9f76374190af52e03b8d055ba7",
      "End": "84b53133c7c74e24a923fec449aff86a",
      "Id": "a56b1c7e819d4e6e8b904545f9cb9c1d"
    },
    {
      "Start": "48dace9f76374190af52e03b8d055ba7",
      "End": "4ebb1e645cd04fa2ab43f198a62b6ca3",
      "Id": "79ce162eeab14ea28fe1207e9aa0a2de"
    },
    {
      "Start": "48dace9f76374190af52e03b8d055ba7",
      "End": "b9d134498bf64ebd9f80f0ba6e6e46f4",
      "Id": "3576d5072c1848688d1b3f64919e6d6f"
    },
    {
      "Start": "19418e72e3b74e60aeeb66b9edf2677b",
      "End": "0aeb0381f32f471c8bbb7f0030129ec2",
      "Id": "d36821b265744a8ab7eac867e9db6e3d"
    },
    {
      "Start": "19418e72e3b74e60aeeb66b9edf2677b",
      "End": "cc6d5f76f57c44f69e9036814cee06dc",
      "Id": "98b921451a9447dcb1fd97b5d3f48402"
    },
    {
      "Start": "108315444590405c83a959ccf4895266",
      "End": "aed4b9e82f2544e99cd9a7784fd67c51",
      "Id": "905594ae96f34d4abe237e6b60b56653"
    },
    {
      "Start": "108315444590405c83a959ccf4895266",
      "End": "f60db26738c54442bafbaa89e544cc84",
      "Id": "ca9c5b0289064c73bf8660ee98f72009"
    },
    {
      "Start": "108315444590405c83a959ccf4895266",
      "End": "3b9933f85ae34b059c7848913df242a3",
      "Id": "2be7560fb5c3407f93697741783bc260"
    },
    {
      "Start": "108315444590405c83a959ccf4895266",
      "End": "b0b0ffe9bbff44b1a7aded3b3f77ca6b",
      "Id": "c7bc39e7e8e64b39bc5783023734921b"
    },
    {
      "Start": "108315444590405c83a959ccf4895266",
      "End": "e4d814061d6849dbbc498cc0befa5db2",
      "Id": "0a632693c70e474fb6b6a0942a56b411"
    },
    {
      "Start": "dc32a8d60ac644b0b227b3a1d0bbb21e",
      "End": "226f1213bbc1416491cc56c46df0b0f1",
      "Id": "61b8e3bf994942709444e6f2cd0afff6"
    },
    {
      "Start": "dc32a8d60ac644b0b227b3a1d0bbb21e",
      "End": "5f3505e84fea487589b4fa470a85da8e",
      "Id": "9c0598c4eb17426787e1d974e93fa6a8"
    },
    {
      "Start": "3d5b3596b00a41f7a692aa5acb0ed38b",
      "End": "aace9f1f5f414875a6d6fd480c8e029f",
      "Id": "e362b991edcf447cb5c0848a9b97b2ed"
    },
    {
      "Start": "3d5b3596b00a41f7a692aa5acb0ed38b",
      "End": "1c39459783b34a1298ecec9b6f173450",
      "Id": "5ec702552ab446f68f4364c2ffffad00"
    },
    {
      "Start": "4a0d2055e2004cd8806de01036466077",
      "End": "fbf8000f440e44ae96ebfec765ae91b3",
      "Id": "1305618389014b3c8092f1861c968771"
    },
    {
      "Start": "4a0d2055e2004cd8806de01036466077",
      "End": "7e1f084e81c14f01ba0dd4bec5f10f3f",
      "Id": "ff5c1336a0594631b326eb849b6cc0d7"
    },
    {
      "Start": "677063a0ad914519a7c569f585387154",
      "End": "6306385e655046b3aaabb9fec597c1c4",
      "Id": "fc93b580b9214582b6affe41d2034f87"
    },
    {
      "Start": "677063a0ad914519a7c569f585387154",
      "End": "caf065f8e806447d955746d0786efa17",
      "Id": "df5b056de89641da9acef06491105fd7"
    },
    {
      "Start": "978fc6cee4e34b01beb0239546532605",
      "End": "00439194e5104d608c730f69917b3018",
      "Id": "068779353b8b4a5c9b97bb577fe5deda"
    },
    {
      "Start": "978fc6cee4e34b01beb0239546532605",
      "End": "c712f0ac98a44be7841cb40d622f9da4",
      "Id": "f42564af89a046d595787ad2caaeeddc"
    },
    {
      "Start": "978fc6cee4e34b01beb0239546532605",
      "End": "856d69516f9b47ea80c68ac88bad360d",
      "Id": "c59fe5da92cd4ea6889c6493a0853c0e"
    },
    {
      "Start": "9dbc8973e3574bf380789dfe8e6c68ae",
      "End": "5f1fd8fdd501433db75636266f802c13",
      "Id": "020b2796469741a2a1eaed4c7f23afe0"
    },
    {
      "Start": "9dbc8973e3574bf380789dfe8e6c68ae",
      "End": "80e226d68a524860ab60d52cf4aab324",
      "Id": "a8a4daab882b4c5dba271f5be239e213"
    },
    {
      "Start": "9dbc8973e3574bf380789dfe8e6c68ae",
      "End": "1a5cb9671ea04e2a8cc9969289d785f4",
      "Id": "39dc9b1fb6734049af83d11e355cc5e8"
    },
    {
      "Start": "9dbc8973e3574bf380789dfe8e6c68ae",
      "End": "605326405e034b56bbd220bc6df81e17",
      "Id": "d997507e21fb4bbf85cb5302f16db91e"
    },
    {
      "Start": "9dbc8973e3574bf380789dfe8e6c68ae",
      "End": "306dfe57c8304c3ebe02dc689ccb7759",
      "Id": "85555bd6bd85485e96da22297a73969f"
    },
    {
      "Start": "9dbc8973e3574bf380789dfe8e6c68ae",
      "End": "9dcfb86f75b64a7e8430b4e7f5330a86",
      "Id": "8b29c6597d6e4b02a11c3630ebecff41"
    },
    {
      "Start": "9dbc8973e3574bf380789dfe8e6c68ae",
      "End": "014db28cd04f43f1923113c8a2f0544b",
      "Id": "476190f61fe348319cc623e9dc71be4e"
    },
    {
      "Start": "8d446fd6f77b4e3b93f2fc8d65d17ca5",
      "End": "543b2845ade84720a94d0377d9232665",
      "Id": "f8023cd0dc504c5dad04d82d68d85e8b"
    },
    {
      "Start": "8d446fd6f77b4e3b93f2fc8d65d17ca5",
      "End": "8fb06d80271247fcadae09074b1b08c6",
      "Id": "30c2bd812beb4d6a88284ec4bcd81322"
    },
    {
      "Start": "d563dd54149349769b4aef2274964935",
      "End": "635fdd10022e4ab1a317785d9a1c154d",
      "Id": "b1fe05ddfcd0431abe6250f169fabfa0"
    },
    {
      "Start": "d563dd54149349769b4aef2274964935",
      "End": "b8b06d525012439794d58710940a4000",
      "Id": "e0ee2cdbfe544cf6a54b7607164ee65e"
    },
    {
      "Start": "8f75915bb72e4a838931bc3a308ea63f",
      "End": "1e29be1f0bd14670b80dbb54093a8980",
      "Id": "828f8b6c5dd94482998789d048ebc94b"
    },
    {
      "Start": "8f75915bb72e4a838931bc3a308ea63f",
      "End": "f56af4a9c067492da4ee6b9abbf862da",
      "Id": "fed889e38da342838baaf695aa240357"
    },
    {
      "Start": "8f75915bb72e4a838931bc3a308ea63f",
      "End": "8ee2feeb770049cda9bf1a0b0315915e",
      "Id": "e5711adc76c94c0c9d69b46dbf778ef5"
    },
    {
      "Start": "8f75915bb72e4a838931bc3a308ea63f",
      "End": "cf3e569e046c420e866066fa5ba02b4e",
      "Id": "5bc0428b8e5f4c09a6e3580f2ce240a2"
    },
    {
      "Start": "258e1125b6304096990390fd998fd0b3",
      "End": "08c69559d28540e8951c4647220fecec",
      "Id": "6647141ce7e34699a103001bcf65fac4"
    },
    {
      "Start": "ec5fc13d821340d1b8399fdde50d7cc9",
      "End": "bb30c6a1ed0f4b20882039fc42a9cada",
      "Id": "8debb3776fca4b938bad960fd18d9cf7"
    },
    {
      "Start": "0860eb10a6994fdda70ba670dd832887",
      "End": "8745ee3f7f124617bba38a5a9ae15d88",
      "Id": "494cc8f3bcb74e19ac86208c84280be0"
    },
    {
      "Start": "0860eb10a6994fdda70ba670dd832887",
      "End": "47c0443a34694591a9543906df0a21a1",
      "Id": "bb12a4e6ecf54a368156e5f8a5af816f"
    },
    {
      "Start": "0860eb10a6994fdda70ba670dd832887",
      "End": "0a9c4c295281428391025a7af0ad83bc",
      "Id": "d5d02c33157c4f30ba9ecbf73c6834bb"
    },
    {
      "Start": "0860eb10a6994fdda70ba670dd832887",
      "End": "cfa33404ec17440e99999eb82eecbee9",
      "Id": "18b3f5da72564ad3ac93eea36b9d625f"
    },
    {
      "Start": "f93086dbb71b4b98887caec2a0d8ba7b",
      "End": "bcc1fccae77e48bc8107acaf8b98adb3",
      "Id": "3ecaf190e2ce4298938db4160d00980c"
    },
    {
      "Start": "f93086dbb71b4b98887caec2a0d8ba7b",
      "End": "d1eb085831ef461292f7a2ef1c566646",
      "Id": "85fce5555a8a43619e132ff0227efb99"
    },
    {
      "Start": "f93086dbb71b4b98887caec2a0d8ba7b",
      "End": "eadd319ddaad45b49dc6ba6049657bc0",
      "Id": "1dbb3dc049f94096be936a17b8be3943"
    },
    {
      "Start": "594be4a4bc0146b290132a86733a9b50",
      "End": "ed9753e40626442085bff306e5e43daa",
      "Id": "df7e1667a32b4370814bd2f84db2423e"
    },
    {
      "Start": "594be4a4bc0146b290132a86733a9b50",
      "End": "dd85ee49d69643a8989992b2922bd3d4",
      "Id": "7f79251d54864119830b6909674f92ed"
    },
    {
      "Start": "594be4a4bc0146b290132a86733a9b50",
      "End": "02e6f23089a14f9fa3ed1ad08d0097af",
      "Id": "d0d81775fd1a4cba96f90ff8f4baaf7c"
    },
    {
      "Start": "594be4a4bc0146b290132a86733a9b50",
      "End": "2a6804dc898b4453add9227611f40979",
      "Id": "56935f62a7a2458f9224e02927ca3ad7"
    },
    {
      "Start": "594be4a4bc0146b290132a86733a9b50",
      "End": "ae91dccf9da34dbc8a8c8d87df461c36",
      "Id": "b2675122f6d24fd5bca4f311dcaa1698"
    },
    {
      "Start": "6798b54123854f34b7cbb8673cb3dba0",
      "End": "78c3ac2c451e4020b42747fe641b4521",
      "Id": "5779bd84992d405c953e4bc54626d1f0"
    },
    {
      "Start": "6798b54123854f34b7cbb8673cb3dba0",
      "End": "7fd7b68641f844e9b072c09acfa61972",
      "Id": "cba98df21449420ba2bf252f3adf6775"
    },
    {
      "Start": "da535370b4674a82a3a9769ed2b80295",
      "End": "820e4786fa974e949d25651fe67b202d",
      "Id": "4ca87b266a7348c1a6f10ec7b5650c26"
    },
    {
      "Start": "da535370b4674a82a3a9769ed2b80295",
      "End": "22935af869f64da3aa93c927ffaae5cd",
      "Id": "11039bd4c9334582879f14cb994cd087"
    },
    {
      "Start": "da535370b4674a82a3a9769ed2b80295",
      "End": "152de659142d46f9bc746ab2d85e83d8",
      "Id": "bb30fb5776d54997a17b3358f084caf0"
    },
    {
      "Start": "da535370b4674a82a3a9769ed2b80295",
      "End": "f4718d25489e4dc2874fe6421bf74b5a",
      "Id": "a26f290fdb9c42d29525f2bf72b74cdc"
    },
    {
      "Start": "da535370b4674a82a3a9769ed2b80295",
      "End": "3976a0f2077940068fdab85919854919",
      "Id": "a29276002ba44f8e80c530564838f3cb"
    },
    {
      "Start": "da535370b4674a82a3a9769ed2b80295",
      "End": "2138cef1540440ad9e99654c270b35b0",
      "Id": "f7a34c9e9fed4115b9d6268475849048"
    },
    {
      "Start": "da535370b4674a82a3a9769ed2b80295",
      "End": "c4e3a8c2c55740dbb51cf4383132b239",
      "Id": "7cb4246aff094948b057df0ebba723cb"
    },
    {
      "Start": "6e5a2e954f0f4e84a9468cc5ae723969",
      "End": "00d17e9b85194a198c981f2feaa2b55a",
      "Id": "05eef3795b6d434cbb31da27bc07fed6"
    },
    {
      "Start": "50ba8a1a5180471c98b6dcb8a2a85863",
      "End": "622e4255a52e4435b2a26c2ed5762264",
      "Id": "11333f5a077c4934865d845d6b3b9639"
    },
    {
      "Start": "89988fced2974a2f854a6ff0efbb411c",
      "End": "864d9d4f436746d3b138de231789f8ce",
      "Id": "f29f3688ccfb4963b7a0ef2866405864"
    },
    {
      "Start": "477e1bcd4d8c40ed958bf258e7315315",
      "End": "a75ff8ed2851419d8b1e2c4831be68f6",
      "Id": "e62f17ca58854c2592ebc3a5798d706d"
    },
    {
      "Start": "3a577729449f41f28ef0d024000b6a8b",
      "End": "de852e342b644a12979b673176166f89",
      "Id": "6ff5d019dea74af88cf76e885a053d5b"
    },
    {
      "Start": "e6040906d9fa4019bf9cbd600d80f63f",
      "End": "d1f878b6e6c3416cadac8b065b426dd2",
      "Id": "6bd122d51e684cbb8b1334c2cebaa919"
    },
    {
      "Start": "61ebf52dd33d43be879970806c186397",
      "End": "4e1539638c28462bb5b42f491afc3556",
      "Id": "5063d623d8544a0984422c0d8c376098"
    },
    {
      "Start": "4885ac7379c24eac994a0751df159f31",
      "End": "b5090cb555b24a4fb224bfba9d646740",
      "Id": "deac53431d864c928d8e366b0b0eebfc"
    },
    {
      "Start": "c5615442036e412ba26849ad651f5f6e",
      "End": "55b757a88d5a46c69793bc312883f81a",
      "Id": "7803e3c8900b4ee48fcc794fc3a41e12"
    },
    {
      "Start": "c5615442036e412ba26849ad651f5f6e",
      "End": "9ae3336bbc694da7bf2d6ffa9737a4dc",
      "Id": "81eefca223d641ec8f5b113c89de22b5"
    },
    {
      "Start": "c5615442036e412ba26849ad651f5f6e",
      "End": "17f86d0b6c1d4aeca1bbc072ecc3daec",
      "Id": "20176d62b93c43d59c37d6e4f38a0a76"
    },
    {
      "Start": "e009c6efa2fb44678633726f24818ac8",
      "End": "8689f4a6918d48ac92a110b6f669d5e8",
      "Id": "69e2c0c420d94fc187cef6101c666780"
    },
    {
      "Start": "e009c6efa2fb44678633726f24818ac8",
      "End": "f6b635c44ce74856abb6df3d113ff770",
      "Id": "52a539c51b0e4b02999fd96647c02d5e"
    },
    {
      "Start": "e009c6efa2fb44678633726f24818ac8",
      "End": "cc17f223148e4f5993329f19a374b619",
      "Id": "05c68174a56e498ab6530259df775450"
    },
    {
      "Start": "ad9506266bc442558fb0e5a6f74b7177",
      "End": "03edd35f51dd41aa8c0cd642519c6619",
      "Id": "35b30d57653e4fe29f72e68ee214297e"
    },
    {
      "Start": "ad9506266bc442558fb0e5a6f74b7177",
      "End": "5773341e7ba74a54850b8a8304fcd83e",
      "Id": "8684d169c6b64d018a6d486d98b854c0"
    },
    {
      "Start": "ad9506266bc442558fb0e5a6f74b7177",
      "End": "783a005827d64d9498f45ae7df77d46a",
      "Id": "498768f108fb4bdea697b7d2188ae528"
    },
    {
      "Start": "05f8f40d4c9d4f43b337546326d913fe",
      "End": "44f42c90dbe54546b7dc67e71ac1a5b9",
      "Id": "00b184df8f034e50b7d9a00ce7786fee"
    },
    {
      "Start": "05f8f40d4c9d4f43b337546326d913fe",
      "End": "c38b62760f8a4e4086ede78c24392588",
      "Id": "d983e895d0b1463bab6d6c44414f9270"
    },
    {
      "Start": "5e5fdf5674ad4a25af3882439868256c",
      "End": "c66cd9b23df449c58dafa0a4573b32b5",
      "Id": "b54c4e428a884b9dbf6421fe8ed95337"
    },
    {
      "Start": "0aeef55e643d44afa95859ca57fcc10d",
      "End": "5904d20a2509406d9b36f517bb742a5e",
      "Id": "f438dc0d937f41ed8a70f17d9e8ec3ee"
    },
    {
      "Start": "05bef5912b06409781e004e95360d70d",
      "End": "39b96ed0ece74739beabad99085af094",
      "Id": "df3dc2bb96094dc5873f6eb3f6fb44d2"
    },
    {
      "Start": "1958d33bd9704b968ac108048c26ee81",
      "End": "ae72cb712dc64a5f8dd90570ae4fe549",
      "Id": "525369b1042c4e17a5ca84beebe14eef"
    },
    {
      "Start": "d136f0da67e84b19a13f755a39d965d6",
      "End": "4964c9df352940cc8bf965db0b74dd8c",
      "Id": "7a8a48d548614a2387cebb47d702ce7d"
    },
    {
      "Start": "87152f5b20db49c4819aa5a4f300b6d4",
      "End": "203da4e1daaa417a9e08b9304f391f9e",
      "Id": "354a359c060641c48bf0b80ba209cc82"
    },
    {
      "Start": "820426d0fc3e429faef7fd3bd1b5cafd",
      "End": "cb762751db474845aa11e4c3daade9e6",
      "Id": "9d04b04658d7408db04fce633252153c"
    },
    {
      "Start": "6f0e7b32cae04abcae84d56042a83cad",
      "End": "8e262c0df11a4322823ce0c1a83bc85e",
      "Id": "d34cc096934e43c1a72b776f73063e6a"
    },
    {
      "Start": "83a7728ca3954c5a81fdfb756170bcc2",
      "End": "d7aaf5d669be45e5beffa0d23384b735",
      "Id": "27f7766acff746b2ac5c08ddf196b835"
    },
    {
      "Start": "5c5e35efa603480ba62e368d10a68f7e",
      "End": "07b96ea4ddeb443f98d7d02bcfe255f5",
      "Id": "ecb23f01fbc643e69433285c12178b0a"
    },
    {
      "Start": "8bfbb6f13ad24a88bc238299dd648c0a",
      "End": "b7e86cb7d909411797d9b85faea88d2e",
      "Id": "351c43ed7a274f6d9143e8a4eb5a752a"
    },
    {
      "Start": "8e0ecd9a40db44e881fe3c4b6027292a",
      "End": "6b0397bff6c7456fad34cac48073b60a",
      "Id": "2e3f6fc3122a4aa09eef84dd25687fda"
    },
    {
      "Start": "7bad46b32a784bc1a37006e20f60c153",
      "End": "a7b30d282a8e47c7a68a5afc9df14755",
      "Id": "6c2c1974224e4f3ba07423dbf7254710"
    },
    {
      "Start": "e42962db918c4e26af6227ba37ff63c8",
      "End": "44ac3143804b46969dd56b8fae9c3324",
      "Id": "5084859385324b63ba072149db579014"
    },
    {
      "Start": "64c14e5a11664577a02a2c22796a3d32",
      "End": "af3f523ced004327adc742f6f8e52562",
      "Id": "1659c4b5668e41f38054f5ace15af62e"
    },
    {
      "Start": "8cab0be9141841ac95c597a8b4450599",
      "End": "7b87904755c44242b95199b26aa079cd",
      "Id": "3d48a726568247de9489e348725871f8"
    },
    {
      "Start": "2ea737e54e6c496f9017485c84295ba6",
      "End": "d843899473e8405bb17544b6b7db83b6",
      "Id": "4e04b34addce4ca7bea3c7d256534f2f"
    },
    {
      "Start": "b2ed3f44acc1485f868387e27dad08c9",
      "End": "a5c29853c9724c88be2f070902df12af",
      "Id": "2ce18be6286f45a7b0f1c33e26d92581"
    },
    {
      "Start": "46d91971b13e4b8da95aebda545a1730",
      "End": "a892a872d68246b1bcb3140fbe4f6489",
      "Id": "63ada2b5ff724b99b7789728296b8fa3"
    },
    {
      "Start": "46d91971b13e4b8da95aebda545a1730",
      "End": "03c7aaaf10f941d49f62da8f59a5813b",
      "Id": "bc565942765f43fe8c9caa0f1d5c1e9f"
    },
    {
      "Start": "46d91971b13e4b8da95aebda545a1730",
      "End": "aa3ef990549c44a9a2c0fa1b5af899bb",
      "Id": "8641cd22be294dc1a119507b86ba5b3a"
    },
    {
      "Start": "e245375b9f044bbeb795a3eafc088faa",
      "End": "70f919d6458f4067bd799a03e614202d",
      "Id": "7ef54d996f9c46f093c2060b3c541670"
    },
    {
      "Start": "76e93cc17e824aad8c5ef4b3e001fb60",
      "End": "0bc31d537da948caa66927536db68668",
      "Id": "0c4e30522437486ba565c57200d839b6"
    },
    {
      "Start": "63f7503dd51a464393b6fc4ab7f07e91",
      "End": "7414fe46f9924d7f92777cbb03419e34",
      "Id": "32b1830711684ff8a8a892cfcf689d4f"
    },
    {
      "Start": "a620afb123854ecab4d29b05eb4f6c3c",
      "End": "ed5e6664f94d42cb8d1213f8781eda1c",
      "Id": "c9d9844122a14e7abaa460d0aa054cd2"
    },
    {
      "Start": "205bb702c50141989391ce045e77e13d",
      "End": "08ea89c395d448d2b5ad8cc3a6d66656",
      "Id": "4d4e32db268d41528fe6fa82e5ff03e6"
    },
    {
      "Start": "230ad8a9fb1a409aaec200002d04778a",
      "End": "e05c927dc9bb4e238587945e487a186e",
      "Id": "a5c04be6a27d446692beaf6162962461"
    },
    {
      "Start": "dd316e0471564a46bf4f9db5535d5c11",
      "End": "21d0cf3b5c23414f9bdda8dce8c100a7",
      "Id": "90ff64d1b3ad4b0aa2f4f4bd059b0c5a"
    },
    {
      "Start": "86d49c65518e4b7d8497d0096a23f8a8",
      "End": "11a1e3e47908443c86d8f38a57cd3e77",
      "Id": "4cbeebdea5b54e908e145177f123072c"
    },
    {
      "Start": "689827cd678d42dfa054f79da4ae5629",
      "End": "64aa6ef23a204190aaea736afddc5bbf",
      "Id": "6bf31f8771a64c6cad47d9619744802f"
    },
    {
      "Start": "cafd8753594a4365b5126dc827ddef6a",
      "End": "a3b0bb2a04b54ee28efa147e285a9dfc",
      "Id": "ec7e7c0f5e4f4024bc2a2a5f773ecd7e"
    },
    {
      "Start": "b53d543f51a04b74ba5acf51fc97dcc9",
      "End": "850f01386f784e38add855f3f5e25f31",
      "Id": "fb77e8b4834142aa882235c1ff433ddb"
    },
    {
      "Start": "b53d543f51a04b74ba5acf51fc97dcc9",
      "End": "4fbce8a82a5340b688b1f4a74643ef17",
      "Id": "617a58a3d0574a5bbbfe876788bbbb05"
    },
    {
      "Start": "b53d543f51a04b74ba5acf51fc97dcc9",
      "End": "6fea4e31ba5c466ca7ab00c5cec4416c",
      "Id": "ae55b1183674471d80b341e4966be2b6"
    },
    {
      "Start": "6819dfe6159a4f3fa537d6c1d3cb419d",
      "End": "569f392f0255497a9de81f70b16d0c9e",
      "Id": "aabc8849a28746bfa5d6deca99798c84"
    },
    {
      "Start": "15a3c5e06f544f049d5791989ca631f1",
      "End": "41d07f9277b64cdca20cdf6c66ec5831",
      "Id": "2fa7a680bd8f48a4863865f8890fb8a3"
    },
    {
      "Start": "7b5b34368460469db18122aa50c9a9f0",
      "End": "d16e2a0515ee48258051cdd1b09dd416",
      "Id": "81b24d9a766f4bd0af8ff1eef34b3b50"
    },
    {
      "Start": "d7eb6fc2e739457ebc92f5d37ba258e9",
      "End": "1f5bc24ab4cd4a24b1d721ebb9b83b3d",
      "Id": "b4ae41cd6e52469e96f0958080249fa9"
    },
    {
      "Start": "d7eb6fc2e739457ebc92f5d37ba258e9",
      "End": "a7adb629c7174b6f91a4a7a5a370255d",
      "Id": "d87c53a92c7d4a70b1f38754104bb651"
    },
    {
      "Start": "c44479a31666459c8ec46f3a74dd978a",
      "End": "db1476fdee614d57b5ed8b754b011381",
      "Id": "f9b701f620054f2099a38087786dcef9"
    },
    {
      "Start": "c44479a31666459c8ec46f3a74dd978a",
      "End": "e7934a48dca04777adb0557a4c7d674f",
      "Id": "0c236c5ccdea48b3aa2b29c1d2e1b336"
    },
    {
      "Start": "31a1de95bece4697a8ed74556d97fa1d",
      "End": "b1004b7fbbc94542925be4e03315adf7",
      "Id": "25f2e7e630124c02817874e74cfa02d5"
    },
    {
      "Start": "c07a37b92e1944a6aa30365ba5f4345d",
      "End": "504583e763034adf8a7ed7e314d3dc02",
      "Id": "456e08a1ee6e4bd08fa71f5f7dd2883e"
    },
    {
      "Start": "50af04971df44f3ca4d389f25fb9e207",
      "End": "b97ea3a54115431bbe2482bf0c5bbd7b",
      "Id": "40562d4e4c4b4e59916ef69b91c2ef3b"
    },
    {
      "Start": "98a5421835da4d3c8c7f6cf37738c6b5",
      "End": "6d3775904e404e798e983cd6f6acc187",
      "Id": "6a1f76d242d44858af841eb251dfbf86"
    },
    {
      "Start": "1244ef157da442cead03d9d579da7b0b",
      "End": "7254c6e32f4449ea987488dcc4428aa9",
      "Id": "42e1ed3969404f6c83ce216d32abb958"
    },
    {
      "Start": "2204a27753bb44af8c137e261a52033e",
      "End": "94e837b88f8744f0ae8f46430d646f65",
      "Id": "5ec74e95b6e549e69356c4a37835ad3e"
    },
    {
      "Start": "cf48090edb37423db8c6a05c86323d5a",
      "End": "db59187374f0448a91706f1fb44769e0",
      "Id": "67fb1895f677436e86ce7bfc4ce0a42c"
    },
    {
      "Start": "2c24402e93ce4a5098d3fa376cff9a8a",
      "End": "2a52eb4f52304a43b2b424207d31da2c",
      "Id": "abf77c9aa0bb4bf9b84e00e4babe13b9"
    },
    {
      "Start": "2c24402e93ce4a5098d3fa376cff9a8a",
      "End": "af9b48321a9e4746827ca3d91a265ee1",
      "Id": "618c8fba55fb4984aa5bbe6a4e50e903"
    },
    {
      "Start": "d9abc261008941a2b0aea4896956c375",
      "End": "6c0e394bcae6484a8d0bcd723d258ec1",
      "Id": "bd3db37b9e2542448059ff10de1ca7fd"
    },
    {
      "Start": "7265a37ef0314452ae52a05e7e7ffb18",
      "End": "2d80d7245d58497c98f452be5d767694",
      "Id": "19d4497af3d148e0b9a60fadcb5a46fe"
    },
    {
      "Start": "86a8c13ca700413f9c03e5ca44512ab2",
      "End": "63cde380d4ba45b0bbcb2c1193694454",
      "Id": "e8c640563e1c4c20aba402c4c6a78c96"
    },
    {
      "Start": "e2b69db282e84dbb8a40d46fd5b10c03",
      "End": "5b4bb8c43a6c411792a43a3f280b688e",
      "Id": "5ae1776cb32f4a6d862e76d378ff017a"
    },
    {
      "Start": "15fc41a944484ca49ff8963056787625",
      "End": "13b2105d24cb4d2d8f9af25805f6fa92",
      "Id": "209a8fbc5caf4c84bdd5583c6a53d100"
    },
    {
      "Start": "991d49715e5b42238ee7272a80df018a",
      "End": "bed5d5e4988f4a168f54a3826595d664",
      "Id": "3148bb7eb3c444dd8b12ea2880a2f14d"
    },
    {
      "Start": "a070c7bf0d1e4ebab1439637a186b61c",
      "End": "7cf2b00745ff44dc83d813b8075da346",
      "Id": "57f2e8e6c95345ef840c6a10c49c69c6"
    },
    {
      "Start": "ee4fef2329224006b837abc2126badac",
      "End": "2086a900f39c4344a2e269230462994d",
      "Id": "98a551f9e5d64a6b94650cf7329d201f"
    },
    {
      "Start": "345346078249456986672d835f890b95",
      "End": "0b591af7568744df8b862c3c39e23433",
      "Id": "bd9999e350a9459c81516e17047b680c"
    },
    {
      "Start": "f6755db1f1fc4fc4b791b4bf8d70f15c",
      "End": "4f1f59123119428797217fb99427aed3",
      "Id": "8a7198430fc841b0851b0def2dd60e93"
    },
    {
      "Start": "d816537eea124baabfb1be5f8c01b671",
      "End": "7482aa2d985743e29fda295b7f9c368e",
      "Id": "c0c44f53b05944aaa780f838b470c0c5"
    },
    {
      "Start": "cf94d95b2c6141f6a48217355080d4a9",
      "End": "31c4304a63c34563bf2f52080adc8bdf",
      "Id": "bf32893630fd414ca460b7a22eb47fc7"
    },
    {
      "Start": "ef142c105df14af6907b547c5e61e862",
      "End": "e2505e90137f4116bb9a391491c53229",
      "Id": "71aa4b0be31a43159b40288f55566093"
    },
    {
      "Start": "1d3926b45e184d3b9c0fd61fc3a67ea3",
      "End": "92c93cb0de02404292c02b48f29b4d85",
      "Id": "04199b4abe104bdba5fd5e81d217f182"
    },
    {
      "Start": "c2bdb3fc2534459fb6400525f108fdbd",
      "End": "d3ba70f1caa64c12a32ca8cf754025ca",
      "Id": "3fc0e04da8a942e29135d2c6f7495cb2"
    },
    {
      "Start": "146723f60c124a058399b52c2287ee54",
      "End": "f77ad4c5867040519e467bc3315fa3d9",
      "Id": "1b665c19de9947dbb68fea53efa28213"
    },
    {
      "Start": "ecbc2c5fb30746f8ad8c666815867806",
      "End": "67f8d146358b481e902fdb280a53a926",
      "Id": "941ad0dc68a241a49b162cdfa7849088"
    },
    {
      "Start": "c86de8434d184f2f817a5e8344a2bf5e",
      "End": "8d1e4f0cbd7548349361ad090665b4cd",
      "Id": "d2412646ce674e2b9a07a0396b617412"
    },
    {
      "Start": "0150f1d65d2241f0b252fed809474e82",
      "End": "788c260ec0ed45579a07c1cf613bc1fa",
      "Id": "624a39a9467b4f72848ffaaa0c2cfd1d"
    },
    {
      "Start": "9f9958759be54e9fa01983fa5830b652",
      "End": "de9c6b778aaa4198a2f594419f1a9fa3",
      "Id": "ad19bd74fc154019b4bf079e9a0ecfe4"
    },
    {
      "Start": "9f9958759be54e9fa01983fa5830b652",
      "End": "b0163c0c3c8a42849aa1846d38e07fda",
      "Id": "cbadfa12e039450ea3761267edc63af8"
    },
    {
      "Start": "49f6dfd4d97842799be6fa29885e48f0",
      "End": "e29b635653914c59b318e42e1470b705",
      "Id": "b4a92f9c18204570aec55bd774e89f97"
    },
    {
      "Start": "15e37f142da846c485d0d04e37ae2c0e",
      "End": "ca1cea89b3874bc69cdaf6f03fc64db8",
      "Id": "ffb78797e08a424ea583e46faa3a4468"
    },
    {
      "Start": "125d19e96400432c873f93d176222548",
      "End": "12fa69ffa0d4481cb9b2ed6419dc9e71",
      "Id": "de228b5458e14401a1d182520c7d6b53"
    },
    {
      "Start": "1b1886ed939a42ff8576b922377e86f4",
      "End": "fe71f7187ed0494db807a35dfea55e37",
      "Id": "74fc7bdacaac414ea9a34da795526376"
    }
  ],
  "Dependencies": [],
  "Bindings": [
    {
      "NodeId": "91a39b11-ec7c-445e-8c6b-8fb7f3256c83",
      "Binding": {
        "BeamByCurve_InClassDecl-1_InFunctionScope-1_Instance0_91a39b11-ec7c-445e-8c6b-8fb7f3256c83": ""
      }
    },
    {
      "NodeId": "e4a905af-df2c-4e17-a0e5-63a38fc7eb42",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_e4a905af-df2c-4e17-a0e5-63a38fc7eb42": "PFNPQVAtRU5WOkVudmVsb3BlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zOnhzZD0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOlNPQVAtRU5DPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyIgeG1sbnM6U09BUC1FTlY9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvIiB4bWxuczpjbHI9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc29hcC9lbmNvZGluZy9jbHIvMS4wIiBTT0FQLUVOVjplbmNvZGluZ1N0eWxlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyI+DQo8U09BUC1FTlY6Qm9keT4NCjxhMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXIgaWQ9InJlZi0xIiB4bWxuczphMT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9jbHIvbnNhc3NlbS9Qcm90b0NvcmUvUHJvdG9Db3JlJTJDJTIwVmVyc2lvbiUzRDIuMC4zLjg4MTAlMkMlMjBDdWx0dXJlJTNEbmV1dHJhbCUyQyUyMFB1YmxpY0tleVRva2VuJTNEbnVsbCI+DQo8TnVtYmVyT2ZFbGVtZW50cz4xPC9OdW1iZXJPZkVsZW1lbnRzPg0KPEJhc2UtMF9IYXNEYXRhPmZhbHNlPC9CYXNlLTBfSGFzRGF0YT4NCjxCYXNlLTBfSGFzTmVzdGVkRGF0YT50cnVlPC9CYXNlLTBfSGFzTmVzdGVkRGF0YT4NCjxCYXNlLTBfTmVzdGVkRGF0YUNvdW50PjI8L0Jhc2UtMF9OZXN0ZWREYXRhQ291bnQ+DQo8QmFzZS0wLTBfSGFzRGF0YT50cnVlPC9CYXNlLTAtMF9IYXNEYXRhPg0KPEJhc2UtMC0wX0RhdGEgaWQ9InJlZi0zIj5QRk5QUVZBdFJVNVdPa1Z1ZG1Wc2IzQmxJSGh0Ykc1ek9uaHphVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRXRhVzV6ZEdGdVkyVWlJSGh0Ykc1ek9uaHpaRDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRWlJSGh0Ykc1ek9sTlBRVkF0UlU1RFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJZ2VHMXNibk02VTA5QlVDMUZUbFk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbmh0YkhOdllYQXViM0puTDNOdllYQXZaVzUyWld4dmNHVXZJaUI0Yld4dWN6cGpiSEk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdmMyOWhjQzlsYm1OdlpHbHVaeTlqYkhJdk1TNHdJaUJUVDBGUUxVVk9WanBsYm1OdlpHbHVaMU4wZVd4bFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJK0RRbzhVMDlCVUMxRlRsWTZRbTlrZVQ0TkNqeGhNVHBFYVhKbFkzUlRhR0Z3WlZOMFlYUmxJR2xrUFNKeVpXWXRNU0lnZUcxc2JuTTZZVEU5SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdlkyeHlMMjV6WVhOelpXMHZVbVYyYVhRdVJXeGxiV1Z1ZEhNdlVtVjJhWFJPYjJSbGN5VXlReVV5TUZabGNuTnBiMjRsTTBReUxqQXVNeTQ0T0RFeEpUSkRKVEl3UTNWc2RIVnlaU1V6Ukc1bGRYUnlZV3dsTWtNbE1qQlFkV0pzYVdOTFpYbFViMnRsYmlVelJHNTFiR3dpUGcwS1BITjBjbWx1WjBsRUlHbGtQU0p5WldZdE15SStaREU1Wm1FMFpUUXRZMk01WlMwME1UWmxMVGhsT0RRdFkyUmxaVGM1WVdZM05UaGpMVEF3TUdGaU9XTXdQQzl6ZEhKcGJtZEpSRDROQ2p4cGJuUkpSRDQzTURJNU1USThMMmx1ZEVsRVBnMEtQSE41Ym1OSlpDQnBaRDBpY21WbUxUUWlQak00TkdWaFpEazRMV1F3WlRrdE5HVmlaQzFpT1ROa0xUVmlOVFF4T1RkbVpUWTROand2YzNsdVkwbGtQZzBLUEcxaGRHVnlhV0ZzU1dRK016RTBNelk1UEM5dFlYUmxjbWxoYkVsa1BnMEtQQzloTVRwRWFYSmxZM1JUYUdGd1pWTjBZWFJsUGcwS1BDOVRUMEZRTFVWT1ZqcENiMlI1UGcwS1BDOVRUMEZRTFVWT1ZqcEZiblpsYkc5d1pUNE5DZz09PC9CYXNlLTAtMF9EYXRhPg0KPEJhc2UtMC0wX0hhc05lc3RlZERhdGE+ZmFsc2U8L0Jhc2UtMC0wX0hhc05lc3RlZERhdGE+DQo8QmFzZS0wLTFfSGFzRGF0YT50cnVlPC9CYXNlLTAtMV9IYXNEYXRhPg0KPEJhc2UtMC0xX0RhdGEgaWQ9InJlZi00Ij5QRk5QUVZBdFJVNVdPa1Z1ZG1Wc2IzQmxJSGh0Ykc1ek9uaHphVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRXRhVzV6ZEdGdVkyVWlJSGh0Ykc1ek9uaHpaRDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRWlJSGh0Ykc1ek9sTlBRVkF0UlU1RFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJZ2VHMXNibk02VTA5QlVDMUZUbFk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbmh0YkhOdllYQXViM0puTDNOdllYQXZaVzUyWld4dmNHVXZJaUI0Yld4dWN6cGpiSEk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdmMyOWhjQzlsYm1OdlpHbHVaeTlqYkhJdk1TNHdJaUJUVDBGUUxVVk9WanBsYm1OdlpHbHVaMU4wZVd4bFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJK0RRbzhVMDlCVUMxRlRsWTZRbTlrZVQ0TkNqeGhNVHBFYVhKbFkzUlRhR0Z3WlZOMFlYUmxJR2xrUFNKeVpXWXRNU0lnZUcxc2JuTTZZVEU5SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdlkyeHlMMjV6WVhOelpXMHZVbVYyYVhRdVJXeGxiV1Z1ZEhNdlVtVjJhWFJPYjJSbGN5VXlReVV5TUZabGNuTnBiMjRsTTBReUxqQXVNeTQ0T0RFeEpUSkRKVEl3UTNWc2RIVnlaU1V6Ukc1bGRYUnlZV3dsTWtNbE1qQlFkV0pzYVdOTFpYbFViMnRsYmlVelJHNTFiR3dpUGcwS1BITjBjbWx1WjBsRUlHbGtQU0p5WldZdE15SStaREU1Wm1FMFpUUXRZMk01WlMwME1UWmxMVGhsT0RRdFkyUmxaVGM1WVdZM05UaGpMVEF3TUdGaU9XTXhQQzl6ZEhKcGJtZEpSRDROQ2p4cGJuUkpSRDQzTURJNU1UTThMMmx1ZEVsRVBnMEtQSE41Ym1OSlpDQnBaRDBpY21WbUxUUWlQamd6TmpjeU4yVTJMVEUwTm1FdE5HTmtNQzA0WVdSaExXRmxPREJpWXpoak1UZzNaand2YzNsdVkwbGtQZzBLUEcxaGRHVnlhV0ZzU1dRK016RTBNelk1UEM5dFlYUmxjbWxoYkVsa1BnMEtQQzloTVRwRWFYSmxZM1JUYUdGd1pWTjBZWFJsUGcwS1BDOVRUMEZRTFVWT1ZqcENiMlI1UGcwS1BDOVRUMEZRTFVWT1ZqcEZiblpsYkc5d1pUNE5DZz09PC9CYXNlLTAtMV9EYXRhPg0KPEJhc2UtMC0xX0hhc05lc3RlZERhdGE+ZmFsc2U8L0Jhc2UtMC0xX0hhc05lc3RlZERhdGE+DQo8L2ExOkNhbGxTaXRlX3gwMDJCX1RyYWNlU2VyaWFsaXNlckhlbHBlcj4NCjwvU09BUC1FTlY6Qm9keT4NCjwvU09BUC1FTlY6RW52ZWxvcGU+DQo="
      }
    },
    {
      "NodeId": "eb0160a4-c419-42a5-ba01-e48e458a484c",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_eb0160a4-c419-42a5-ba01-e48e458a484c": "PFNPQVAtRU5WOkVudmVsb3BlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zOnhzZD0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOlNPQVAtRU5DPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyIgeG1sbnM6U09BUC1FTlY9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvIiB4bWxuczpjbHI9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc29hcC9lbmNvZGluZy9jbHIvMS4wIiBTT0FQLUVOVjplbmNvZGluZ1N0eWxlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyI+DQo8U09BUC1FTlY6Qm9keT4NCjxhMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXIgaWQ9InJlZi0xIiB4bWxuczphMT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9jbHIvbnNhc3NlbS9Qcm90b0NvcmUvUHJvdG9Db3JlJTJDJTIwVmVyc2lvbiUzRDIuMC4zLjg4MTAlMkMlMjBDdWx0dXJlJTNEbmV1dHJhbCUyQyUyMFB1YmxpY0tleVRva2VuJTNEbnVsbCI+DQo8TnVtYmVyT2ZFbGVtZW50cz4xPC9OdW1iZXJPZkVsZW1lbnRzPg0KPEJhc2UtMF9IYXNEYXRhPnRydWU8L0Jhc2UtMF9IYXNEYXRhPg0KPEJhc2UtMF9EYXRhIGlkPSJyZWYtMyI+UEZOUFFWQXRSVTVXT2tWdWRtVnNiM0JsSUhodGJHNXpPbmh6YVQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNUzlZVFV4VFkyaGxiV0V0YVc1emRHRnVZMlVpSUhodGJHNXpPbmh6WkQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNUzlZVFV4VFkyaGxiV0VpSUhodGJHNXpPbE5QUVZBdFJVNURQU0pvZEhSd09pOHZjMk5vWlcxaGN5NTRiV3h6YjJGd0xtOXlaeTl6YjJGd0wyVnVZMjlrYVc1bkx5SWdlRzFzYm5NNlUwOUJVQzFGVGxZOUltaDBkSEE2THk5elkyaGxiV0Z6TG5odGJITnZZWEF1YjNKbkwzTnZZWEF2Wlc1MlpXeHZjR1V2SWlCNGJXeHVjenBqYkhJOUltaDBkSEE2THk5elkyaGxiV0Z6TG0xcFkzSnZjMjltZEM1amIyMHZjMjloY0M5bGJtTnZaR2x1Wnk5amJISXZNUzR3SWlCVFQwRlFMVVZPVmpwbGJtTnZaR2x1WjFOMGVXeGxQU0pvZEhSd09pOHZjMk5vWlcxaGN5NTRiV3h6YjJGd0xtOXlaeTl6YjJGd0wyVnVZMjlrYVc1bkx5SStEUW84VTA5QlVDMUZUbFk2UW05a2VUNE5DanhoTVRwRWFYSmxZM1JUYUdGd1pWTjBZWFJsSUdsa1BTSnlaV1l0TVNJZ2VHMXNibk02WVRFOUltaDBkSEE2THk5elkyaGxiV0Z6TG0xcFkzSnZjMjltZEM1amIyMHZZMnh5TDI1ellYTnpaVzB2VW1WMmFYUXVSV3hsYldWdWRITXZVbVYyYVhST2IyUmxjeVV5UXlVeU1GWmxjbk5wYjI0bE0wUXlMakF1TXk0NE9ERXhKVEpESlRJd1EzVnNkSFZ5WlNVelJHNWxkWFJ5WVd3bE1rTWxNakJRZFdKc2FXTkxaWGxVYjJ0bGJpVXpSRzUxYkd3aVBnMEtQSE4wY21sdVowbEVJR2xrUFNKeVpXWXRNeUkrWkRFNVptRTBaVFF0WTJNNVpTMDBNVFpsTFRobE9EUXRZMlJsWlRjNVlXWTNOVGhqTFRBd01HRmlPV0ptUEM5emRISnBibWRKUkQ0TkNqeHBiblJKUkQ0M01ESTVNVEU4TDJsdWRFbEVQZzBLUEhONWJtTkpaQ0JwWkQwaWNtVm1MVFFpUGpFeE5UZG1ZVFZoTFRBMllqQXRORGs0WmkxaFlXSmpMV1UwWkdRMllXVmtNVFkxWWp3dmMzbHVZMGxrUGcwS1BHMWhkR1Z5YVdGc1NXUStNekUwTXpZNVBDOXRZWFJsY21saGJFbGtQZzBLUEM5aE1UcEVhWEpsWTNSVGFHRndaVk4wWVhSbFBnMEtQQzlUVDBGUUxVVk9WanBDYjJSNVBnMEtQQzlUVDBGUUxVVk9WanBGYm5abGJHOXdaVDROQ2c9PTwvQmFzZS0wX0RhdGE+DQo8QmFzZS0wX0hhc05lc3RlZERhdGE+ZmFsc2U8L0Jhc2UtMF9IYXNOZXN0ZWREYXRhPg0KPC9hMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXI+DQo8L1NPQVAtRU5WOkJvZHk+DQo8L1NPQVAtRU5WOkVudmVsb3BlPg0K"
      }
    },
    {
      "NodeId": "a4d4b492-9c74-49bc-a7cc-76110a93bc9e",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_a4d4b492-9c74-49bc-a7cc-76110a93bc9e": "PFNPQVAtRU5WOkVudmVsb3BlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zOnhzZD0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOlNPQVAtRU5DPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyIgeG1sbnM6U09BUC1FTlY9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvIiB4bWxuczpjbHI9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc29hcC9lbmNvZGluZy9jbHIvMS4wIiBTT0FQLUVOVjplbmNvZGluZ1N0eWxlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyI+DQo8U09BUC1FTlY6Qm9keT4NCjxhMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXIgaWQ9InJlZi0xIiB4bWxuczphMT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9jbHIvbnNhc3NlbS9Qcm90b0NvcmUvUHJvdG9Db3JlJTJDJTIwVmVyc2lvbiUzRDIuMC4zLjg4MTAlMkMlMjBDdWx0dXJlJTNEbmV1dHJhbCUyQyUyMFB1YmxpY0tleVRva2VuJTNEbnVsbCI+DQo8TnVtYmVyT2ZFbGVtZW50cz4xPC9OdW1iZXJPZkVsZW1lbnRzPg0KPEJhc2UtMF9IYXNEYXRhPnRydWU8L0Jhc2UtMF9IYXNEYXRhPg0KPEJhc2UtMF9EYXRhIGlkPSJyZWYtMyI+UEZOUFFWQXRSVTVXT2tWdWRtVnNiM0JsSUhodGJHNXpPbmh6YVQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNUzlZVFV4VFkyaGxiV0V0YVc1emRHRnVZMlVpSUhodGJHNXpPbmh6WkQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNUzlZVFV4VFkyaGxiV0VpSUhodGJHNXpPbE5QUVZBdFJVNURQU0pvZEhSd09pOHZjMk5vWlcxaGN5NTRiV3h6YjJGd0xtOXlaeTl6YjJGd0wyVnVZMjlrYVc1bkx5SWdlRzFzYm5NNlUwOUJVQzFGVGxZOUltaDBkSEE2THk5elkyaGxiV0Z6TG5odGJITnZZWEF1YjNKbkwzTnZZWEF2Wlc1MlpXeHZjR1V2SWlCNGJXeHVjenBqYkhJOUltaDBkSEE2THk5elkyaGxiV0Z6TG0xcFkzSnZjMjltZEM1amIyMHZjMjloY0M5bGJtTnZaR2x1Wnk5amJISXZNUzR3SWlCVFQwRlFMVVZPVmpwbGJtTnZaR2x1WjFOMGVXeGxQU0pvZEhSd09pOHZjMk5vWlcxaGN5NTRiV3h6YjJGd0xtOXlaeTl6YjJGd0wyVnVZMjlrYVc1bkx5SStEUW84VTA5QlVDMUZUbFk2UW05a2VUNE5DanhoTVRwRWFYSmxZM1JUYUdGd1pWTjBZWFJsSUdsa1BTSnlaV1l0TVNJZ2VHMXNibk02WVRFOUltaDBkSEE2THk5elkyaGxiV0Z6TG0xcFkzSnZjMjltZEM1amIyMHZZMnh5TDI1ellYTnpaVzB2VW1WMmFYUXVSV3hsYldWdWRITXZVbVYyYVhST2IyUmxjeVV5UXlVeU1GWmxjbk5wYjI0bE0wUXlMakF1TXk0NE9ERXhKVEpESlRJd1EzVnNkSFZ5WlNVelJHNWxkWFJ5WVd3bE1rTWxNakJRZFdKc2FXTkxaWGxVYjJ0bGJpVXpSRzUxYkd3aVBnMEtQSE4wY21sdVowbEVJR2xrUFNKeVpXWXRNeUkrWkRFNVptRTBaVFF0WTJNNVpTMDBNVFpsTFRobE9EUXRZMlJsWlRjNVlXWTNOVGhqTFRBd01HRmlPV0ZpUEM5emRISnBibWRKUkQ0TkNqeHBiblJKUkQ0M01ESTRPVEU4TDJsdWRFbEVQZzBLUEhONWJtTkpaQ0JwWkQwaWNtVm1MVFFpUG1VMU0yTmtNR1ZsTFdJMU1tRXROR0ZsWmkxaE5EZzNMV05oTVRVME5tTTJZbVEwT1R3dmMzbHVZMGxrUGcwS1BHMWhkR1Z5YVdGc1NXUStNekUwTXpZNVBDOXRZWFJsY21saGJFbGtQZzBLUEM5aE1UcEVhWEpsWTNSVGFHRndaVk4wWVhSbFBnMEtQQzlUVDBGUUxVVk9WanBDYjJSNVBnMEtQQzlUVDBGUUxVVk9WanBGYm5abGJHOXdaVDROQ2c9PTwvQmFzZS0wX0RhdGE+DQo8QmFzZS0wX0hhc05lc3RlZERhdGE+ZmFsc2U8L0Jhc2UtMF9IYXNOZXN0ZWREYXRhPg0KPC9hMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXI+DQo8L1NPQVAtRU5WOkJvZHk+DQo8L1NPQVAtRU5WOkVudmVsb3BlPg0K"
      }
    },
    {
      "NodeId": "053f4e85-2208-41c1-8199-ba885545b354",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_053f4e85-2208-41c1-8199-ba885545b354": "PFNPQVAtRU5WOkVudmVsb3BlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zOnhzZD0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOlNPQVAtRU5DPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyIgeG1sbnM6U09BUC1FTlY9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvIiB4bWxuczpjbHI9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc29hcC9lbmNvZGluZy9jbHIvMS4wIiBTT0FQLUVOVjplbmNvZGluZ1N0eWxlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyI+DQo8U09BUC1FTlY6Qm9keT4NCjxhMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXIgaWQ9InJlZi0xIiB4bWxuczphMT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9jbHIvbnNhc3NlbS9Qcm90b0NvcmUvUHJvdG9Db3JlJTJDJTIwVmVyc2lvbiUzRDIuMC4zLjg4MTAlMkMlMjBDdWx0dXJlJTNEbmV1dHJhbCUyQyUyMFB1YmxpY0tleVRva2VuJTNEbnVsbCI+DQo8TnVtYmVyT2ZFbGVtZW50cz4xPC9OdW1iZXJPZkVsZW1lbnRzPg0KPEJhc2UtMF9IYXNEYXRhPnRydWU8L0Jhc2UtMF9IYXNEYXRhPg0KPEJhc2UtMF9EYXRhIGlkPSJyZWYtMyI+UEZOUFFWQXRSVTVXT2tWdWRtVnNiM0JsSUhodGJHNXpPbmh6YVQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNUzlZVFV4VFkyaGxiV0V0YVc1emRHRnVZMlVpSUhodGJHNXpPbmh6WkQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNUzlZVFV4VFkyaGxiV0VpSUhodGJHNXpPbE5QUVZBdFJVNURQU0pvZEhSd09pOHZjMk5vWlcxaGN5NTRiV3h6YjJGd0xtOXlaeTl6YjJGd0wyVnVZMjlrYVc1bkx5SWdlRzFzYm5NNlUwOUJVQzFGVGxZOUltaDBkSEE2THk5elkyaGxiV0Z6TG5odGJITnZZWEF1YjNKbkwzTnZZWEF2Wlc1MlpXeHZjR1V2SWlCNGJXeHVjenBqYkhJOUltaDBkSEE2THk5elkyaGxiV0Z6TG0xcFkzSnZjMjltZEM1amIyMHZjMjloY0M5bGJtTnZaR2x1Wnk5amJISXZNUzR3SWlCVFQwRlFMVVZPVmpwbGJtTnZaR2x1WjFOMGVXeGxQU0pvZEhSd09pOHZjMk5vWlcxaGN5NTRiV3h6YjJGd0xtOXlaeTl6YjJGd0wyVnVZMjlrYVc1bkx5SStEUW84VTA5QlVDMUZUbFk2UW05a2VUNE5DanhoTVRwRWFYSmxZM1JUYUdGd1pWTjBZWFJsSUdsa1BTSnlaV1l0TVNJZ2VHMXNibk02WVRFOUltaDBkSEE2THk5elkyaGxiV0Z6TG0xcFkzSnZjMjltZEM1amIyMHZZMnh5TDI1ellYTnpaVzB2VW1WMmFYUXVSV3hsYldWdWRITXZVbVYyYVhST2IyUmxjeVV5UXlVeU1GWmxjbk5wYjI0bE0wUXlMakF1TXk0NE9ERXhKVEpESlRJd1EzVnNkSFZ5WlNVelJHNWxkWFJ5WVd3bE1rTWxNakJRZFdKc2FXTkxaWGxVYjJ0bGJpVXpSRzUxYkd3aVBnMEtQSE4wY21sdVowbEVJR2xrUFNKeVpXWXRNeUkrWkRFNVptRTBaVFF0WTJNNVpTMDBNVFpsTFRobE9EUXRZMlJsWlRjNVlXWTNOVGhqTFRBd01HRmlPV0psUEM5emRISnBibWRKUkQ0TkNqeHBiblJKUkQ0M01ESTVNVEE4TDJsdWRFbEVQZzBLUEhONWJtTkpaQ0JwWkQwaWNtVm1MVFFpUG1Ka09ESXhNbU5pTFRrellqQXROREpsTXkwNFlUZ3hMV0l5TjJJeU5HVXdORFF6TkR3dmMzbHVZMGxrUGcwS1BHMWhkR1Z5YVdGc1NXUStNekUwTXpZNVBDOXRZWFJsY21saGJFbGtQZzBLUEM5aE1UcEVhWEpsWTNSVGFHRndaVk4wWVhSbFBnMEtQQzlUVDBGUUxVVk9WanBDYjJSNVBnMEtQQzlUVDBGUUxVVk9WanBGYm5abGJHOXdaVDROQ2c9PTwvQmFzZS0wX0RhdGE+DQo8QmFzZS0wX0hhc05lc3RlZERhdGE+ZmFsc2U8L0Jhc2UtMF9IYXNOZXN0ZWREYXRhPg0KPC9hMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXI+DQo8L1NPQVAtRU5WOkJvZHk+DQo8L1NPQVAtRU5WOkVudmVsb3BlPg0K"
      }
    },
    {
      "NodeId": "284179ed-c276-4ed6-a03d-1ea394565595",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_284179ed-c276-4ed6-a03d-1ea394565595": "PFNPQVAtRU5WOkVudmVsb3BlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zOnhzZD0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOlNPQVAtRU5DPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyIgeG1sbnM6U09BUC1FTlY9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvIiB4bWxuczpjbHI9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc29hcC9lbmNvZGluZy9jbHIvMS4wIiBTT0FQLUVOVjplbmNvZGluZ1N0eWxlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyI+DQo8U09BUC1FTlY6Qm9keT4NCjxhMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXIgaWQ9InJlZi0xIiB4bWxuczphMT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9jbHIvbnNhc3NlbS9Qcm90b0NvcmUvUHJvdG9Db3JlJTJDJTIwVmVyc2lvbiUzRDIuMC4zLjg4MTAlMkMlMjBDdWx0dXJlJTNEbmV1dHJhbCUyQyUyMFB1YmxpY0tleVRva2VuJTNEbnVsbCI+DQo8TnVtYmVyT2ZFbGVtZW50cz4xPC9OdW1iZXJPZkVsZW1lbnRzPg0KPEJhc2UtMF9IYXNEYXRhPnRydWU8L0Jhc2UtMF9IYXNEYXRhPg0KPEJhc2UtMF9EYXRhIGlkPSJyZWYtMyI+UEZOUFFWQXRSVTVXT2tWdWRtVnNiM0JsSUhodGJHNXpPbmh6YVQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNUzlZVFV4VFkyaGxiV0V0YVc1emRHRnVZMlVpSUhodGJHNXpPbmh6WkQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNUzlZVFV4VFkyaGxiV0VpSUhodGJHNXpPbE5QUVZBdFJVNURQU0pvZEhSd09pOHZjMk5vWlcxaGN5NTRiV3h6YjJGd0xtOXlaeTl6YjJGd0wyVnVZMjlrYVc1bkx5SWdlRzFzYm5NNlUwOUJVQzFGVGxZOUltaDBkSEE2THk5elkyaGxiV0Z6TG5odGJITnZZWEF1YjNKbkwzTnZZWEF2Wlc1MlpXeHZjR1V2SWlCNGJXeHVjenBqYkhJOUltaDBkSEE2THk5elkyaGxiV0Z6TG0xcFkzSnZjMjltZEM1amIyMHZjMjloY0M5bGJtTnZaR2x1Wnk5amJISXZNUzR3SWlCVFQwRlFMVVZPVmpwbGJtTnZaR2x1WjFOMGVXeGxQU0pvZEhSd09pOHZjMk5vWlcxaGN5NTRiV3h6YjJGd0xtOXlaeTl6YjJGd0wyVnVZMjlrYVc1bkx5SStEUW84VTA5QlVDMUZUbFk2UW05a2VUNE5DanhoTVRwRWFYSmxZM1JUYUdGd1pWTjBZWFJsSUdsa1BTSnlaV1l0TVNJZ2VHMXNibk02WVRFOUltaDBkSEE2THk5elkyaGxiV0Z6TG0xcFkzSnZjMjltZEM1amIyMHZZMnh5TDI1ellYTnpaVzB2VW1WMmFYUXVSV3hsYldWdWRITXZVbVYyYVhST2IyUmxjeVV5UXlVeU1GWmxjbk5wYjI0bE0wUXlMakF1TXk0NE9ERXhKVEpESlRJd1EzVnNkSFZ5WlNVelJHNWxkWFJ5WVd3bE1rTWxNakJRZFdKc2FXTkxaWGxVYjJ0bGJpVXpSRzUxYkd3aVBnMEtQSE4wY21sdVowbEVJR2xrUFNKeVpXWXRNeUkrWkRFNVptRTBaVFF0WTJNNVpTMDBNVFpsTFRobE9EUXRZMlJsWlRjNVlXWTNOVGhqTFRBd01HRmlPV0ZoUEM5emRISnBibWRKUkQ0TkNqeHBiblJKUkQ0M01ESTRPVEE4TDJsdWRFbEVQZzBLUEhONWJtTkpaQ0JwWkQwaWNtVm1MVFFpUGpFelpqRTFPR1kzTFdGbU1qZ3ROREZsTlMxaU5USTFMVEJrTkdJNVpqUXhNV0ZpTkR3dmMzbHVZMGxrUGcwS1BHMWhkR1Z5YVdGc1NXUStNekUwTXpZNVBDOXRZWFJsY21saGJFbGtQZzBLUEM5aE1UcEVhWEpsWTNSVGFHRndaVk4wWVhSbFBnMEtQQzlUVDBGUUxVVk9WanBDYjJSNVBnMEtQQzlUVDBGUUxVVk9WanBGYm5abGJHOXdaVDROQ2c9PTwvQmFzZS0wX0RhdGE+DQo8QmFzZS0wX0hhc05lc3RlZERhdGE+ZmFsc2U8L0Jhc2UtMF9IYXNOZXN0ZWREYXRhPg0KPC9hMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXI+DQo8L1NPQVAtRU5WOkJvZHk+DQo8L1NPQVAtRU5WOkVudmVsb3BlPg0K"
      }
    },
    {
      "NodeId": "74c34e7d-f1ed-416d-b5ba-cb79795b6fce",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_74c34e7d-f1ed-416d-b5ba-cb79795b6fce": "PFNPQVAtRU5WOkVudmVsb3BlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zOnhzZD0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOlNPQVAtRU5DPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyIgeG1sbnM6U09BUC1FTlY9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvIiB4bWxuczpjbHI9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc29hcC9lbmNvZGluZy9jbHIvMS4wIiBTT0FQLUVOVjplbmNvZGluZ1N0eWxlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyI+DQo8U09BUC1FTlY6Qm9keT4NCjxhMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXIgaWQ9InJlZi0xIiB4bWxuczphMT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9jbHIvbnNhc3NlbS9Qcm90b0NvcmUvUHJvdG9Db3JlJTJDJTIwVmVyc2lvbiUzRDIuMC4zLjg4MTAlMkMlMjBDdWx0dXJlJTNEbmV1dHJhbCUyQyUyMFB1YmxpY0tleVRva2VuJTNEbnVsbCI+DQo8TnVtYmVyT2ZFbGVtZW50cz4xPC9OdW1iZXJPZkVsZW1lbnRzPg0KPEJhc2UtMF9IYXNEYXRhPmZhbHNlPC9CYXNlLTBfSGFzRGF0YT4NCjxCYXNlLTBfSGFzTmVzdGVkRGF0YT50cnVlPC9CYXNlLTBfSGFzTmVzdGVkRGF0YT4NCjxCYXNlLTBfTmVzdGVkRGF0YUNvdW50PjI8L0Jhc2UtMF9OZXN0ZWREYXRhQ291bnQ+DQo8QmFzZS0wLTBfSGFzRGF0YT50cnVlPC9CYXNlLTAtMF9IYXNEYXRhPg0KPEJhc2UtMC0wX0RhdGEgaWQ9InJlZi0zIj5QRk5QUVZBdFJVNVdPa1Z1ZG1Wc2IzQmxJSGh0Ykc1ek9uaHphVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRXRhVzV6ZEdGdVkyVWlJSGh0Ykc1ek9uaHpaRDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRWlJSGh0Ykc1ek9sTlBRVkF0UlU1RFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJZ2VHMXNibk02VTA5QlVDMUZUbFk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbmh0YkhOdllYQXViM0puTDNOdllYQXZaVzUyWld4dmNHVXZJaUI0Yld4dWN6cGpiSEk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdmMyOWhjQzlsYm1OdlpHbHVaeTlqYkhJdk1TNHdJaUJUVDBGUUxVVk9WanBsYm1OdlpHbHVaMU4wZVd4bFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJK0RRbzhVMDlCVUMxRlRsWTZRbTlrZVQ0TkNqeGhNVHBFYVhKbFkzUlRhR0Z3WlZOMFlYUmxJR2xrUFNKeVpXWXRNU0lnZUcxc2JuTTZZVEU5SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdlkyeHlMMjV6WVhOelpXMHZVbVYyYVhRdVJXeGxiV1Z1ZEhNdlVtVjJhWFJPYjJSbGN5VXlReVV5TUZabGNuTnBiMjRsTTBReUxqQXVNeTQ0T0RFeEpUSkRKVEl3UTNWc2RIVnlaU1V6Ukc1bGRYUnlZV3dsTWtNbE1qQlFkV0pzYVdOTFpYbFViMnRsYmlVelJHNTFiR3dpUGcwS1BITjBjbWx1WjBsRUlHbGtQU0p5WldZdE15SStaREU1Wm1FMFpUUXRZMk01WlMwME1UWmxMVGhsT0RRdFkyUmxaVGM1WVdZM05UaGpMVEF3TUdGaU9XRTRQQzl6ZEhKcGJtZEpSRDROQ2p4cGJuUkpSRDQzTURJNE9EZzhMMmx1ZEVsRVBnMEtQSE41Ym1OSlpDQnBaRDBpY21WbUxUUWlQak5rWmpCbE5USmlMVGc0TWpFdE5HUmxOaTA1TjJJM0xXVTRNMlEwWWpFMU16QTJZend2YzNsdVkwbGtQZzBLUEcxaGRHVnlhV0ZzU1dRK016RTBNelk1UEM5dFlYUmxjbWxoYkVsa1BnMEtQQzloTVRwRWFYSmxZM1JUYUdGd1pWTjBZWFJsUGcwS1BDOVRUMEZRTFVWT1ZqcENiMlI1UGcwS1BDOVRUMEZRTFVWT1ZqcEZiblpsYkc5d1pUNE5DZz09PC9CYXNlLTAtMF9EYXRhPg0KPEJhc2UtMC0wX0hhc05lc3RlZERhdGE+ZmFsc2U8L0Jhc2UtMC0wX0hhc05lc3RlZERhdGE+DQo8QmFzZS0wLTFfSGFzRGF0YT50cnVlPC9CYXNlLTAtMV9IYXNEYXRhPg0KPEJhc2UtMC0xX0RhdGEgaWQ9InJlZi00Ij5QRk5QUVZBdFJVNVdPa1Z1ZG1Wc2IzQmxJSGh0Ykc1ek9uaHphVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRXRhVzV6ZEdGdVkyVWlJSGh0Ykc1ek9uaHpaRDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRWlJSGh0Ykc1ek9sTlBRVkF0UlU1RFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJZ2VHMXNibk02VTA5QlVDMUZUbFk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbmh0YkhOdllYQXViM0puTDNOdllYQXZaVzUyWld4dmNHVXZJaUI0Yld4dWN6cGpiSEk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdmMyOWhjQzlsYm1OdlpHbHVaeTlqYkhJdk1TNHdJaUJUVDBGUUxVVk9WanBsYm1OdlpHbHVaMU4wZVd4bFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJK0RRbzhVMDlCVUMxRlRsWTZRbTlrZVQ0TkNqeGhNVHBFYVhKbFkzUlRhR0Z3WlZOMFlYUmxJR2xrUFNKeVpXWXRNU0lnZUcxc2JuTTZZVEU5SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdlkyeHlMMjV6WVhOelpXMHZVbVYyYVhRdVJXeGxiV1Z1ZEhNdlVtVjJhWFJPYjJSbGN5VXlReVV5TUZabGNuTnBiMjRsTTBReUxqQXVNeTQ0T0RFeEpUSkRKVEl3UTNWc2RIVnlaU1V6Ukc1bGRYUnlZV3dsTWtNbE1qQlFkV0pzYVdOTFpYbFViMnRsYmlVelJHNTFiR3dpUGcwS1BITjBjbWx1WjBsRUlHbGtQU0p5WldZdE15SStaREU1Wm1FMFpUUXRZMk01WlMwME1UWmxMVGhsT0RRdFkyUmxaVGM1WVdZM05UaGpMVEF3TUdGaU9XRTVQQzl6ZEhKcGJtZEpSRDROQ2p4cGJuUkpSRDQzTURJNE9EazhMMmx1ZEVsRVBnMEtQSE41Ym1OSlpDQnBaRDBpY21WbUxUUWlQbVF3WmpReE1ERmtMVGswT1dJdE5EVXlaUzFoTURjeUxUTm1NVGxpTkRVell6Qmlaand2YzNsdVkwbGtQZzBLUEcxaGRHVnlhV0ZzU1dRK016RTBNelk1UEM5dFlYUmxjbWxoYkVsa1BnMEtQQzloTVRwRWFYSmxZM1JUYUdGd1pWTjBZWFJsUGcwS1BDOVRUMEZRTFVWT1ZqcENiMlI1UGcwS1BDOVRUMEZRTFVWT1ZqcEZiblpsYkc5d1pUNE5DZz09PC9CYXNlLTAtMV9EYXRhPg0KPEJhc2UtMC0xX0hhc05lc3RlZERhdGE+ZmFsc2U8L0Jhc2UtMC0xX0hhc05lc3RlZERhdGE+DQo8L2ExOkNhbGxTaXRlX3gwMDJCX1RyYWNlU2VyaWFsaXNlckhlbHBlcj4NCjwvU09BUC1FTlY6Qm9keT4NCjwvU09BUC1FTlY6RW52ZWxvcGU+DQo="
      }
    },
    {
      "NodeId": "97008bfd-4037-44ef-b781-a11a86cd04a4",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_97008bfd-4037-44ef-b781-a11a86cd04a4": "PFNPQVAtRU5WOkVudmVsb3BlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zOnhzZD0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOlNPQVAtRU5DPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyIgeG1sbnM6U09BUC1FTlY9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvIiB4bWxuczpjbHI9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc29hcC9lbmNvZGluZy9jbHIvMS4wIiBTT0FQLUVOVjplbmNvZGluZ1N0eWxlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyI+DQo8U09BUC1FTlY6Qm9keT4NCjxhMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXIgaWQ9InJlZi0xIiB4bWxuczphMT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9jbHIvbnNhc3NlbS9Qcm90b0NvcmUvUHJvdG9Db3JlJTJDJTIwVmVyc2lvbiUzRDIuMC4zLjg4MTAlMkMlMjBDdWx0dXJlJTNEbmV1dHJhbCUyQyUyMFB1YmxpY0tleVRva2VuJTNEbnVsbCI+DQo8TnVtYmVyT2ZFbGVtZW50cz4xPC9OdW1iZXJPZkVsZW1lbnRzPg0KPEJhc2UtMF9IYXNEYXRhPmZhbHNlPC9CYXNlLTBfSGFzRGF0YT4NCjxCYXNlLTBfSGFzTmVzdGVkRGF0YT50cnVlPC9CYXNlLTBfSGFzTmVzdGVkRGF0YT4NCjxCYXNlLTBfTmVzdGVkRGF0YUNvdW50PjI8L0Jhc2UtMF9OZXN0ZWREYXRhQ291bnQ+DQo8QmFzZS0wLTBfSGFzRGF0YT50cnVlPC9CYXNlLTAtMF9IYXNEYXRhPg0KPEJhc2UtMC0wX0RhdGEgaWQ9InJlZi0zIj5QRk5QUVZBdFJVNVdPa1Z1ZG1Wc2IzQmxJSGh0Ykc1ek9uaHphVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRXRhVzV6ZEdGdVkyVWlJSGh0Ykc1ek9uaHpaRDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRWlJSGh0Ykc1ek9sTlBRVkF0UlU1RFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJZ2VHMXNibk02VTA5QlVDMUZUbFk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbmh0YkhOdllYQXViM0puTDNOdllYQXZaVzUyWld4dmNHVXZJaUI0Yld4dWN6cGpiSEk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdmMyOWhjQzlsYm1OdlpHbHVaeTlqYkhJdk1TNHdJaUJUVDBGUUxVVk9WanBsYm1OdlpHbHVaMU4wZVd4bFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJK0RRbzhVMDlCVUMxRlRsWTZRbTlrZVQ0TkNqeGhNVHBFYVhKbFkzUlRhR0Z3WlZOMFlYUmxJR2xrUFNKeVpXWXRNU0lnZUcxc2JuTTZZVEU5SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdlkyeHlMMjV6WVhOelpXMHZVbVYyYVhRdVJXeGxiV1Z1ZEhNdlVtVjJhWFJPYjJSbGN5VXlReVV5TUZabGNuTnBiMjRsTTBReUxqQXVNeTQ0T0RFeEpUSkRKVEl3UTNWc2RIVnlaU1V6Ukc1bGRYUnlZV3dsTWtNbE1qQlFkV0pzYVdOTFpYbFViMnRsYmlVelJHNTFiR3dpUGcwS1BITjBjbWx1WjBsRUlHbGtQU0p5WldZdE15SStaREU1Wm1FMFpUUXRZMk01WlMwME1UWmxMVGhsT0RRdFkyUmxaVGM1WVdZM05UaGpMVEF3TUdGaU9XRTJQQzl6ZEhKcGJtZEpSRDROQ2p4cGJuUkpSRDQzTURJNE9EWThMMmx1ZEVsRVBnMEtQSE41Ym1OSlpDQnBaRDBpY21WbUxUUWlQbVprTW1Zd056RXdMVGhsWVdFdE5HUTJOeTA1WlRWakxUbGlNVFZtTVdKa09XTmlOVHd2YzNsdVkwbGtQZzBLUEcxaGRHVnlhV0ZzU1dRK016RTBNelk1UEM5dFlYUmxjbWxoYkVsa1BnMEtQQzloTVRwRWFYSmxZM1JUYUdGd1pWTjBZWFJsUGcwS1BDOVRUMEZRTFVWT1ZqcENiMlI1UGcwS1BDOVRUMEZRTFVWT1ZqcEZiblpsYkc5d1pUNE5DZz09PC9CYXNlLTAtMF9EYXRhPg0KPEJhc2UtMC0wX0hhc05lc3RlZERhdGE+ZmFsc2U8L0Jhc2UtMC0wX0hhc05lc3RlZERhdGE+DQo8QmFzZS0wLTFfSGFzRGF0YT50cnVlPC9CYXNlLTAtMV9IYXNEYXRhPg0KPEJhc2UtMC0xX0RhdGEgaWQ9InJlZi00Ij5QRk5QUVZBdFJVNVdPa1Z1ZG1Wc2IzQmxJSGh0Ykc1ek9uaHphVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRXRhVzV6ZEdGdVkyVWlJSGh0Ykc1ek9uaHpaRDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOVlUVXhUWTJobGJXRWlJSGh0Ykc1ek9sTlBRVkF0UlU1RFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJZ2VHMXNibk02VTA5QlVDMUZUbFk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbmh0YkhOdllYQXViM0puTDNOdllYQXZaVzUyWld4dmNHVXZJaUI0Yld4dWN6cGpiSEk5SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdmMyOWhjQzlsYm1OdlpHbHVaeTlqYkhJdk1TNHdJaUJUVDBGUUxVVk9WanBsYm1OdlpHbHVaMU4wZVd4bFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OXpiMkZ3TDJWdVkyOWthVzVuTHlJK0RRbzhVMDlCVUMxRlRsWTZRbTlrZVQ0TkNqeGhNVHBFYVhKbFkzUlRhR0Z3WlZOMFlYUmxJR2xrUFNKeVpXWXRNU0lnZUcxc2JuTTZZVEU5SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdlkyeHlMMjV6WVhOelpXMHZVbVYyYVhRdVJXeGxiV1Z1ZEhNdlVtVjJhWFJPYjJSbGN5VXlReVV5TUZabGNuTnBiMjRsTTBReUxqQXVNeTQ0T0RFeEpUSkRKVEl3UTNWc2RIVnlaU1V6Ukc1bGRYUnlZV3dsTWtNbE1qQlFkV0pzYVdOTFpYbFViMnRsYmlVelJHNTFiR3dpUGcwS1BITjBjbWx1WjBsRUlHbGtQU0p5WldZdE15SStaREU1Wm1FMFpUUXRZMk01WlMwME1UWmxMVGhsT0RRdFkyUmxaVGM1WVdZM05UaGpMVEF3TUdGaU9XRTNQQzl6ZEhKcGJtZEpSRDROQ2p4cGJuUkpSRDQzTURJNE9EYzhMMmx1ZEVsRVBnMEtQSE41Ym1OSlpDQnBaRDBpY21WbUxUUWlQalprTUdSak1XSTFMVFUzTjJZdE5HRTBNaTA1TldKbExXSTJZall5WVdVNVpqazBOand2YzNsdVkwbGtQZzBLUEcxaGRHVnlhV0ZzU1dRK016RTBNelk1UEM5dFlYUmxjbWxoYkVsa1BnMEtQQzloTVRwRWFYSmxZM1JUYUdGd1pWTjBZWFJsUGcwS1BDOVRUMEZRTFVWT1ZqcENiMlI1UGcwS1BDOVRUMEZRTFVWT1ZqcEZiblpsYkc5d1pUNE5DZz09PC9CYXNlLTAtMV9EYXRhPg0KPEJhc2UtMC0xX0hhc05lc3RlZERhdGE+ZmFsc2U8L0Jhc2UtMC0xX0hhc05lc3RlZERhdGE+DQo8L2ExOkNhbGxTaXRlX3gwMDJCX1RyYWNlU2VyaWFsaXNlckhlbHBlcj4NCjwvU09BUC1FTlY6Qm9keT4NCjwvU09BUC1FTlY6RW52ZWxvcGU+DQo="
      }
    },
    {
      "NodeId": "6bee10ab-31d3-4ca5-b19d-570e53899551",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_6bee10ab-31d3-4ca5-b19d-570e53899551": "PFNPQVAtRU5WOkVudmVsb3BlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zOnhzZD0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOlNPQVAtRU5DPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyIgeG1sbnM6U09BUC1FTlY9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvIiB4bWxuczpjbHI9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc29hcC9lbmNvZGluZy9jbHIvMS4wIiBTT0FQLUVOVjplbmNvZGluZ1N0eWxlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyI+DQo8U09BUC1FTlY6Qm9keT4NCjxhMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXIgaWQ9InJlZi0xIiB4bWxuczphMT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9jbHIvbnNhc3NlbS9Qcm90b0NvcmUvUHJvdG9Db3JlJTJDJTIwVmVyc2lvbiUzRDIuMC4zLjg4MTAlMkMlMjBDdWx0dXJlJTNEbmV1dHJhbCUyQyUyMFB1YmxpY0tleVRva2VuJTNEbnVsbCI+DQo8TnVtYmVyT2ZFbGVtZW50cz4xPC9OdW1iZXJPZkVsZW1lbnRzPg0KPEJhc2UtMF9IYXNEYXRhPnRydWU8L0Jhc2UtMF9IYXNEYXRhPg0KPEJhc2UtMF9EYXRhIGlkPSJyZWYtMyI+UEZOUFFWQXRSVTVXT2tWdWRtVnNiM0JsSUhodGJHNXpPbmh6YVQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNUzlZVFV4VFkyaGxiV0V0YVc1emRHRnVZMlVpSUhodGJHNXpPbmh6WkQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNUzlZVFV4VFkyaGxiV0VpSUhodGJHNXpPbE5QUVZBdFJVNURQU0pvZEhSd09pOHZjMk5vWlcxaGN5NTRiV3h6YjJGd0xtOXlaeTl6YjJGd0wyVnVZMjlrYVc1bkx5SWdlRzFzYm5NNlUwOUJVQzFGVGxZOUltaDBkSEE2THk5elkyaGxiV0Z6TG5odGJITnZZWEF1YjNKbkwzTnZZWEF2Wlc1MlpXeHZjR1V2SWlCNGJXeHVjenBqYkhJOUltaDBkSEE2THk5elkyaGxiV0Z6TG0xcFkzSnZjMjltZEM1amIyMHZjMjloY0M5bGJtTnZaR2x1Wnk5amJISXZNUzR3SWlCVFQwRlFMVVZPVmpwbGJtTnZaR2x1WjFOMGVXeGxQU0pvZEhSd09pOHZjMk5vWlcxaGN5NTRiV3h6YjJGd0xtOXlaeTl6YjJGd0wyVnVZMjlrYVc1bkx5SStEUW84VTA5QlVDMUZUbFk2UW05a2VUNE5DanhoTVRwRWFYSmxZM1JUYUdGd1pWTjBZWFJsSUdsa1BTSnlaV1l0TVNJZ2VHMXNibk02WVRFOUltaDBkSEE2THk5elkyaGxiV0Z6TG0xcFkzSnZjMjltZEM1amIyMHZZMnh5TDI1ellYTnpaVzB2VW1WMmFYUXVSV3hsYldWdWRITXZVbVYyYVhST2IyUmxjeVV5UXlVeU1GWmxjbk5wYjI0bE0wUXlMakF1TXk0NE9ERXhKVEpESlRJd1EzVnNkSFZ5WlNVelJHNWxkWFJ5WVd3bE1rTWxNakJRZFdKc2FXTkxaWGxVYjJ0bGJpVXpSRzUxYkd3aVBnMEtQSE4wY21sdVowbEVJR2xrUFNKeVpXWXRNeUkrWkRFNVptRTBaVFF0WTJNNVpTMDBNVFpsTFRobE9EUXRZMlJsWlRjNVlXWTNOVGhqTFRBd01HRmlPV0UxUEM5emRISnBibWRKUkQ0TkNqeHBiblJKUkQ0M01ESTRPRFU4TDJsdWRFbEVQZzBLUEhONWJtTkpaQ0JwWkQwaWNtVm1MVFFpUGpZd1lUSXpaV1F3TFRSaVltRXROR0prTlMxaE1qY3hMV0l4TldFM1lXUXpPVEZoT0R3dmMzbHVZMGxrUGcwS1BHMWhkR1Z5YVdGc1NXUStNekUwTXpZNVBDOXRZWFJsY21saGJFbGtQZzBLUEM5aE1UcEVhWEpsWTNSVGFHRndaVk4wWVhSbFBnMEtQQzlUVDBGUUxVVk9WanBDYjJSNVBnMEtQQzlUVDBGUUxVVk9WanBGYm5abGJHOXdaVDROQ2c9PTwvQmFzZS0wX0RhdGE+DQo8QmFzZS0wX0hhc05lc3RlZERhdGE+ZmFsc2U8L0Jhc2UtMF9IYXNOZXN0ZWREYXRhPg0KPC9hMTpDYWxsU2l0ZV94MDAyQl9UcmFjZVNlcmlhbGlzZXJIZWxwZXI+DQo8L1NPQVAtRU5WOkJvZHk+DQo8L1NPQVAtRU5WOkVudmVsb3BlPg0K"
      }
    },
    {
      "NodeId": "b398b6ad-805d-4c1e-bee3-ab7d2e3dfc57",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_b398b6ad-805d-4c1e-bee3-ab7d2e3dfc57": ""
      }
    },
    {
      "NodeId": "585c558f-a63f-4174-9657-26286360da03",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_585c558f-a63f-4174-9657-26286360da03": ""
      }
    },
    {
      "NodeId": "118b32d6-182c-4d17-aa74-a4d39e1e7934",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_118b32d6-182c-4d17-aa74-a4d39e1e7934": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.3.8810",
      "RunType": "Automatic",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 25.913094252121109,
      "EyeY": 29.908439000443476,
      "EyeZ": 26.88154544693689,
      "LookX": 21.078430888616158,
      "LookY": -15.156838230675532,
      "LookZ": -36.231831809201722,
      "UpX": 0.065636346217238642,
      "UpY": 0.99144486137521182,
      "UpZ": -0.11282267906216541
    },
    "NodeViews": [
      {
        "Id": "3083fc96270946bb9b778502a1dde6d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Alignment Curve",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3212.317849284007,
        "Y": -1344.4071097592152
      },
      {
        "Id": "23577b7b660849c3b1be1378abe2b99b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "CAD.CurvesFromCADLayers",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1952.6401410743576,
        "Y": -1817.483597184151
      },
      {
        "Id": "0db5fc1f9db740e9a161f2f66cb58934",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtParameter",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1295.7921959867465,
        "Y": -2013.9687614129011
      },
      {
        "Id": "a3ebd8e865f841239d6f25a3384d522c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PullOntoPlane",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1332.265702427628,
        "Y": -1664.5691375991114
      },
      {
        "Id": "07dd4f5ee2484216a9e3a365d39cc3b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.XY",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1555.4176817400728,
        "Y": -1605.5573687553685
      },
      {
        "Id": "43f8e036820e4f3c84edeb67af94a1d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.NormalAtParameter",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -118.47031561304743,
        "Y": -1721.2186101669315
      },
      {
        "Id": "7db8d636024d498291e462037a6a45be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.X",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -990.8464002095875,
        "Y": -2040.9946437496283
      },
      {
        "Id": "fcd87bcc9a8a4a3888d98cd0bd19180c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Y",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -988.93115740324606,
        "Y": -1943.4867737815578
      },
      {
        "Id": "07725cfbe14540e7be912f71d888eb1b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.ByCoordinates",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -711.11989648319332,
        "Y": -2010.8788690903889
      },
      {
        "Id": "a8c895c1ce8441049c17932839887285",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.ByOriginXAxisYAxis",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 309.34543532359294,
        "Y": -1922.4531650617328
      },
      {
        "Id": "2e2af0a5383844a6a9a76f844b0f0442",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.ParameterAtPoint",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -466.51872467873204,
        "Y": -1852.9779546767204
      },
      {
        "Id": "71c97f75d0c84bc7833e68a33d67a79f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ZAxis",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -10.45806386320146,
        "Y": -1875.7508342079504
      },
      {
        "Id": "09f7bb7dc217412ebe9fa6fd3c6ecba0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -327.08507538600293,
        "Y": -2217.5466838834491
      },
      {
        "Id": "3c2cb69bc4d3488382e3be7909835e38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6982.1259013825056,
        "Y": -686.358240694933
      },
      {
        "Id": "91a39b11ec7c445e8c6b8fb7f3256c83",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "StructuralFraming.BeamByCurve",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 7653.3765258470321,
        "Y": -698.97573321467746
      },
      {
        "Id": "36885b3fdd1b49bb87b3ae713abf2c40",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Levels",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 7330.3710241488134,
        "Y": -549.28468928538314
      },
      {
        "Id": "aea864467f3440cb89ab999bc17934b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Number of Spans",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3305.1914719524584,
        "Y": -940.9508185906559
      },
      {
        "Id": "ae8e093126964b0baeed95dc9a9ab6b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Deck Thickness",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3025.5040268398939,
        "Y": -464.16899272224
      },
      {
        "Id": "ea12697112184609968694254852fe03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Deck Width",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3017.2873207729922,
        "Y": -534.41852963201643
      },
      {
        "Id": "a79c21017da0427fa2483d56d94daa4b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Deck Slope Left",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3030.2321182924265,
        "Y": -380.63113184355905
      },
      {
        "Id": "2ea8bfc9c31e424cb9b34054b42e630d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Deck Slope Right",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3029.5491692488463,
        "Y": -306.97876214838811
      },
      {
        "Id": "0f10819ff1f14f9ca647ed195e44acb9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Calculate Pier Locations - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2913.5186102895723,
        "Y": -955.50168123633989
      },
      {
        "Id": "194b88f33fe94f749367c28b24b8bd7d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Deck Points - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 3622.1116776959825,
        "Y": -1747.530936703618
      },
      {
        "Id": "693ae8546692467eb54595528e1c40cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -988.91974133652707,
        "Y": -2207.2847312244594
      },
      {
        "Id": "22db744e12124371b35b61c0a12da076",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 557.38773633578307,
        "Y": -1737.0476388712041
      },
      {
        "Id": "461dc81f0f73445595217819f6c3b819",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Translate",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4119.883932105583,
        "Y": -1628.9961014906128
      },
      {
        "Id": "b523e397f0f744979655bbb19ae3632d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 3901.3667322053984,
        "Y": -1447.573141598195
      },
      {
        "Id": "e05c42664a9c48b7a110579501250f15",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ZAxis",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 3895.179944272475,
        "Y": -1584.9342825965671
      },
      {
        "Id": "9b43ede015784331877bc9dbf54ae58c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Girder Size",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3077.3946905733919,
        "Y": -38.051780314894586
      },
      {
        "Id": "2e02e179473146ee958541b8b1d2a7a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Number of Girders",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3094.9005617806815,
        "Y": 69.3175630898146
      },
      {
        "Id": "e2457d70018b470b838d23a9609dbf9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Overhang",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2995.5246363023107,
        "Y": 146.34339640188853
      },
      {
        "Id": "44a949fe957e4e9dba41ffb740a103d1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Min. Haunch",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3010.8723799856925,
        "Y": 221.03511355299054
      },
      {
        "Id": "ddbec0cc9ed843c1b9fb9ca5f48bcdee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Girder/Deck Joint Offset",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3047.0511804807566,
        "Y": 299.22800494555042
      },
      {
        "Id": "be368abd9a3c4d6888ee98ba76b9ee3b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Girder Lines Start - Phyton",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6540.5518734825173,
        "Y": -807.58026068645211
      },
      {
        "Id": "cd0728af96f4410c96737724b5ea852a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Girder Lines End - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6535.4547473071179,
        "Y": -566.478091629449
      },
      {
        "Id": "8d8ca65b2456495ab008dae9e3721ae4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Bearing Length",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3023.9114815666894,
        "Y": 454.38976556910961
      },
      {
        "Id": "dea0a4afbfbe4b6d8eacc90d81f63630",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Min. Pedestal Thickness",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3037.4419864320057,
        "Y": 595.18395504136527
      },
      {
        "Id": "b5152a0bb3344ce8ac911a3f711c14b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Pier Width",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3003.1792040607043,
        "Y": 676.15034571228284
      },
      {
        "Id": "e55611d86fb74ead91930a14da547ad4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Foundation Wdith",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3051.8890215758429,
        "Y": 754.62727393111822
      },
      {
        "Id": "4bcbc0ecf51f46a4a89638ae4c30e086",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Bottom of Foundation Elevation",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3062.75839557389,
        "Y": 921.947139515457
      },
      {
        "Id": "d5afed2ff72342b88258af59950b8a36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.ByOriginXAxisYAxis",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9319.1000401526217,
        "Y": -180.26721849697088
      },
      {
        "Id": "a4bf82c3f8fc4d12bdf4e41324d2f902",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.NormalAtParameter",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8962.5114638380619,
        "Y": -154.52753529258098
      },
      {
        "Id": "2ca16cc11bcf443e86110f16d3dac3fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.NormalAtParameter",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8949.718396442122,
        "Y": 223.97472538413302
      },
      {
        "Id": "f7510fb9ddd040388cfffd2fe1938d94",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.ByOriginXAxisYAxis",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9285.20101260261,
        "Y": 154.54109643331702
      },
      {
        "Id": "6922bbc461f246e28d99dafeaa4eada5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Bearing Geometry - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9645.4696701507419,
        "Y": -235.66282181272589
      },
      {
        "Id": "11510b4a49084206bb45afaf5648d024",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Beam Properties",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8585.5847294152227,
        "Y": -64.261404697276987
      },
      {
        "Id": "b743f108508e4a4aaeba939aacd78aa6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Bearing Thickness",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3024.886948343501,
        "Y": 525.31465226463467
      },
      {
        "Id": "cad03b2cf6474310b4e4aabcc3a872c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Pier Geometry - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9976.8358940856451,
        "Y": 1709.7775312209035
      },
      {
        "Id": "f3bad66848534c02a48dd3c16d433b88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Top of Pier Elevations - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9650.20001468951,
        "Y": 1588.3228547841934
      },
      {
        "Id": "7a56e9d3e5ef49c18e2fba73b58e0c1e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPerimeterPoints",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10188.542776634933,
        "Y": 1709.7207908584408
      },
      {
        "Id": "11dd5091614142edb0ffaa7e73830505",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Categories",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10455.450697606619,
        "Y": 1924.1284315743349
      },
      {
        "Id": "1fd30dfaab5b42c7a45870e80a78b2a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10461.497372572805,
        "Y": 1730.1084047290817
      },
      {
        "Id": "e4a905afdf2c4e17a0e563a38fc7eb42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "DirectShape.ByGeometry",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10760.457152482557,
        "Y": 1745.5656374372547
      },
      {
        "Id": "c390e1de3d87460f9eff0144a06b6a48",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPerimeterPoints",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9900.9540350369061,
        "Y": -233.12750369396525
      },
      {
        "Id": "b57e60b4127e474f9b32fa97b0aef195",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10155.19926506145,
        "Y": -230.79659177971
      },
      {
        "Id": "b4b15d2a02904149a58717835dd2e721",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9897.24098940095,
        "Y": -102.58458670163293
      },
      {
        "Id": "833ddd27f42d4b699d2f7e791d751d21",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Start Abutment Bottom Elevation",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3063.74279201639,
        "Y": 1185.58256945625
      },
      {
        "Id": "74413f07bbd3470e86058de5b4ad8577",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "End Abutment Bottom Elevation",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3063.986614654,
        "Y": 1265.28007891409
      },
      {
        "Id": "5e2b926df1794772b924079a4a02a275",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Backwall Thickness",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3026.01257159011,
        "Y": 1351.67437982486
      },
      {
        "Id": "09f6c56bc46445bbaacfad28446041ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Top of Bridge Seat Elevations - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9300.05273975662,
        "Y": 2607.8034309859727
      },
      {
        "Id": "45315731fbed466ca60c215d161f76f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Bridge Seat Geometry - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9637.3806212024465,
        "Y": 2817.6178251353235
      },
      {
        "Id": "2341459e1aab4b6ca1a245a2b7d57359",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPerimeterPoints",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10046.217374354494,
        "Y": 2826.8616480376131
      },
      {
        "Id": "a9ee741d9a5945b99d1dcfb1951bc9ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10315.385907061815,
        "Y": 2843.4631986777031
      },
      {
        "Id": "eb0160a4c41942a5ba01e48e458a484c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "DirectShape.ByGeometry",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10652.206319277075,
        "Y": 2839.9901152331231
      },
      {
        "Id": "093d0d6e065f4159afe97e1f591ef2de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Categories",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10347.199864401133,
        "Y": 3018.552909370203
      },
      {
        "Id": "9f893342b3ba4c4dbb46296fadeb8e3b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10114.677766709568,
        "Y": 2954.2002009340813
      },
      {
        "Id": "ed7e25371ad640b7abb6cfd6fee0e6a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9940.6978386676619,
        "Y": 2888.2276311508181
      },
      {
        "Id": "b695ec2c42eb4585a525e4d7a07beff5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Back Wall Geometry - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9599.6967944438511,
        "Y": 3550.8992849284523
      },
      {
        "Id": "8b5583d4da2c428da891933ca9ed35c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPerimeterPoints",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9972.6923179709447,
        "Y": 3574.9676030679066
      },
      {
        "Id": "2e94f0e8ce4a4a0093e29ad8ecaa4569",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10041.152710326023,
        "Y": 3702.3061559643666
      },
      {
        "Id": "7f06e0d7732d4c70a409c38ccfab9dc7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10241.860850678266,
        "Y": 3591.5691537079965
      },
      {
        "Id": "587da0ea03194034bafebc33d424fad9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Categories",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10273.674808017586,
        "Y": 3766.6588644004964
      },
      {
        "Id": "a4d4b4929c7449bca7cc76110a93bc9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "DirectShape.ByGeometry",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10578.681262893526,
        "Y": 3588.0960702634166
      },
      {
        "Id": "c62cf3c093904414897d806f0c59c7b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPerimeterPoints",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10057.447277072191,
        "Y": 3120.6417480540858
      },
      {
        "Id": "89796d5d4a084c85acae530073c2ff1b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9951.9277413853615,
        "Y": 3182.0077311672858
      },
      {
        "Id": "88c59f498f2c4a62ababd961e0f0e890",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Bridge Seat Geometry - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9654.25381417661,
        "Y": 3115.1601186561061
      },
      {
        "Id": "b0e5a79655674e1cac43ee23b86c881c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10326.615809779512,
        "Y": 3137.2432986941758
      },
      {
        "Id": "b790ea5263004ab0b63f4a7f16a25fb6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10125.907669427272,
        "Y": 3247.9803009505458
      },
      {
        "Id": "b0091f77d40441528d4617fdab974ffa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Categories",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10358.429767118832,
        "Y": 3312.3330093866753
      },
      {
        "Id": "053f4e85220841c18199ba885545b354",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "DirectShape.ByGeometry",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10663.436221994772,
        "Y": 3133.7702152495958
      },
      {
        "Id": "1426f2fc46574cd6a6173265148ad0c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPerimeterPoints",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9982.5162586599727,
        "Y": 79.547954152401587
      },
      {
        "Id": "29bbc96c1fb9419b939bcf698de77595",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Bearing Geometry - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9596.3314995181481,
        "Y": 101.51109043520506
      },
      {
        "Id": "4afcb56932944a6895f296b606e4eb86",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10037.078757909178,
        "Y": 218.15663518622677
      },
      {
        "Id": "9b951ef18db9434fbce3529868f4b277",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10234.667342281042,
        "Y": 103.09078239620675
      },
      {
        "Id": "7b3f057f5d794029be8e30cc92002f75",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9871.6568079042172,
        "Y": 180.93201606052588
      },
      {
        "Id": "63d6858bd5b04cd782220c75d76560cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPerimeterPoints",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9983.3971381983556,
        "Y": 3892.1786126280494
      },
      {
        "Id": "430205b1a19645c19e2480431cf93739",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Back Wall Geometry - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9629.2125821928257,
        "Y": 3860.5859074799696
      },
      {
        "Id": "194f928caaa3446abe8656e1f4b9577f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10051.857530553436,
        "Y": 4019.5171655245094
      },
      {
        "Id": "9de4b9ff8dad46d7a6ef4c0380e9989e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10252.565670905675,
        "Y": 3908.7801632681394
      },
      {
        "Id": "b6cb051403994cf5852372cc591a3763",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Categories",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10284.379628244995,
        "Y": 4083.8698739606393
      },
      {
        "Id": "284179edc2764ed6a03d1ea394565595",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "DirectShape.ByGeometry",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10589.386083120935,
        "Y": 3905.3070798235594
      },
      {
        "Id": "466989f26e7747d2be32ccc7cb50daaa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9862.5641132265137,
        "Y": 3624.2018092600742
      },
      {
        "Id": "027278b0f07d429bbefaef57a5e537af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.Parameters",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2603.7963551650078,
        "Y": -157.14714245980858
      },
      {
        "Id": "74c6dae4625b4ee4aac5396c10a5d6e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Beam Depth",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2037.5263092832952,
        "Y": -205.50186154247433
      },
      {
        "Id": "3230e550f6544ef88d46014055c84137",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2292.5174842887882,
        "Y": -154.2835818144157
      },
      {
        "Id": "15a5bd16a16c4f08ae94d0af7c2d149f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Beam Width",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2062.3576126728381,
        "Y": -91.7965160659237
      },
      {
        "Id": "857ac4acfd8b405bab5f7c01509faea6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Pedestals Geometry - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10430.355882360351,
        "Y": 1144.8613761538572
      },
      {
        "Id": "3d6045bc630b431ab1ad6d84f308e774",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Top of Pier/Abut Elevations - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10101.958099576703,
        "Y": 840.77713236784859
      },
      {
        "Id": "df594c4b781549e1b32ed2b139370b48",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Categories",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 11294.083445483817,
        "Y": 1101.0684121257834
      },
      {
        "Id": "287d7f7c22364bcb9789eb309fc19bf2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "File Path",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3324.1877982593924,
        "Y": -788.34086061018456
      },
      {
        "Id": "5de5ffd6b41a4b099a74c2109e63f3f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPerimeterPoints",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10800.758218047424,
        "Y": 996.187724241259
      },
      {
        "Id": "0ddb7633e5ee4b7aa5f1ff4c45b81035",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 11132.040826241031,
        "Y": 938.25292025184422
      },
      {
        "Id": "0a55813b4ce1413cb39cca69aaa134bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10933.341550167574,
        "Y": 1106.2251224137065
      },
      {
        "Id": "73ee4c408af14de588fe277b9dda18fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Pedestal Thickness - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10628.173855845906,
        "Y": 849.10540476624408
      },
      {
        "Id": "e330a0feced5440590d7d6415127f076",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Foundation Overhang",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3024.9813556232807,
        "Y": 1436.71165746202
      },
      {
        "Id": "e3bb94f4b9b748a7afe396bc80126763",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Foundation Height",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3008.7828896821688,
        "Y": 1517.26251029664
      },
      {
        "Id": "d15f16b4b3514e628207d4237f860077",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Foundation Height",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3035.65241573746,
        "Y": 841.222505069143
      },
      {
        "Id": "a08727c03d8147cc9248f138285bfd4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Pier Foundation Geometry - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9856.7189061182526,
        "Y": 2030.2771930564661
      },
      {
        "Id": "1106b32bf4e648fb9d5cc5ce81b375fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPerimeterPoints",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10145.422686830845,
        "Y": 2029.7514052493909
      },
      {
        "Id": "b6ab3fbb4e1c462484348b3113318c28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10414.591219538144,
        "Y": 2046.3529558894809
      },
      {
        "Id": "6e10380393bf4f11ae220c001656bb3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Categories",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10446.405176877444,
        "Y": 2221.4426665819806
      },
      {
        "Id": "74c34e7df1ed416db5bacb79795b6fce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "DirectShape.ByGeometry",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10751.411631753344,
        "Y": 2042.8798724449009
      },
      {
        "Id": "26e10520307340a1b15367b6aef8877b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Abutment Foundation Geometry - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9622.89958271126,
        "Y": 4231.5036786337987
      },
      {
        "Id": "b4f0f7de9e81421e89ae33f32682e2d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9980.4810865557356,
        "Y": 4351.0990446958449
      },
      {
        "Id": "41ee2433af254f57987ed8773709de08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPerimeterPoints",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10094.293303299437,
        "Y": 4272.2262904625813
      },
      {
        "Id": "68954f3588e243a3ab6ea043c5dbf5af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10162.753695654506,
        "Y": 4399.5648433590513
      },
      {
        "Id": "b7f46ebdad484db4941625892a7d3c8e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10363.461836006758,
        "Y": 4288.8278411026713
      },
      {
        "Id": "97008bfd403744efb781a11a86cd04a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "DirectShape.ByGeometry",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10700.282248222016,
        "Y": 4285.3547576580913
      },
      {
        "Id": "3c9dc729e8634a108c85e97d9e71a7c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Categories",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10395.275793346078,
        "Y": 4463.9175517951717
      },
      {
        "Id": "9d35c038e73f4b9fadb3b7696299c8ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Pier Layout",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3331.7462934297259,
        "Y": -1164.9669486294533
      },
      {
        "Id": "568f7363e7144eeabb0740f16e07bf49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1541.0911690867404,
        "Y": -2079.0074672147712
      },
      {
        "Id": "558b18a672db4a1f827ec036c1552d94",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4509.9505026904244,
        "Y": -1776.4332827846115
      },
      {
        "Id": "416658a99c06486f8accf2dc1cd37195",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4666.0108806810131,
        "Y": -1916.0997857076975
      },
      {
        "Id": "e3e2c3899b724465bf90c9b9712cf3bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Categories",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4731.7108378336115,
        "Y": -1758.6385965916497
      },
      {
        "Id": "6bee10ab31d34ca5b19d570e53899551",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "DirectShape.ByGeometry",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 5056.54937948305,
        "Y": -1919.5728691522775
      },
      {
        "Id": "ba85135881f44444955b63f20bdb51bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4367.413851659574,
        "Y": -1839.7091348105519
      },
      {
        "Id": "67c843d0e93c44f5993ecffd34ce4a31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Pedestal Name - Pyhton",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 11013.294419297097,
        "Y": 1266.8407505253685
      },
      {
        "Id": "6b8ea2a7a95e444eb6285b3d0d8850f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Pedestal Name - Pyhton",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10514.792556939783,
        "Y": 180.56425667698323
      },
      {
        "Id": "24480f587b5a46ea86f92dc29f6754bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Pedestal Name - Pyhton",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10441.607567778352,
        "Y": -147.15800459800511
      },
      {
        "Id": "b9dc7301979743fc928c69e9b8168e0f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Categories",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10397.837388072985,
        "Y": -18.410387651373554
      },
      {
        "Id": "d6d99b3a85ab4fe482ea247cbd10934c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2576.6171598396245,
        "Y": -1066.3630520968077
      },
      {
        "Id": "46a35082e26a45fc96443356b5b3e686",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Deck Surface - Python",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4009.1244956352098,
        "Y": -1924.2031690540632
      },
      {
        "Id": "b398b6ad805d4c1ebee3ab7d2e3dfc57",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "DirectShape.ByGeometry",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10749.019236870132,
        "Y": -237.02965167939379
      },
      {
        "Id": "585c558fa63f4174965726286360da03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "DirectShape.ByGeometry",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10748.767324512944,
        "Y": 101.72051692500185
      },
      {
        "Id": "118b32d6182c4d17aa74a4d39e1e7934",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "DirectShape.ByGeometry",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 11654.947947962653,
        "Y": 1026.3495417064878
      },
      {
        "Id": "5106ee04ed9747f1ae118814b4fc38ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Select Model Elements",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3094.3791711810882,
        "Y": -1584.3913006942
      },
      {
        "Id": "7b4a554b1b5c4faf8e7be7a7b42cbad6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "ReferencePlane.Plane",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2202.2280189586909,
        "Y": -2462.3391401284307
      },
      {
        "Id": "7c2ad896ce704805b9ebd16880546353",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Intersect",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1845.6098697087064,
        "Y": -2464.1522985985762
      }
    ],
    "Annotations": [
      {
        "Id": "d07521df0908413e8d1a3162fb888de2",
        "Title": "Deck Input",
        "Nodes": [
          "ae8e093126964b0baeed95dc9a9ab6b3",
          "ea12697112184609968694254852fe03",
          "a79c21017da0427fa2483d56d94daa4b",
          "2ea8bfc9c31e424cb9b34054b42e630d"
        ],
        "Left": -3040.2321182924265,
        "Top": -630.41852963201643,
        "Width": 130.72809145253268,
        "Height": 391.43976748362832,
        "FontSize": 36.0,
        "InitialTop": -534.41852963201643,
        "InitialHeight": 372.43976748362832,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "55ec6e63ca794fbfbd816fe154207a3d",
        "Title": "Girder Input",
        "Nodes": [
          "9b43ede015784331877bc9dbf54ae58c",
          "2e02e179473146ee958541b8b1d2a7a7",
          "e2457d70018b470b838d23a9609dbf9a",
          "44a949fe957e4e9dba41ffb740a103d1",
          "ddbec0cc9ed843c1b9fb9ca5f48bcdee"
        ],
        "Left": -3104.9005617806815,
        "Top": -91.051780314894586,
        "Width": 319.0,
        "Height": 458.279785260445,
        "FontSize": 36.0,
        "InitialTop": -38.051780314894586,
        "InitialHeight": 482.279785260445,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e53e084bbc4048828b0dfa10efa254f0",
        "Title": "Pier Input",
        "Nodes": [
          "8d8ca65b2456495ab008dae9e3721ae4",
          "dea0a4afbfbe4b6d8eacc90d81f63630",
          "b5152a0bb3344ce8ac911a3f711c14b1",
          "e55611d86fb74ead91930a14da547ad4",
          "4bcbc0ecf51f46a4a89638ae4c30e086",
          "b743f108508e4a4aaeba939aacd78aa6",
          "d15f16b4b3514e628207d4237f860077"
        ],
        "Left": -3072.75839557389,
        "Top": 401.38976556910961,
        "Width": 230.0,
        "Height": 588.55737394634741,
        "FontSize": 36.0,
        "InitialTop": 454.38976556910961,
        "InitialHeight": 612.55737394634741,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0d00a82e881f4682903b7275161aca7b",
        "Title": "Girders",
        "Nodes": [
          "3c2cb69bc4d3488382e3be7909835e38",
          "91a39b11ec7c445e8c6b8fb7f3256c83",
          "36885b3fdd1b49bb87b3ae713abf2c40",
          "be368abd9a3c4d6888ee98ba76b9ee3b",
          "cd0728af96f4410c96737724b5ea852a"
        ],
        "Left": 6525.4547473071179,
        "Top": -860.58026068645211,
        "Width": 1502.9217785399142,
        "Height": 491.10216905700315,
        "FontSize": 36.0,
        "InitialTop": -807.58026068645211,
        "InitialHeight": 403.29557140106897,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d04553142c1a459899a2817f41be7ee4",
        "Title": "Beam Properties",
        "Nodes": [
          "027278b0f07d429bbefaef57a5e537af",
          "74c6dae4625b4ee4aac5396c10a5d6e5",
          "3230e550f6544ef88d46014055c84137",
          "15a5bd16a16c4f08ae94d0af7c2d149f"
        ],
        "Left": -2613.7963551650078,
        "Top": -258.50186154247433,
        "Width": 812.27004588171258,
        "Height": 259.70534547655063,
        "FontSize": 36.0,
        "InitialTop": -205.50186154247433,
        "InitialHeight": 258.70534547655063,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "437beb3568e4465eb299758af560b746",
        "Title": "Piers",
        "Nodes": [
          "cad03b2cf6474310b4e4aabcc3a872c3",
          "f3bad66848534c02a48dd3c16d433b88",
          "7a56e9d3e5ef49c18e2fba73b58e0c1e",
          "11dd5091614142edb0ffaa7e73830505",
          "1fd30dfaab5b42c7a45870e80a78b2a9",
          "e4a905afdf2c4e17a0e563a38fc7eb42",
          "a08727c03d8147cc9248f138285bfd4a",
          "1106b32bf4e648fb9d5cc5ce81b375fc",
          "b6ab3fbb4e1c462484348b3113318c28",
          "6e10380393bf4f11ae220c001656bb3c",
          "74c34e7df1ed416db5bacb79795b6fce"
        ],
        "Left": 9640.20001468951,
        "Top": 1535.3228547841934,
        "Width": 1381.2571377930471,
        "Height": 779.11981179778718,
        "FontSize": 36.0,
        "InitialTop": 1588.3228547841934,
        "InitialHeight": 778.11981179778718,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e550cf652c324b1482876c72a2fb188b",
        "Title": "Abutment Input",
        "Nodes": [
          "833ddd27f42d4b699d2f7e791d751d21",
          "74413f07bbd3470e86058de5b4ad8577",
          "5e2b926df1794772b924079a4a02a275",
          "e330a0feced5440590d7d6415127f076",
          "e3bb94f4b9b748a7afe396bc80126763"
        ],
        "Left": -3073.986614654,
        "Top": 1089.58256945625,
        "Width": 239.24382263760981,
        "Height": 495.67994084038992,
        "FontSize": 36.0,
        "InitialTop": 1185.58256945625,
        "InitialHeight": 476.67994084038992,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c47030df42484831b0eebea53a5722f3",
        "Title": "Abutments",
        "Nodes": [
          "09f6c56bc46445bbaacfad28446041ed",
          "45315731fbed466ca60c215d161f76f8",
          "2341459e1aab4b6ca1a245a2b7d57359",
          "a9ee741d9a5945b99d1dcfb1951bc9ef",
          "eb0160a4c41942a5ba01e48e458a484c",
          "093d0d6e065f4159afe97e1f591ef2de",
          "9f893342b3ba4c4dbb46296fadeb8e3b",
          "ed7e25371ad640b7abb6cfd6fee0e6a4",
          "b695ec2c42eb4585a525e4d7a07beff5",
          "8b5583d4da2c428da891933ca9ed35c2",
          "2e94f0e8ce4a4a0093e29ad8ecaa4569",
          "7f06e0d7732d4c70a409c38ccfab9dc7",
          "587da0ea03194034bafebc33d424fad9",
          "a4d4b4929c7449bca7cc76110a93bc9e",
          "c62cf3c093904414897d806f0c59c7b7",
          "89796d5d4a084c85acae530073c2ff1b",
          "88c59f498f2c4a62ababd961e0f0e890",
          "b0e5a79655674e1cac43ee23b86c881c",
          "b790ea5263004ab0b63f4a7f16a25fb6",
          "b0091f77d40441528d4617fdab974ffa",
          "053f4e85220841c18199ba885545b354",
          "63d6858bd5b04cd782220c75d76560cb",
          "430205b1a19645c19e2480431cf93739",
          "194f928caaa3446abe8656e1f4b9577f",
          "9de4b9ff8dad46d7a6ef4c0380e9989e",
          "b6cb051403994cf5852372cc591a3763",
          "284179edc2764ed6a03d1ea394565595",
          "466989f26e7747d2be32ccc7cb50daaa",
          "26e10520307340a1b15367b6aef8877b",
          "b4f0f7de9e81421e89ae33f32682e2d2",
          "41ee2433af254f57987ed8773709de08",
          "68954f3588e243a3ab6ea043c5dbf5af",
          "b7f46ebdad484db4941625892a7d3c8e",
          "97008bfd403744efb781a11a86cd04a4",
          "3c9dc729e8634a108c85e97d9e71a7c9"
        ],
        "Left": 9290.05273975662,
        "Top": 2554.8034309859727,
        "Width": 1671.2295084653961,
        "Height": 2002.114120809199,
        "FontSize": 36.0,
        "InitialTop": 2607.8034309859727,
        "InitialHeight": 2001.114120809199,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b241fdf84409440e809e55d33b5a4b4f",
        "Title": "Basic Geometry",
        "Nodes": [
          "23577b7b660849c3b1be1378abe2b99b",
          "0db5fc1f9db740e9a161f2f66cb58934",
          "a3ebd8e865f841239d6f25a3384d522c",
          "07dd4f5ee2484216a9e3a365d39cc3b7",
          "43f8e036820e4f3c84edeb67af94a1d3",
          "7db8d636024d498291e462037a6a45be",
          "fcd87bcc9a8a4a3888d98cd0bd19180c",
          "07725cfbe14540e7be912f71d888eb1b",
          "a8c895c1ce8441049c17932839887285",
          "2e2af0a5383844a6a9a76f844b0f0442",
          "71c97f75d0c84bc7833e68a33d67a79f",
          "09f7bb7dc217412ebe9fa6fd3c6ecba0",
          "693ae8546692467eb54595528e1c40cc",
          "22db744e12124371b35b61c0a12da076",
          "568f7363e7144eeabb0740f16e07bf49"
        ],
        "Left": -1962.6401410743576,
        "Top": -2270.5466838834491,
        "Width": 2716.0278774101407,
        "Height": 757.98931512808053,
        "FontSize": 36.0,
        "InitialTop": -2217.5466838834491,
        "InitialHeight": 756.98931512808053,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "57a748c2a5b6476f9c6c300881c0cdbb",
        "Title": "Basic Geometry Input",
        "Nodes": [
          "3083fc96270946bb9b778502a1dde6d4",
          "aea864467f3440cb89ab999bc17934b2",
          "0f10819ff1f14f9ca647ed195e44acb9",
          "287d7f7c22364bcb9789eb309fc19bf2",
          "9d35c038e73f4b9fadb3b7696299c8ed",
          "d6d99b3a85ab4fe482ea247cbd10934c"
        ],
        "Left": -3341.7462934297259,
        "Top": -1397.4071097592152,
        "Width": 1016.1291335901014,
        "Height": 703.06624914903068,
        "FontSize": 36.0,
        "InitialTop": -1344.4071097592152,
        "InitialHeight": 701.06624914903068,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c8843dfee64a4566b352e4f6dabc7590",
        "Title": "Deck",
        "Nodes": [
          "194b88f33fe94f749367c28b24b8bd7d",
          "461dc81f0f73445595217819f6c3b819",
          "b523e397f0f744979655bbb19ae3632d",
          "e05c42664a9c48b7a110579501250f15",
          "558b18a672db4a1f827ec036c1552d94",
          "416658a99c06486f8accf2dc1cd37195",
          "e3e2c3899b724465bf90c9b9712cf3bd",
          "6bee10ab31d34ca5b19d570e53899551",
          "ba85135881f44444955b63f20bdb51bd",
          "46a35082e26a45fc96443356b5b3e686"
        ],
        "Left": 3612.1116776959825,
        "Top": -1977.2031690540632,
        "Width": 1705.4377017870675,
        "Height": 622.63002745586823,
        "FontSize": 36.0,
        "InitialTop": -1924.2031690540632,
        "InitialHeight": 621.63002745586823,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "39187a69da0e407d856cb1e5defa48a2",
        "Title": "Bearings",
        "Nodes": [
          "d5afed2ff72342b88258af59950b8a36",
          "a4bf82c3f8fc4d12bdf4e41324d2f902",
          "2ca16cc11bcf443e86110f16d3dac3fc",
          "f7510fb9ddd040388cfffd2fe1938d94",
          "6922bbc461f246e28d99dafeaa4eada5",
          "11510b4a49084206bb45afaf5648d024",
          "c390e1de3d87460f9eff0144a06b6a48",
          "b57e60b4127e474f9b32fa97b0aef195",
          "b4b15d2a02904149a58717835dd2e721",
          "1426f2fc46574cd6a6173265148ad0c8",
          "29bbc96c1fb9419b939bcf698de77595",
          "4afcb56932944a6895f296b606e4eb86",
          "9b951ef18db9434fbce3529868f4b277",
          "7b3f057f5d794029be8e30cc92002f75",
          "6b8ea2a7a95e444eb6285b3d0d8850f6",
          "24480f587b5a46ea86f92dc29f6754bc",
          "b9dc7301979743fc928c69e9b8168e0f",
          "b398b6ad805d4c1ebee3ab7d2e3dfc57",
          "585c558fa63f4174965726286360da03"
        ],
        "Left": 8575.5847294152227,
        "Top": -290.02965167939379,
        "Width": 2434.4345074549092,
        "Height": 633.00437706352682,
        "FontSize": 36.0,
        "InitialTop": -237.02965167939379,
        "InitialHeight": 606.00437706352682,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "52ed820490444077b9d80ef647a9e659",
        "Title": "Pedestals",
        "Nodes": [
          "857ac4acfd8b405bab5f7c01509faea6",
          "3d6045bc630b431ab1ad6d84f308e774",
          "df594c4b781549e1b32ed2b139370b48",
          "5de5ffd6b41a4b099a74c2109e63f3f1",
          "0ddb7633e5ee4b7aa5f1ff4c45b81035",
          "0a55813b4ce1413cb39cca69aaa134bb",
          "73ee4c408af14de588fe277b9dda18fb",
          "67c843d0e93c44f5993ecffd34ce4a31",
          "118b32d6182c4d17aa74a4d39e1e7934"
        ],
        "Left": 10091.958099576703,
        "Top": 787.77713236784859,
        "Width": 1823.9898483859506,
        "Height": 572.06361815752,
        "FontSize": 36.0,
        "InitialTop": 840.77713236784859,
        "InitialHeight": 571.06361815752,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 1423.5891821426371,
    "Y": 1685.7368671088432,
    "Zoom": 0.64878890181400339
  }
}